<?xml version="1.0" encoding="UTF-8"?>
<frame-impl>
	<frame-statements>
		<frame-statement name="createCommentObject" template="table_id">
			INSERT INTO
			cmp_cment_obj_$table_id$ (
			svc_id, tkt_no, obj_id,
			tot_cment_cnt, dsp_tot_cment_cnt, tot_trbk_cnt,
			lst_cment_no,
			cment_obj_url,
			rgst_ymdt)
			VALUES
			(?, ?, ?, ?, ?, 0, ?, null, SYSTIMESTAMP)
		</frame-statement>

		<frame-statement name="getTotalCountForList" template="table_id">
			SELECT
			count(*)
			FROM
			cmp_cment_$table_id$
			WHERE
			svc_id = ? AND
			tkt_no = ? AND
			obj_id = ? AND
			dsp_yn = 'Y'
</frame-statement>

		<frame-statement name="listObjectComments" template="table_id">
			SELECT
			cment_no 			as comment_no
			, upr_cment_no 		as parent_comment_id
			, wrtr_mbr_id 		as writer_member_id
			, wrtr_ncknm 		as writer_nickname
			, psacn_no 			as personal_icon
			, scrt_wrg_yn 		as secret_yn
			, cment_cont		as contents	
			, font_no			as font_number
			, font_sz			as font_size
			, del_rsn_tp_cd		as deleted_flag
			, mod_ymdt			as modified_ymdt
			FROM
			cmp_cment_$table_id$
			WHERE
			svc_id = ? AND
			tkt_no = ? AND
			obj_id = ? AND
			dsp_yn = 'Y'
		ORDER BY 
			svc_id , obj_id , tkt_no , dsp_yn , sprr_cment_no ASC , cment_sort_id ASC
		FOR orderby_num() &gt; ? AND
		orderby_num() &lt; ?
</frame-statement>

<frame-statement name="getCommentObject" template="table_id">
	SELECT 
		svc_id as _svc_id , 
		tkt_no as _ticket , 
		obj_id as object_id , 
		tot_cment_cnt as total_comment_count , 
		dsp_tot_cment_cnt as display_total_comment_count , 
		lst_cment_no as last_comment_no , 
		tot_trbk_cnt as total_trackback_count , 
		cment_obj_url as object_url , 
		rgst_ymdt as registered_ymdt 
	FROM 
		cmp_cment_obj_$table_id$ 
	WHERE 
		svc_id = ? AND 
		tkt_no = ? AND 
		obj_id = ?
</frame-statement>


<frame-statement name="getCommentCountByUserInPeriod" template="table_id">
	SELECT 
		count(*) 
	FROM 
		cmp_cment_$table_id$ 
	WHERE 
		svc_id = ? AND 
		tkt_no = ? AND 
		obj_id= ? AND
		rgst_ymdt &gt; SYSTIMESTAMP - ? AND
		rgst_ymdt &lt; SYSTIMESTAMP AND
		wrtr_mbr_id = ?
</frame-statement>


<frame-statement name="newObjectId" template="table_id">
	SELECT 
		s_cmp_cment_$table_id$_obj_id.NEXT_VALUE
	FROM
		db_root
</frame-statement>

<frame-statement name="newCommentNo" template="table_id">
	SELECT 
		s_cmp_cment_$table_id$_cment_no.NEXT_VALUE
	FROM
		db_root
</frame-statement>
	
<frame-statement name="createWithCommentNo" template="table_id">
	INSERT INTO cmp_cment_$table_id$ ( 
		svc_id, tkt_no, obj_id,	cment_no, cment_tp_cd, 
		sprr_cment_no, upr_cment_no, 	cment_sort_id, 
		prit_rnk, rpl_lv_cnt, wrtr_mbr_id, wrtr_ncknm, wrtr_ip, psacn_no, prfl_photo_url, 
		pwd, wrtr_hompg_url, scrt_wrg_yn, cment_cont, 
    	font_no, font_sz, rgst_ymdt, mod_ymdt, del_ymdt, delr_mbr_id, 
  		dsp_yn, del_rsn_tp_cd, del_rsn_dtl_cont, spam_scr) 
  	VALUES ( 
  		?, ?, ?, ?, ?, 
  		?, ?, ?, 
  		?, ?, ?, ?, ?, ?, ?, 
  		?, ?, 'N', ?, 
		? , ? , systimestamp , systimestamp , NULL , NULL , 
		'Y', ?, NULL, ?) 
</frame-statement>

<frame-statement name="updateCommentObjForNewComment" template="table_id">
	UPDATE 
		cmp_cment_obj_$table_id$ 
	SET
  		tot_cment_cnt = tot_cment_cnt + 1,
  		dsp_tot_cment_cnt = dsp_tot_cment_cnt + 1,
  		lst_cment_no = ?
 	WHERE 
	   	svc_id = ? AND 
	   	tkt_no = ? AND 
	   	obj_id = ? 
</frame-statement>

<!-- BEGIN: dhlee add -->
<frame-statement name="listUserComments" template="table_id">
	SELECT
		   obj_id                     as _object_id
		   , cment_no                 as comment_no
		   , wrtr_mbr_id              as writer_member_id
		   , wrtr_ncknm               as writer_nickname
		   , scrt_wrg_yn              as secret_yn
		   , cment_cont               as contents  
		   , del_rsn_tp_cd            as delete_reason_code
		   , rgst_ymdt                as registered_date
		   , mod_ymdt                 as modified_date                 
	FROM
		cmp_cment_$table_id$
	WHERE  
		svc_id = ?
		AND tkt_no = ?
		AND wrtr_mbr_id = ?
		AND del_rsn_tp_cd = '-1'
	ORDER BY
		svc_id, tkt_no, wrtr_mbr_id, rgst_ymdt DESC
		FOR orderby_num() &gt; ? AND orderby_num() &lt;= ? 
-->
<!--		FOR orderby_num() &gt; CAST(? AS INT) AND orderby_num() &lt;= CAST(? AS INT)+CAST(? AS INT) -->
</frame-statement>
<!-- END: dhlee add -->

</frame-statements>
<frame-scripts>
<frame-script impl="impl_1">
	stmt = Statement.get('createCommentObject', IN.table_id);
	stmt.setInt(1, IN.svc_id);
	stmt.setInt(2, IN.tkt_no);
	stmt.setString(3, '' + IN.obj_id); //conversion to string
	stmt.setInt(4, IN.lst_cment_no); 
	stmt.setInt(5, IN.comment_count);
	stmt.setInt(6, IN.comment_count);
	
	n = stmt.executeUpdate();
	
	if(n != 1) {
	  throw 'impl_1: new comment object is not inserted';
	}
</frame-script>

<frame-script impl="impl_2">
	stmt = Statement.get('getTotalCountForList', IN.table_id);
	stmt.setInt(1, IN.svc_id);
	stmt.setInt(2, IN.tkt_no);
	stmt.setString(3, '' + IN.obj_id); 
	
	res = stmt.executeQuery();
	
	if(res.next()) {
	  OUT.count = res.getInt(1);
	} else {
          res.close();
	  throw 'impl_2: no select resultset';
	}
	res.close();
</frame-script>

<frame-script impl="impl_3">
	stmt = Statement.get('listObjectComments', IN.table_id);
	stmt.setInt(1, IN.svc_id);
	stmt.setInt(2, IN.tkt_no);
	stmt.setString(3, '' + IN.obj_id);
	stmt.setInt(4, IN.offset);
	stmt.setInt(5, IN.limit);
	
	res = stmt.executeQuery();

	/* do fetch job */
	nread = 0;
	while(res.next()) {
		cment_no = res.getInt(1);
		upr_cment_no = res.getInt(2);
		wrtr_mbr_id = res.getString(3);
		wrtr_ncknm = res.getString(4);
		psacn_no = res.getInt(5);
		scrt_wrg_yn = res.getString(6);
		cment_cont = res.getString(7);
		font_no = res.getInt(8);
		font_sz = res.getInt(9);
		del_rsn_tp_cd = res.getString(10);
		mod_ymdt = res.getTimestamp(11);
		nread++;
	}
	OUT.nread = nread;
	res.close();
</frame-script>

<frame-script impl="impl_4">
	stmt = Statement.get('getCommentObject', IN.table_id);
	stmt.setInt(1, IN.svc_id);
	stmt.setInt(2, IN.tkt_no);
	stmt.setString(3, '' + IN.obj_id);
	
	res = stmt.executeQuery();
	
	if(res.next()) {
		OUT.svc_id = res.getInt(1);
		OUT.tkt_no = res.getInt(2);
		OUT.obj_id = res.getString(3);
		OUT.tot_cment_cnt = res.getInt(4);
		OUT.dsp_tot_cment_cnt = res.getInt(5);
		OUT.lst_cment_no = res.getInt(6);
		OUT.tot_trbk_cnt = res.getInt(7);
		OUT.cment_obj_url = res.getString(8);
		OUT.rgst_ymdt = res.getTimestamp(9);
		OUT.found = 1;
	} else {
		OUT.found = 0;
	}
	res.close();
</frame-script>

<frame-script impl="impl_5">
	stmt = Statement.get('getCommentCountByUserInPeriod', IN.table_id);
	stmt.setInt(1, IN.svc_id);
	stmt.setInt(2, IN.tkt_no);
	stmt.setString(3, '' + IN.obj_id);
	stmt.setInt(4, IN.period_in_sec);
	stmt.setString(5, IN.wrtr_mbr_id);
	
	res = stmt.executeQuery();
	
	if(res.next()) {
		OUT.count = res.getInt(1);
	} else {
		res.close();
		throw 'impl_5: no result';
	}
	res.close();
</frame-script>

<frame-script impl="impl_6">
	stmt = Statement.get('newObjectId', IN.table_id);
	res = stmt.executeQuery();
	if(res.next()) {
		OUT.obj_id = 'object_' + IN.table_id + '' + res.getInt(1);
	} else {
		res.close();
		throw 'impl_6: no result';
	}
	res.close();
</frame-script>

<frame-script impl="impl_7">
	stmt = Statement.get('newCommentNo', IN.table_id);
	res = stmt.executeQuery();
	
	if(res.next()) {
		OUT.cment_no = res.getInt(1);
	} else {
		res.close();
		throw 'impl_7: no result';
	}
	res.close();
</frame-script>

<frame-script impl="impl_8">
	stmt = Statement.get('createWithCommentNo', IN.table_id);
	idx = 1;
	stmt.setInt(idx++, IN.svc_id);
	stmt.setInt(idx++, IN.tkt_no);
	stmt.setString(idx++, '' + IN.obj_id);
	stmt.setInt(idx++, IN.cment_no);
	stmt.setString(idx++, IN.cment_tp_cd);
	stmt.setInt(idx++, IN.sprr_cment_no);
	stmt.setInt(idx++, IN.upr_cment_no);
	stmt.setString(idx++, IN.cment_sort_id);
	stmt.setInt(idx++, IN.prit_rnk);
	stmt.setInt(idx++, IN.rpl_lv_cnt);
	stmt.setString(idx++, IN.wrtr_mbr_id);
	stmt.setString(idx++, IN.wrtr_ncknm);
	stmt.setString(idx++, IN.wrtr_ip);
	stmt.setInt(idx++, IN.psacn_no);
	stmt.setString(idx++, IN.prfl_photo_url);
	stmt.setString(idx++, IN.pwd);
	stmt.setString(idx++, IN.wrtr_hompg_url);
	stmt.setString(idx++, IN.cment_cont);
	stmt.setInt(idx++, IN.font_no);
	stmt.setInt(idx++, IN.font_sz);
	stmt.setString(idx++, IN.del_rsn_tp_cd);
	stmt.setInt(idx++, IN.spam_scr);
	
	stmt.executeUpdate();
</frame-script>

<frame-script impl="impl_9">
	stmt = Statement.get('updateCommentObjForNewComment', IN.table_id);
	stmt.setInt(1, IN.lst_cment_no);
	stmt.setInt(2, IN.svc_id);
	stmt.setInt(3, IN.tkt_no);
	stmt.setString(4, '' + IN.obj_id);
	
	n = stmt.executeUpdate();
	OUT.errmsg = null;
	if(n != 1) {
		//throw 'updateCommentObjForNewComment semantic error';
		OUT.errmsg = 'updateCommentObjForNewComment semantic error';
	}
</frame-script>
<frame-script impl="impl_10">
	stmt = Statement.get('listUserComments', IN.table_id);
	stmt.setInt(1, IN.svc_id);
	stmt.setInt(2, IN.tkt_no);
	stmt.setString(3, IN.wrtr_mbr_id);
	stmt.setInt(4, IN.offset);
	stmt.setInt(5, IN.offset_limit);
	
	res = stmt.executeQuery();

	/* do fetch job */
	nread = 0;
	while(res.next()) {
		obj_id = res.getString(1);
		cment_no = res.getInt(2);
		wrtr_mbr_id = res.getString(3);
		wrtr_ncknm = res.getString(4);
		scrt_wrg_yn = res.getString(5);
		del_rsn_tp_cd = res.getString(6);
		rgst_ymdt = res.getTimestamp(7);
		mod_ymdt = res.getTimestamp(8);
		nread++;
	}
	OUT.nread = nread;
	res.close();
</frame-script>
</frame-scripts>
</frame-impl>




