BUTTON.ADD1=Add
BUTTON.ADD=ADD
BUTTON.ADDCLASS=\u2193 Grant
BUTTON.ADDNEWPLAN=Add new plan
BUTTON.ADDVOLUME=Add volume
BUTTON.APPLY=&Apply
BUTTON.BACKUP=Backup
BUTTON.BEFORE=Before
BUTTON.CANCEL1=CANCEL
BUTTON.CANCEL=&Cancel
BUTTON.CHANGE=Change...
BUTTON.CHECK=Check
BUTTON.CHECKIFTHECURRENT=Check if the current definition of this virtual class is valid
BUTTON.CLOSE=&Close
BUTTON.COMPACT=Compact
BUTTON.CONNECT=Connect
BUTTON.COPY=Copy
BUTTON.CREATE=Create
BUTTON.DELETE=Delete
BUTTON.DELETEALL=Delete all
BUTTON.DELETECLASS=\u2191 Revoke
BUTTON.DELETEQUERYPLAN=Delete query plan
BUTTON.DELETEVOLUME=Delete volume
BUTTON.DETAIL=Detail
BUTTON.DOWN=\u2193
BUTTON.EDIT=Edit
BUTTON.EDITQUERYPLAN=Edit query plan
BUTTON.EXECUTEORIGINALQUERY=Execute log
BUTTON.EXECUTESTOREDQUERY=Execute stored log
BUTTON.EXIT=E&xit
BUTTON.FINISH=Run
BUTTON.HELP=&Help
BUTTON.HIDEHELP=Hide help
BUTTON.KILLALLTRANSACTIONS1=Kill all transactions associated with the same client host
BUTTON.KILLALLTRANSACTIONS2=Kill all transactions associated with the same program name
BUTTON.KILLALLTRANSACTIONS=Kill all transactions associated with the same user
BUTTON.KILLTHESELECTED=Kill the selected transaction only
BUTTON.KILLTRANSACTION=Kill transaction...
BUTTON.NEWSITE=New site
BUTTON.NEXT=Next
BUTTON.BEFORERESULTFILE=Previous result file
BUTTON.NEXTRESULTFILE=Next result file
BUTTON.OK=&OK
BUTTON.OPTIMIZE=Optimize
BUTTON.REFRESH=REFRESH
BUTTON.REGISTER=Register
BUTTON.REMOVE=Remove
BUTTON.RENAME=Rename
BUTTON.RESTORE=Restore
BUTTON.SAVE=Save
BUTTON.SAVELOGSTRING=Save log script
BUTTON.SETDEFAULTFONT=Restore default font
BUTTON.SETPATH=Set path
BUTTON.SHOWBACKUPVOLUME=Show backup volume information
BUTTON.TEST=test
BUTTON.UNLOAD=Unload
BUTTON.UP=\u2191
BUTTON.UPDATE=Update
BUTTON.VALIDATE=Validate
BUTTON.DIAGSAVE=Save
BUTTON.DIAGADD=add >
BUTTON.DIAGREMOVE=< remove
BUTTON.DIAGHELP=Help
BUTTON.UP=Up
BUTTON.DOWN=Down
BUTTON.LOGGINGSTART=Start logging
BUTTON.LOGGINGSTOP=Terminate logging
BUTTON.ANALIZECASLOG=Analyze
BUTTON.OPENFILE=Search...
BUTTON.SELECTALL=Select all
BUTTON.DESELECTALL=Deselect all
CHECK.ANALIZEOPTION_T=Transaction based analyze
CHECK.ACTIVATETRIGGER=Activate trigger status
CHECK.APPLSERVERMAX=APPL_SERVER_MAX_SIZE
CHECK.COMPRESSSIZE=COMPRESS_SIZE
CHECK.COPYINDIVIDUAL=Copy individual volumes
CHECK.RENAMEINDIVIDUAL=Rename individual volumes
CHECK.FORCEDELETE=Force delete backup volumes
TOOLTIP.FORCEDELETE=Remove backup volumes and backup information files
CHECK.DONTDISPLAYEACH=Don't display each download-complete message.
CHECK.DOWNLOADCOMPRESS=Download compress file
CHECK.INSERTUSERNAME=Insert username / password
CHECK.INSERTVOLUME=Insert volume name
CHECK.LEVEL0=Level0
CHECK.LEVEL1=Level1
CHECK.LEVEL2=Level2
CHECK.LOADINDEX=Load index
CHECK.LOADOBJECTS=Load objects
CHECK.LOADSCHEMA=Load schema
CHECK.LOADTRIGGER=Load trigger
CHECK.LOGBACKUP=LOG_BACKUP
CHECK.MOVE=Move
CHECK.NAME=Name
CHECK.OVERWRITE=Overwrite
CHECK.PRIORITYGAP=PRIORITY_GAP
CHECK.REMOVEARCHIVE=Remove archive log
CHECK.CHCKINGCONSISTENCY=Checking database consistency
CHECK.SPECIFYARESTORE=Specify a Restore Date
CHECK.PARTIALRECOVER=Partial Recovery
TOOLTIP.PARTIALRECOVER=perform partial recovery if any archive log is absent
CHECK.SQLLOG=SQL_LOG
CHECK.SQLLOGTIME=SQL_LOG_TIME
CHECK.TIMETOKILL=TIME_TO_KILL
CHECK.UPDATESTATISTICS=Update statistics
CHECK.USETEMPORARY=Use temporary hash file
CHECK.USINGAUTOMATIC=Using automatic volume addition
CHECK.OUTPUTPREFIX=Output prefix
TOOLTIP.OUTPUTPREFIX=Prefix of output file (Default:Database name)
CHECK.INCLUDEREF=Include references
TOOLTIP.INCLUDEREF=include references, default disabled(-i required)
CHECK.CLASSONLY=Require class only
TOOLTIP.CLASSONLY=include require class only.
CHECK.DELIMITED=Delimited identifier
TOOLTIP.DELIMITED=Delimited identifier
CHECK.CACHEDPAGES=Cached pages
TOOLTIP.CACHEDPAGES=Number of cached pages, default 100
CHECK.LOFILE=Lo file per a directory
TOOLTIP.LOFILE=lo file count per a directory, default 0
CHECK.DELETEBACKUP=Delete backup volumes
TOOLTIP.DELETEBACKUP=Force delete backup volumes and information file.
ERROR.NOCONNECTSITE=Cannot connect to server.
ERROR.SELECTDATABASENAME=Select database name.
ERROR.ERRORSERVERDIAGINFO=Diag information is not available.
ERROR.EMPTYDIAGTARGETLIST=Select the target object.
GROUP.ADDINGPARAMETER=Adding parameter and value
GROUP.ADVANCEDOPTION=Advanced option
GROUP.AUTHORITY=Authority
GROUP.AVAILABLEBACKUP=Available backup information
GROUP.BACKUPFILEINFORMATION=Backup file information
GROUP.BACKUPPERIOD=Backup period/time
GROUP.BASICINFORMATION=Basic information
GROUP.BLOCKEDLOCKHOLDERS=Blocked lock holders
GROUP.BROKERENVIRONMENT=Broker environment variable setting
GROUP.CLIENTSCURRENTLY=Clients currently connected to the database
GROUP.DATABASENAME=Database name
GROUP.DESCRIPTION=Description
GROUP.DESTINATIONDATABASE=Destination database
GROUP.ENTERAQUERYSPECIFICATION=Enter a query specification (SQL)
GROUP.FILEINFORMATION=File information
GROUP.FILENAMETOSAVE=File name to save
GROUP.GENERICVOLUME=Generic volume information
GROUP.HOSTINFORMATION=Host information
GROUP.HOSTSYSTEMTYPE=Host system type
GROUP.JOBPRIORITY=Job priority
GROUP.LOADOPTION=Load option
GROUP.LOCALDATABASE1=Local database
GROUP.LOCALDATABASE=Local database name
GROUP.LOCKHOLDERS=Lock holders
GROUP.LOCKWAITERS=Lock waiters
GROUP.LOGS=Logs
GROUP.LOGVOLUMEINFORMATION=Log volume information
GROUP.NEWADDITIONAL=New additional volume information
GROUP.OBJECTID= Object_ID
GROUP.OPTIONAL=Optional
GROUP.PARAMETERDESCRIPTION=Parameter description
GROUP.PARAMETERS=Parameters
GROUP.PERIOD=Period
GROUP.PREVIOUSBACKUP=Previous backup information
GROUP.QUERYSTATEMENT=Query statement
GROUP.REGISTEREDQUERY=Registered query plan
GROUP.RELATEDTOCLIENT=Related to client/server request
GROUP.RELATEDTOLOCKING=Related to locking
GROUP.RELATEDTOMEMORY=Related to memory
GROUP.REPORT=Report
GROUP.RESTOREDATEAND=Restore date and time
GROUP.SOURCEDATABASE=Source database
GROUP.STATUSPRIORITY=Status/priority
GROUP.SYSTEMPARAMETER=System parameter
GROUP.THECONTENTSOF1=The contents of the object lock table
GROUP.THELOCKSETTINGS=The lock settings for the server
GROUP.TIME=Time
GROUP.TRANSACTIONS=Transactions:
GROUP.UNLOADEDFILE=Unloaded file
GROUP.UNLOADOPTION=Unload option
GROUP.VALIDATION=Validation:
GROUP.VIRTUALQUERY=Virtual query apec
GROUP.VOLUMEPURPOSE1=Volume purpose: INDEX
GROUP.VOLUMEPURPOSE=Volume purpose:  DATA
GROUP.UNLOADTARGET=Unload target
GROUP.SCHEMA=Schema
GROUP.DATA=Data
LABEL.ACTIVEDATABASE=Available database list.
LABEL.ACTIVEREQUESTS=Active_requests
LABEL.ACTIVETRANSACTIONS=Active transactions of database:
LABEL.ADDAMETHODFILE=Add a method file
LABEL.ADDANEWATTRIBUTE=Add a new attribute
LABEL.ADDANEWCONSTRAINT=Add a new constraint
LABEL.ADDANEWMETHOD=Add a new method
LABEL.ADDANEWRESOLUTION=Add a new resolution
LABEL.ADDASUPERCLASS=Add a superclass
LABEL.ALIASNAMEOPTIONAL=Alias name(optional):
LABEL.ANALYSISRESULT=Analyze result
LABEL.RESTARTAP=\nAll running jobs on this AS\nwill be initialized.\n 
LABEL.APPLICATIONSERVER=Application server number:
LABEL.APPLROOT=APPL_ROOT
LABEL.ARGUMENTDOMAIN=Argument domain:
LABEL.ASMAXIMUM=AS maximum
LABEL.ASMINIMUM=AS minimum
LABEL.ASTYPE=AS type
LABEL.ATTRIBUTEORMETHOD=Attribute or method name:
LABEL.ATTRIBUTES1=Attributes
LABEL.ATTRIBUTES=Attributes:
LABEL.ATTRIBUTESSELECT=Attributes (Select one or more)
LABEL.AUTOSTARTED=Database will start when CUBRID Service started.
LABEL.AVAILABLEUNLOADED=Available unloaded databases
LABEL.BACKUPDIRECTORY=Backup directory
LABEL.BACKUPID=Backup ID:
LABEL.BACKUPLEVEL1=Backup level:
LABEL.BACKUPLEVEL=Backup level
LABEL.BACKUPPATH=Backup path:
LABEL.BACKUPTIME=Backup time:
LABEL.BROKERNAME=Broker name
LABEL.BROKERPORT=Broker port
LABEL.CASLOGFILE=Broker log file
LABEL.CE=CE
LABEL.SUPERCLASS=Super class: 
LABEL.CLASSNAME1=Class name:
LABEL.CLASSNAME=Class name
LABEL.CLASSTYPE=Class type:
CHECK.COMMITPERIOD=Commit period
LABEL.INDICES=Indices
LABEL.CONSTRAINTS=Constraints:
LABEL.CREATEANEWCLASS=Create a new class
LABEL.CREATETRIGGER=CREATE TRIGGER
LABEL.CURRENTADDTIONAL=Current addtional volume list
LABEL.DATABASEDIRECTORY=Database directory path
LABEL.DATABASE=Database
LABEL.DATABASENAME1=Database name
LABEL.DATABASENAME=Database name to create
LABEL.DATABASETYPE=Database type
LABEL.DATE=DATE
LABEL.DAY=DAY
LABEL.DEADLOCKDETECTION=deadlock_detection_interval
LABEL.DECAYCONSTANT=DECAY_CONSTANT
LABEL.DEFAULTVALUE=Default value:
LABEL.DESCRIPTION=Description:
LABEL.DIRECTORY=Directory
LABEL.DOMAIN=Domain:
LABEL.EDITATTRIBUTE=Edit attribute properties
LABEL.EDITMETHODPROPERTIES=Edit method properties
LABEL.EDITSYSTEMPARAMETER=Edit system parameter
LABEL.ERRORCONTENTS=     Error contents of  all databases are \n     displayed periodically.\n\n - ON/OFF:  Monitoring enable/disable\n - Period :  Setting period time to display
LABEL.EX0200AM2=ex) 0200 - (AM 2)
LABEL.EXABCDEFABC=ex) 'abcdef', 'abc'
LABEL.EXECUTE=EXECUTE
LABEL.EXECUTERESULT=Execute result
LABEL.EXTENDEDVOLUME=Extended volume path
LABEL.EXTENSIONPAGE=Extension page
LABEL.FILELOCATION=File location
LABEL.FILEPATH=File path:
LABEL.FONT=Font
LABEL.FREEDISKSPACE=Free disk space:
LABEL.FROM=FROM
LABEL.FROMWHICHTHE=(from which the attribute/method is inherited)
LABEL.FUNCTIONNAME=Function name:
LABEL.GENERICVOLUME=Generic volume path
LABEL.HASHFILEDIRECTORY=Hash file directory
LABEL.HOSTADDRESS=Host address
LABEL.IF=IF
LABEL.INDEFAULTVALUE=in default value , must be enclosed
LABEL.INDEXED=Indexed:
LABEL.INPUTANEWNAME=Input a new name for the Class
LABEL.INSINGLEQUOTES=in single quotes.)
LABEL.LDBNAME=LDB name
LABEL.LEVEL0=Level 0:
LABEL.LEVEL1=Level 1:
LABEL.LEVEL2=Level 2:
LABEL.LOCALDATABASE=Local database name
LABEL.LOCKTIMEOUTINSECS=lock_timeout_insecs
LABEL.LOGFILEDIRECTORY=Log file directory path
LABEL.LOGFILESIZENUMBER=Log file size(number of pages)
LABEL.LOGIN=User name
LABEL.LOGVOLUMEPATH=Log volume path
LABEL.MAXACTIVE=MAX_ACTIVE
LABEL.MAXCLIENTS=max_clients
LABEL.MAXTHREADS=max_threads
LABEL.MEANSIFFREESPACE=When free space remains "Out-of-Space Warning Rate"(%) , Volume will be added.\n   ex) "0.15" means.  If free space remains 15%, volume will be added.
LABEL.METHODFILES=Method files:
LABEL.METHODNAME=Method name:
LABEL.METHODS=Methods:
LABEL.MINACTIVE=MIN_ACTIVE
LABEL.MONITORINGON=Monitoring ON/OFF:
LABEL.MONTH=MONTH
LABEL.MUSTBEANOBJECT=(Must be an object or .o file)
LABEL.MUSTBEENCLOSED=must be enclosed in single quotes.)
LABEL.NAME=Name:
LABEL.NAMEINHOST=Name in host
LABEL.NONAUTOSTARTED=Non-auto-started
LABEL.NOTEALLTYPES1=(Note: All types of character string literal
LABEL.NOTEALLTYPES=Note: All types of character string literal must be enclosed in single quotes.\nex) 'abcdef', 'abc'
LABEL.NOTNULLCONSTRAINT=NOT NULL constraint:
LABEL.NUMBEROFPAGES=Number of pages
LABEL.NUMDATABUFFERS=num_data_buffers
LABEL.NUMLOGBUFFERS=num_log_buffers
LABEL.NUMPAGES=Num pages
LABEL.NUMREPEATCOUNT=Repeat count
LABEL.NUMTHREAD=num concurrent exec
LABEL.OBJECTID1=Object_id
LABEL.OBJECTID=Object_ID
LABEL.ON=ON
LABEL.OUTOFSPACEWARNING=Out-of-Space warning rate(%)
LABEL.OWNER=Owner:
LABEL.PAGES=Pages
LABEL.VOLUMESIZE=Volume size
LABEL.PAGESIZEBYTES=Page size(bytes)
LABEL.PARAMETER=Parameter
LABEL.PASSWORD1=Password
LABEL.PATH=Path
LABEL.AUTOQUERYID=Query exec plan ID
LABEL.PERIODTIME=Execute time:
LABEL.PERIODDETAIL=Period detail:
LABEL.PERIODTYPE=Period type:
LABEL.PERIODTYPECHOICE=     - Period type:  choice one among Monthly, Weekly, Daily\n \t \t and A specific day\n     - Period Detail: as selecting [Period Type] , this is determined\n     - Backup Time: start time to  backup\n     - Backup Level:  choice one among 0,1 and 2
LABEL.PERIODUNITMINUTE=Period(Unit:Minute):
LABEL.PRIORITY=Priority
LABEL.PURPOSE=Purpose
LABEL.QUERYSPECIFICATION=Query specification list
LABEL.LOGCONTENTS=log script
LABEL.RESOLUTIONS=Resolutions:
LABEL.RETURNVALUEDOMAIN=Return value domain:
LABEL.RIGHTCLICKTO=* Right-click to manage security informations
LABEL.SEC=Sec.
LABEL.SELECT=SELECT
LABEL.SELECTACLASS=Select a class:
LABEL.SELECTEDATTRIBUTES=Selected attributes
LABEL.SELECTEDQUERY=Selected query specification
LABEL.SHAREDATTRIBUTE=Shared attribute:
LABEL.SQLXTRIGGER=A SQL/X trigger can be created to invoke an action in response to a specific database activity.\nAs soon as the given activity is detected in the database, the trigger referencing that activity is notified or raised.\nA raised trigger can then initiate another database event.
LABEL.STATIC1=static
LABEL.STATIC=Static
LABEL.SUBCLASSES=Sub classes:
LABEL.SUPERCLASSES=Superclasses:
LABEL.TABLENAMEINLDB=Table name In LDB
LABEL.TARGETDATABASE=Target database name
LABEL.TARGETDIRECTORY=Target directory
LABEL.TARGETFILELIST=Target file list
LABEL.THEQUERYOPTIMIZER=The query optimizer uses statistical information such as the number of objects in a class, the number of pages to access, and the distribution of attribute values.
LABEL.THESTATUSANDPRIORITY=The STATUS and PRIORITY are the only parts of the trigger definition that can be altered.\nIf another part of the trigger needs to change (such as  the event target or condition expression), the trigger must be dropped and recreated.
LABEL.THISISADIALOG=  This is a dialog to make plan to  backup  a database automatically.\n\n     - Backup ID: a database can get some backup plans\n     - Backup Path: path to backup
LABEL.THISUTILITYRECLAIMS= This utility reclaims space from two sources\n\n  -OIDs of deleted objects\n  -multiple class representations
LABEL.TIME=TIME
LABEL.TRIGGERPRIORITY=Trigger priority
LABEL.TRIGGERSTATUS=Trigger status
LABEL.TT0FULLBACKUP= \t\t[ 0( Full backup) / 1( Incremental)/ 2(Incremental)]
LABEL.SCHEMATYPE=Schema type: 
LABEL.TYPE=Type: 
LABEL.ISCLASSMEMBER=Type: 
LABEL.UNIQUE=UNIQUE:
LABEL.USERID=User ID
LABEL.USERNAME1=User name:
LABEL.USERNAME=User name
LABEL.USETHISCOLUMN=Use column
LABEL.VALUE1=Value:
LABEL.VALUE=Value
LABEL.VERIFYADATABASE= Verify a database. If inconsistencies are found, please contact CUBRID Support to help interpret the output and address any indicated problem so that it should not reoccur.
LABEL.VIRTUALCLASS=Virtual class:
LABEL.VOLUMEINFORMATION=Volume information of this database
LABEL.VOLUMENAME=Volume name
LABEL.VOLUMEPATH=Volume path
LABEL.VOLUMEPURPOSE=Volume purpose
LABEL.WHENACLASSHAS=when a class has been extensively modified, you can use this tool to optimize the query processing
LABEL.WHERE=WHERE
LABEL.YEAR=YEAR
LABEL.YOUCOMPLETED1=You completed the steps required to setting broker information. \nThe broker information that will be set is defined below.
LABEL.YOUCOMPLETED=You completed the steps required to create a new broker. \nThe new broker that will be created is defined below.
LABEL.YOUHAVECOMPLETED=You have completed the steps required to create a new database. The new database that will be created is defined below
LABEL.TARGETOBJECT=Target object
LABEL.TARGETDATABASE=Target database
LABEL.NEWDBNAME=new Database name
LABEL.OBJECTSOURCE=Objects list that can select
LABEL.OBJECTTARGET=Objects list that is selected
LABEL.TEMPLATE=Template
LABEL.DIAGTEMPLATENAME=Name
LABEL.DIAGTEMPLATEDESC=Description
LABEL.DIAGSAMPLINGTERM_SEC=Sampling term(sec)
LABEL.DIAGSAMPLINGTERM=Sampling term
LABEL.DIAGTEMPLATECONTENTS=Object contents
LABEL.DIAGFILTER=Filter
LABEL.CANCEL=Cancel
LABEL.CURRENT=Current
LABEL.AVR=avr
LABEL.MAX=max
LABEL.MIN=min
LABEL.STATUSGRAPH=status graph
LABEL.SETEVENT=set event
LABEL.SETFILTER=set filter
LABEL.LOGGING=logging
LABEL.LOGNAME=log name
LABEL.LOGFILE=log file
LABEL.LOGDESC=log description
LABEL.SETLOGSTARTTIME=set start time
LABEL.SETLOGENDTIME=set end time
LABEL.VIEWCASRUNNERQUERYRESULT=Show query result
LABEL.VIEWCASRUNNERQUERYPLAN=Show query plan
LABEL.INDEXTYPE=Index type: 
CHECK.ESTIMATEDSIZE=Estimated size
LBL.ADDR=Address
LBL.PORT=Port
LBL.SITENAME=Site
LBL.USERID=ID
LBL.USERPASSWORD=Password
MENU.FILE=&FILE
MENU.EDIT=&Edit
MENU.VIEW=&View
MENU.TOOL=&Tools
MENU.ACTION=&Action
MENU.HELP=&Help
MENU.CONNECT=Connect
MENU.DIAG=Diagnostics
MENU.DIAGDEFAULTACTIVITYMONITOR=Activity profile with default template
MENU.DIAGDEFAULTDIAGREPORT=Diagnose with default template
MENU.DIAGDEFAULTSTATUSMONITOR=Status monitor with default template
MENU.DOCONNECT=&Connect...
MENU.DISCONNECT=&Disconnect
MENU.NEWQUERY=&New query
MENU.OPENQUERY=&Open query...
MENU.SAVEQUERY=&Save query
MENU.SAVEASQUERY=Save &as query...
MENU.MANAGEREXIT=E&xit
TOOLTIP.MENU.NEWQUERY=New
TOOLTIP.MENU.OPENQUERY=Open...
TOOLTIP.MENU.SAVEQUERY=Save
TOOLTIP.MENU.SAVEASQUERY=Save as...
MENU.EXECUTESCRIPT=E&xecute script file...
MENU.IMPORT=&Import from file...
MENU.OIDNAVI=OID &navigator...
MENU.MANAGERLOG=Show CUBRID Manager &log...
MENU.USERADMIN=CUBRID Manager &user management...
MENU.PASSWORDADMIN=\"admin\" is not allowed as administrator's password
TITLE.USERADMIN=CUBRID Manager user management
MENU.QUERYOPT=Set query editor &option...
TOOLTIP.MENU.EXECUTESCRIPT=Execute script file...
TOOLTIP.MENU.IMPORT=Import from file...
TOOLTIP.MENU.OIDNAVI=OID navigator...
TOOLTIP.MENU.MANAGERLOG=Show CUBRID Manager log...
TOOLTIP.MENU.USERADMIN=CUBRID Manager user management...
TOOLTIP.MENU.QUERYOPT=Set query editor option...
MENU.QUERYEDIT=Query editor
MENU.QUERYSAMPLE=Query sample...
MENU.ABOUT=&About CUBRID Manager...
TOOL.ABOUT=About CUBRID Manager
MSG.ABOUT=CUBRID Manager Client
MSG.COPYRIGHT=Copyright (C) 2008 Search Solution Corporation. All rights reserved by Search Solution.
MSG.ADDVOLPAGEMIN=insert page size more than 3
MSG.CONNECTTING=connecting
MSG.ERROR=error
MSG.INPUT_ADDR=Insert address
MSG.INPUT_ID=Insert ID
MSG.INPUT_PORT=Insert port number
MSG.INPUT_SITENAME=insert site name
MSG.INVALID_PORT=Invalid port number
MSG.NOAUTHORITY=There is no database to execute query.\nCheck the database status and authority.
MSG.QUIT_PROGRAM=Do you want to exit?
MSG.SELECTDB=Select database
MSG.SELECTSITE=Select site to remove
MSG.SITENOTFOUND=Site is not found
MSG.TOTALROWS=count of total rows
MSG.WARNING=Warning
MSG.OVERWRITEFILE=aleady exist. overwrite?
PAGE.CREATEDBPAGE1=Database name and creation parameters
PAGE.CREATEDBPAGE2=Additional volume information setting
PAGE.CREATEDBPAGE3=Sqlx.init parameters setting
PAGE.CREATEDBPAGE4=Completing new database creation wizard
PAGE.LOADDBPAGE1=Specify parameters for loading database
POPUP.DATABASEOPERATION=Database operations
POPUP.LOCKTRANSACTION=Lock/Transaction information
QEDIT.UNDO=&Undo
QEDIT.REDO=&Redo
QEDIT.COPY=&Copy
QEDIT.CUT=&Cut
QEDIT.PASTE=&Paste
QEDIT.FIND=&Find...
QEDIT.FINDNEXT=Find &next
QEDIT.REPLACE=R&eplace...
QEDIT.COMMENT=Convert to co&mment
QEDIT.UNCOMMENT=De&lete comment string
QEDIT.INDENT=&Insert tab
QEDIT.UNINDENT=&Delete tab
TOOLTIP.QEDIT.UNDO=Undo
TOOLTIP.QEDIT.REDO=Redo
TOOLTIP.QEDIT.COPY=Copy
TOOLTIP.QEDIT.CUT=Cut
TOOLTIP.QEDIT.PASTE=Paste
TOOLTIP.QEDIT.FIND=Find
TOOLTIP.QEDIT.FINDNEXT=Find next
TOOLTIP.QEDIT.REPLACE=Replace
TOOLTIP.QEDIT.COMMENT=Convert to comment
TOOLTIP.QEDIT.UNCOMMENT=Delete comment string
TOOLTIP.QEDIT.INDENT=Insert tab
TOOLTIP.QEDIT.UNINDENT=Delete tab
QEDIT.APPEND=Append to editor
QEDIT.AUTOCOMMIT=auto commit
QEDIT.CANCEL=Cancel
QEDIT.CLIPBOARD=copy
QEDIT.CLOSE=Close
QEDIT.COLUMNNAME=Column name
QEDIT.COMMIT=Commit
QEDIT.COMMITLINE=Commit period
QEDIT.COMPARERESULTS=compare result
QEDIT.DATATYPE=data type
QEDIT.EXECDATE=execute time
QEDIT.EXPORTRESULT=Export result
QEDIT.FILTER=filter
QEDIT.IMPORT2=Import
QEDIT.IMPORT=Import from file
QEDIT.IMPORTFILE=File name
QEDIT.INDEX=index
QEDIT.MAPPINGEXCEL=Mapping excel columns to attribute names
QEDIT.NEXTQUERY=next query
QEDIT.OIDNAVIGATOR=OID navigator
QEDIT.OIDVALUE=OID value
QEDIT.OPEN=open
QEDIT.OWNER=owner
QEDIT.PREVIOUSQUERY=previous query
QEDIT.QUERYHISTORY=query results list
QEDIT.QUERYINFO=query info
QEDIT.REFRESH=refresh
QEDIT.DELETE=Delete
QEDIT.REPLACEEDIT=replace text in editor
QEDIT.RESULT=result
QEDIT.ROLLBACK=rollback
QEDIT.RUN=execute
QEDIT.SAVE=save
QEDIT.SAVEAS=save as
QEDIT.SCHEMANAVIGATOR=Schema navigator
QEDIT.SCRIPTRUN=Execute script...
TITLE.SCRIPTRUN=Execute script result
QEDIT.SHOWQUERY=show query
QEDIT.SQL=query
QEDIT.TABLE=table
QEDIT.TARGETTABLE=Target table
QEDIT.TRIGGER=trigger
QEDIT.USER=user
QEDIT.USETHE=Use the first line data as attribute names
QEDIT.VIEW=Virtual class
QEDIT.ERROR=error\n
QEDIT.SETAUTOCOMMITERR=can not change autocommit status
QEDIT.SETCONNERR=connect error
QEDIT.RUNERR=execute error: 
QEDIT.EXPORT=Export
QEDIT.CONFIRMDELMSG=instance(s) will be deleted. Continue ?
QEDIT.UPDATE=update
QEDIT.UPDATEOK1=updated.
QEDIT.UPDATEOK2=instance(s) have been updated.
QEDIT.DELETEOK=instance(s) have been deleted.
QEDIT.FILESAVEMSG=File aleady exist\nOverwrite?
QEDIT.FILESAVEMSG2=Do you want save to file?
QEDIT.FILESAVE=save confirm
QEDIT.INSERTOK=instance(s) was inserted.
QEDIT.TOTAL=Total 
QEDIT.INSERTED= instance(s) inserted
QEDIT.INSERT=&Insert
QEDIT.INSERTFAIL=Insert fail: 
QEDIT.CREATEOK=create operation successfully completed.
QEDIT.DROPOK=drop operation successfully completed.
QEDIT.ALTEROK=alter operation successfully completed.
QEDIT.SYSTEM=system
QEDIT.NAME=name
QEDIT.SUPERCLASS=superclass
QEDIT.COLUMN=column
QEDIT.METHFILE=method file
QEDIT.VIEWSPEC=Virtual class query spec
QEDIT.METHOD=method
QEDIT.FROMCOLUMN=Excel column
QEDIT.TOCOLUMN=Attribute name
QEDIT.WARNING=Warning
QEDIT.TABLEWARN=Select target table
QEDIT.FILEWARN=Insert file name to import.
QEDIT.READWARN=Error while read file.
QEDIT.CNTWARN=Column count is not matched.
QEDIT.COLWARN=There is no column.
QEDIT.IMPORTOK=instance(s) has been inserted.
QEDIT.NEXT=Next
QEDIT.SELECTION=Selected row
QEDIT.ALL=All
QEDIT.FILEERROR=Invalid file.
QEDIT.UP=Up
QEDIT.DOWN=Down
QEDIT.INVALIDOID=Invalid OID.
QEDIT.ALREADYOID=OID aleady exist in upper node.
QEDIT.TOOMANYRECORD1=The result count is more than
QEDIT.TOOMANYRECORD2= instance(s).\nContinue?
QEDIT.COUNTALL= instance(s).
QEDIT.CLEAR=&Clear
QEDIT.COPYCLIPBOARD=Copy
QEDIT.FINDWORD=Find what
QEDIT.REPLACEWORD=Replace with
QEDIT.CASESENSITIVE=Match case
QEDIT.WRAPSEARCH=Wrap search
QEDIT.WHOLEWORD=Match whole word only
QEDIT.DIRECTION=Direction
QEDIT.REPLACEFIND=Replace
QEDIT.REPLACEALL=Replace all
QEDIT.INFORMATION=Information
QEDIT.TRANSACTIONACTIVE=Current transaction is active.\nPlease terminate transaction and retry.
QEDIT.COMMITBEFORECLOSE=Do you want commit current transaction?(YES:COMMIT, NO:ROLLBACK).
QEDIT.QUESTIONCOMMIT=\nDo you want commit?
QEDIT.IMPORTWARNROLLBACK=\n\nIf you select "No", transaction will be rollbacked.
QEDIT.IMPORTCOMMITED=instance(s) has been commited.\n
QEDIT.IMPORTERROR= line is invalid.\n
QEDIT.IMPORTROLLBACK=\nUncommited instance(s) will be rollbacked automatically.
QEDIT.ERRORHEAD=\nError description:\n  
QEDIT.ERRWHERE='th line is not executed(error)
QEDIT.SECOND= second
QEDIT.REPLACEALL=Replace all
QEDIT.NOTFOUND=String is not found.
QEDIT.REPLACECOMPLETE=items replaced
QEDIT.QUERYSEQ='th query
QEDIT.QUERYOK=executed successfully.
QEDIT.IMPORTERROR_INVALIDCOLUMNCOUNT=Invalid column count.
WAITING.IMPORT=Importing data from file
WAITING.EXPORT=Exporting data to file

# QueryEditor\uc758 \ucffc\ub9ac \ud50c\ub79c \uad00\ub828
TOOLTIP.QUERYPLAN=Display query plan
TOOLTIP.QUERYPLANENABLE=Enable query plan

# QueryPlan.java
QUERYPLAN.NOINFORMATION=Empty query plan.
QUERYPLAN.CHECKQUERYPLANENABLE=Enable query plan before execute query.
QUERYPLAN.ALLEXPANDED=All Expanded
QUERYPLAN.ALLUNEXPANDED=All unExpanded
QUERYPLAN.DETAILVIEW=Detail view
BUTTON.PREV=Previous
#BUTTON.NEXT=Next ##QEDIT.NEXT\ub97c \uc0ac\uc6a9
#BUTTON.CLOSE=Close ##\uc774\ubbf8 \uc788\uc74c.
TITLE.QUERYPLAN1=Query Plan
TITLE.QUERYPLAN2='th query

RADIO.CLASS=Class
RADIO.DATAFILECHECKAND=Data file check and load
RADIO.DATAFILECHECKONLY=Data file check only
RADIO.EVERYDAY=Every day
RADIO.EVERYMONTH=Every month
RADIO.EVERYWEEK=Every week
RADIO.FRIDAY=Friday
RADIO.INSERTOBJECT=Insert Object_id directly
RADIO.INSERTUNLOADED=Insert unloaded file path
RADIO.INSTANCE=Instance
RADIO.LEVEL0FILE=Level 0 file
RADIO.LEVEL1FILE=Level 1 file
RADIO.LEVEL2FILE=Level 2 file
RADIO.LOADONLY=Load only
RADIO.MICROSOFT32BIT=Microsoft 32-bit windows
RADIO.MONDAY=Monday
RADIO.NO=NO
RADIO.NORMAL=Normal
RADIO.OFF=Off
RADIO.ON=On
RADIO.ONETIMES=One times
RADIO.SATURDAY=Saturday
RADIO.SELECTATTRUBUTES=Select attrubutes for Object_id
RADIO.SELECTTHECLASSES=Select the classes to unload
RADIO.SELECTTRIGGER=Select trigger status
RADIO.SELECTUNLOADED=Select unloaded file from list
RADIO.SETTRIGGERPRIORITY=Set trigger priority
RADIO.SHARED=Shared
RADIO.SUNDAY=Sunday
RADIO.THURSDAY=Thursday
RADIO.TUESDAY=Tuesday
RADIO.UNIXORLINUXSYSTEM=Unix or linux system
RADIO.UNLOADALLCLASSES=Unload all classes
RADIO.UNLOADOBJECT=Unload object only
RADIO.UNLOADBOTH=Unload schema and object both
RADIO.UNLOADSCHEMA=Unload schema only
RADIO.VIEW=Virtual class
RADIO.WEDNESDAY=Wednesday
RADIO.YES=YES
RADIO.SCHEMAALL=All
RADIO.SCHEMASELECTED=Selected classes
RADIO.SCHEMANO=Not include
RADIO.DATASELECTED=Selected classed
RADIO.DATANO=Not include
TABLE.ADDR=Address
TABLE.ATTRIBUTE=Attribute
TABLE.AUTHORITY=Authority
TABLE.AUTOADD=Auto add
TABLE.AUTOQUERYID=Query exec plan ID: 
TABLE.BACKUPDATE=Backup date
TABLE.BACKUPID=Backup ID
TABLE.BACKUPPATH=Backup path
TABLE.BACKUPINTERVAL=Backup period
TABLE.BACKUPLEVEL=Backup level
TABLE.BACKUPTIME=Backup time
TABLE.BROKERNAME=Broker name
TABLE.BROKERTYPE=Broker type
TABLE.CHANGEDATE=Change date
TABLE.COMPENSATION=Event target
TABLE.CONDITION=Condition
TABLE.CONDITIONAPPLY=the time when trigger condition is evaluated
TABLE.CONTENT=Contents
TABLE.DBNAME=Database name
TABLE.DECAYCONSTANT=DECAY_CONSTANT
TABLE.DEFAULT=Default
TABLE.DIRECTORY=Directory
TABLE.EVENT=Event
TABLE.EXECUTIONTIME=Execution time
TABLE.FILENAME=File name
TABLE.FILEOWNER=File owner
TABLE.FILEPATH=File path
TABLE.FILESIZE=File size
TABLE.GROUP=Group
TABLE.HOST=Host
TABLE.INHERITANCE=Inheritance
TABLE.ISINDEXED=Is indexed
TABLE.ISNOTNULL=Is not null
TABLE.ISSHARED=Is shared
TABLE.ISUNIQUE=Is Unique
TABLE.JOBINFO=Job info
TABLE.LASTACCESS=Last access
TABLE.LDB=Remote database
TABLE.LOG=Log
TABLE.LOGTYPE=Type
TABLE.MAXVALUE=Max value
TABLE.MEMBER=Member
TABLE.MINVALUE=Min value
TABLE.NAME=Name
TABLE.OBJECT=Object
TABLE.OBJECTID=Object ID
TABLE.PATH=Path
TABLE.PCPU=cpu
TABLE.PORT=Port
TABLE.PRIORITY=Priority
TABLE.PROCESS=Process
TABLE.QUERYCONTENTS=Query
TABLE.QUERYPERIOD=Query period
TABLE.QUERYPERIODDETAIL=Query period detail
TABLE.QUERYTIME=Query time
TABLE.QUEUE=Queue
TABLE.QUEUEID=Queue ID
TABLE.REMAINSIZEPAGES=remained size(pages)
TABLE.REMOTEDB=Remote database name
TABLE.REQUEST=Request
TABLE.RULE=Rule
TABLE.SCHEMATYPE=Schema type
TABLE.SERVER=Server
TABLE.SERVERID=AP Server ID
TABLE.SESSION=Session
TABLE.SITENAME=Site name
TABLE.SIZE=Size
TABLE.SIZEMB=Size(MB)
TABLE.SQLLOG=SQL log
TABLE.STATUS=Status
TABLE.THREAD=Thread
TABLE.TIME=Time
TABLE.TOTALSIZEPAGES=Total size(pages)
TABLE.TRANSACTIONEXETIME=Transaction exec time
TABLE.TYPE=Type
TABLE.USER=User
TABLE.USERAUTHORITY=User authority
TABLE.USERID=User ID
TABLE.VALUE=Value
TABLE.VARIABLE=Variable
TABLE.VOLUMENAME=Volume name
TABLE.VOLUMEPATH=Volume path
TABLE.VOLUMETYPE=Volume type
TABLE.DIAGCATEGORY=Category
TABLE.DIAGTARGET=Target
TABLE.DIAGNAME=Name
TABLE.DIAGPATH=Path
TABLE.DESCRIPTION=Description
TABLE.DIAGVALUE=Value
TABLE.DIAGCOLOR=Color
TABLE.DIAGMAG=Magnification
TABLE.COUNTER=Counter
TABLE.DIAGSTATUSLOGNAME=Status log name
TABLE.DIAGSTARTTIME=Start time
TABLE.DIAGENDTIME=End time
TABLE.DIAGPROGRAMNAME=Program name
TABLE.DIAGTARGET=Target
TABLE.ERRORFILE=Error file
TABLE.TARGETDB=Target database
TABLE.ERRORNUM=Error number
TABLE.ERRTIME=Error time
TABLE.COREFILE=core file
TABLE.CONFIGFILE=Config file
TABLE.PACKAGEFILE=Package file
TABLE.TEMPLATE=template
TABLE.EVENTCLASS=Event class
TABLE.TEXTDATA=Text data
TABLE.BINDATA=Binary data
TABLE.INTDATA=Integer data
TABLE.TIMEDATA=Time
TITLE.ACTIVEDATABASESELECTDIALOG=Select database
TITLE.ADDBACKUPPLAN=Add backup plan
TITLE.ADDBROKER=Add broker
TITLE.ADDQUERYPLAN=Add new query automation
TITLE.ADDVOLDIALOG=Add volume
TITLE.ADD_ATTRIBUTEDIALOG=Add new attribute
TITLE.ADD_CONSTRAINTDIALOG=Add new constraint
TITLE.ADD_METHODDIALOG=Add new method
TITLE.ADD_METHODFILEDIALOG=Add new mothod file
TITLE.ADD_QUERYDIALOG=Virtual query specification
TITLE.ADD_QUERYPLANDIALOG=New query plan
TITLE.ADD_RESOLUTIONDIALOG=New resolution
TITLE.ADD_SUPERDIALOG=Add superclass
TITLE.ALTER_TRIGGERDIALOG=Change trigger information
TITLE.AUTOADDVOLDIALOG=Automation of adding volume
TITLE.AUTOADDVOL_LOGDIALOG=Automatically added volume logs
TITLE.AUTOBACKUP_ERRORDIALOG=Auto backup error log
TITLE.BACKFILE_DOWNDIALOG=Download backup-files
TITLE.BACKUPDBDIALOG=Backup database
TITLE.BROKERADD_PAGE1DIALOG=Add broker(Step1)
TITLE.BROKERADD_PAGE2DIALOG=Add broker(Step2)
TITLE.BROKERADD_PAGE3DIALOG=Add broker(Step3)
TITLE.BROKER_APPRESTARTDIALOG=Restart application server
TITLE.CASRUNNERRESULT=Broker log runner result #
TITLE.CASVERSION=Broker Version
TITLE.CHECKDBDIALOG=Check database
TITLE.CLASSINFO=Class property
TITLE.CLASSINFO_EDIT=Edit class property
TITLE.VIRTUALCLASSINFO=Virtual class property
TITLE.VIRTUALCLASSINFO_EDIT=Edit Virtual class property
TITLE.COMPACTDBDIALOG=Compact database
TITLE.COPYDBDIALOG=Copy and move database
TITLE.CREATEDB=Create new database
TITLE.CREATEDB_PAGE1DIALOG=Create new database wizard (Step 1)
TITLE.CREATEDB_PAGE2DIALOG=Create new database wizard (Step 2)
TITLE.CREATEDB_PAGE3DIALOG=Create new database wizard (Step 3)
TITLE.CREATEDB_PAGE4DIALOG=Create new database wizard (Step 3)
TITLE.CREATE_CLASSDIALOG=Create class
TITLE.CREATE_TRIGGERDIALOG=Create new trigger
TITLE.CUBRIDMANAGER=CUBRID Manager
TITLE.CUBRIDVERSION=CUBRID version information
TITLE.DATABASE_SERVERPROPERTYDIALOG=Database server properties
TITLE.DELETEDB_CONFIRMDIALOG=Delete database
TITLE.EDITQUERYPLAN=Edit query plan
TITLE.EDIT_ATTRIBUTEDIALOG=Attribute properties
TITLE.EDIT_METHODDIALOG=Method properties
TITLE.EDIT_SQLXINITDIALOG=Sqlx.init configuration
TITLE.EXECUTECASRUNNERRESULT=Broker log execution result
TITLE.FILEDOWN_PROGRESSDIALOG=Downloading file
TITLE.JOB_AUTOSTARTDIALOG=Set Auto-started databases
TITLE.JOB_BACKUPDIALOG=Backup automation
TITLE.JOB_SETDBSTATUSDIALOG=Database status monitoring
TITLE.KILLTRANDIALOG=Transaction information
TITLE.KILLTRAN_CONFIRMDIALOG=Kill transaction
TITLE.LOADDB=Database load
TITLE.LOADDB_PAGE1DIALOG=Database load wizard(Page1)
TITLE.LOADDB_PAGE2DIALOG=Database load wizard(Page2)
TITLE.LOCKINFO=Locking Information
TITLE.LOCKINFO_DETAILDIALOG=Lock information(Detailed)
TITLE.NEWUSER=User information
TITLE.OPTIMIZEDBDIALOG=Optimize database
TITLE.PROPPAGE1_BROKER_OFFSETDIALOG=Basic option
TITLE.PROPPAGE2_BROKER_OFFSETDIALOG=Advanced option
TITLE.PROPPAGE3_BROKER_OFFSETDIALOG=Summary
TITLE.PROPPAGE_CLASS_PAGE1DIALOG=General
TITLE.PROPPAGE_CLASS_PAGE2DIALOG=Inheritance
TITLE.PROPPAGE_CLASS_PAGE3DIALOG=Methods
TITLE.PROPPAGE_CLASS_PAGE4DIALOG=Virtual Class
TITLE.PROPPAGE_LOCKINFO1DIALOG=Lock setting/ client information
TITLE.PROPPAGE_LOCKINFO2DIALOG=Object lock table
TITLE.PROPPAGE_USER_AUTHORIZATIONDIALOG=User authorization information
TITLE.PROPPAGE_USER_GENERALDIALOG=General user information
TITLE.QUERY_PLANDIALOG=Query plan list
TITLE.REGISTER_LDBDIALOG=Register new local database
TITLE.RENAMEDBDIALOG=Rename database
TITLE.RENAME_CLASSDIALOG=Rename class
TITLE.RESTOREDBDIALOG=Restore database
TITLE.SECURITYDIALOG=Security management
TITLE.SETCASRUNNERCONFIG=Configure exec config
TITLE.SITE_MANAGER=Site manager
TITLE.UNLOADDBDIALOG=Unload database
TITLE.UPDATEBACKUPPLAN=Edit property
TITLE.STATUSTEMPLATECONFIG=New status template
TITLE.ACTIVITYTEMPLATECONFIG=Set activity profile template
TITLE.DIAGSTATUSMONITOR=status monitor
TITLE.DIAGACTIVITYMONITOR=activity profile
TITLE.DIAGANALIZECASSCRIPTLOG=Analyze broker script log
TITLE.STATUSTEMPLATE=Status template
TITLE.ACTIVITYTEMPLATE=Activity template
TITLE.STATUSWARNING=Status warning
TITLE.DIAGTEMPLATE=Diag template
TITLE.DIAGREPORT=Diag report
TITLE.TROUBLEINFO=Trouble information
TITLE.TABLEINSERTACTION=Insert instance
TOOL.ADDAPSERVERACTION=Add appl server
TOOL.ADDBROKERACTION=Add broker
TOOL.ADDEDVOLUMELOGACTION=Auto add volume log
TOOL.ADDVOLUMEACTION=Add volume...
TOOL.ALTERTRIGGERACTION=Edit trigger...
TOOL.AUTOBACKUPERRORLOGACTION=Error log auto backup
TOOL.BACKUP=Backup database...
TOOL.BACKUPPLANACTION=Add new backup automation...
TOOL.CASVERSION=Broker version...
TOOL.CHECK=Check database...
TOOL.COMPACT=Compact database...
TOOL.COPY=Copy database...
TOOL.CREATE=Create database...
TOOL.CREATENEWUSER=Add new user...
TOOL.DBSERVERPROPERTY=Database server property...
TOOL.DBSTATUSMONITORINGACTION=Database status monitor...
TOOL.DELETE=Delete database...
TOOL.DELETEBACKUPPLANACTION=Delete...
TOOL.DELETEBROKERACTION=Delete broker...
TOOL.DELETEQUERYPLANACTION=Delete query automation...
TOOL.DELETEUSERACTION=Delete user...
TOOL.DIAGSTATUS_NEWTEMPLATE=Add new status template...
TOOL.DIAGACTIVITY_NEWTEMPLATE=Add new activity template...
TOOL.DIAG_UPDATETEMPLATE=Modify template...
TOOL.DIAGMAKEPACKAGE=Make package
TOOL.DIAGSETLOGSTARTTIME=Set log start time
TOOL.DOWNLOADFILES=Download backup files
TOOL.DROPAPSERVERACTION=Delete appl server
TOOL.DROPTRIGGERACTION=Delete
TOOL.JOBPRIORITYACTION=Job priority
TOOL.LOAD=Load database
TOOL.LOCKINFO=Lock info
TOOL.LOGVIEWACTION=View log...
TOOL.NEWCLASSACTION=Add new class...
TOOL.NEWVIEWACTION=Add new virtual class...
TOOL.NEWTRIGGERACTION=Add new trigger...
TOOL.OPTIMIZE=Optimize database
TOOL.QUERYPLANACTION=Add new query automation...
TOOL.REFRESH=Refresh
TOOL.REFRESHINTERVAL=Set refresh interval
TOOL.RENAME=Rename database
TOOL.RESETCASADMINLOGACTION=Reset admin log
TOOL.RESTARTAPSERVERACTION=Restart appl server
TOOL.RESTORE=Restore database
TOOL.RESUMEBROKERACTION=Resume broker
TOOL.SERVERVERSION=Server version
TOOL.SETAUTOADDVOLUMEACTION=Set auto add volume
TOOL.SETAUTODBSTARTACTION=Set database auto start
TOOL.SETPARAMETERACTION=Set parameter
TOOL.SETPARAMETERUSINGCHANGERACTION=Set parameter using changer
TOOL.SETSOURCEENVACTION=set SOURCE_ENV file
TOOL.SQLXINIT=Set database configuration
TOOL.STARTBROKERACTION=Start broker
TOOL.STARTSERVER=Start server
TOOL.STOPBROKERACTION=Stop broker
TOOL.STOPSERVER=Stop server
TOOL.STARTCAS=Start broker environment
TOOL.STOPCAS=Stop broker environment
TOOL.SUSPENDBROKERACTION=Suspend broker
TOOL.TABLEDELETEACTION=Delete
TOOL.TABLEDROPACTION=Drop
TOOL.TABLEIMPORTACTION=Import from file...
TOOL.TABLEEXPORTACTION=Export to file...
TOOL.TABLEINSERTACTION=Insert instance...
TOOL.TABLEPROPERTYACTION=Class property...
TOOL.TABLEPROPERTY_EDITACTION=Edit class property...
TOOL.TABLERENAMEACTION=Rename...
TOOL.TABLESELECTALLACTION=Select all
TOOL.TABLESELECTCOUNTACTION=Select count(*)
TOOL.TRANINFO=Transaction info
TOOL.UNLOAD=Unload database
TOOL.UPDATEBACKUPPLANACTION=Edit property
TOOL.UPDATEQUERYPLANACTION=Edit property
TOOL.USERPROPERTYACTION=Edit user
TREE.ACCESS=Access log
TREE.ACTIVE=Active log
TREE.ACTIVITYLOGS=Activity log
TREE.CASLOGS=Broker script log
TREE.ACTIVITYMONITOR=Activity profile
TREE.ACTIVITYTEMPLATE=Template
TREE.ADMINLOG=Admin log
TREE.ARCHIVE=Archive log
TREE.BACKJOBS=Backup plan
TREE.BROKER=Broker
TREE.CAS=Broker
TREE.DBSPACE=Database space
TREE.DIAGACTIVITYLOG_ANALYZE=Analyze activity log
TOOL.DIAGLOG_DISPLAY=Display log...
TREE.DIAGACTIVITYLOG_REMOVE=Remove log
TOOL.DIAGACTIVITYMONITOR=Activity profile
TOOL.DIAGACTIVITY_CASLOGANAL=Analyze broker log...
TOOL.DIAGACTIVITY_CASLOGRERUN=Execute log...
TOOL.DIAGACTIVITY_IMPORTCASLOG=Convert to activity log
TOOL.DIAGACTIVITY_NEWTEMPLATE=Add new activity profile
TOOL.DIAGVIEWDIAGREPORT=View diag report
TOOL.DIAGSETDIAGSTARTTIME=set start time
TREE.DIAGDIAG=Diagnostics
TREE.DIAGDIAGTEMPLATE=Template
TREE.DIAGDIAGREPORT=Diag Report
TREE.DIAGDIAGREPORT_NEWTEMPLATE=Add new template
TREE.DIAGNEWSTATUSWARNING=Add new status warning
TREE.DIAGREMOVEDIAGREPORT=Remove report
TREE.DIAGREMOVELOGANALYSISREPORT=Remove analysis report
TREE.DIAGREMOVESTATUSWARNING=Remove
TOOL.DIAGREMOVETEMPLATE=Delete
TREE.DIAGSTARTSTATUSWARNING=Start status warning
TREE.DIAGSTATUS_NEWTEMPLATE=Add new status template
TREE.DIAGSTOPSTATUSWARNING=Stop status warning
TREE.DIAGSUB=Diag
TREE.DIAGUPDATESTATUSWARNING=Update status warning config
TREE.TROUBLETRACE=Trouble trace
TREE.ERROR=Error log
TREE.GENERIC=Generic volume
TREE.JOBAUTO=Job automation
TREE.LOGS=Logs
TREE.OBJECT_STATUS_ACTIVITY=Object status/activity
TREE.QUERYJOBS=Query plan
TREE.SCHEMA=Schema
TREE.SCRIPT=Script log
TREE.STATUSMONITOR=Status monitor template
TREE.STATUSWARNING=Status warning
TREE.SYSSCHEMA=System schema
TREE.TABLE=Class
TREE.TRIGGER=Trigger
TREE.USERS=Users
TREE.USERSCHEMA=User schema
TREE.VIEW=Virtual class
TXT.JOBQUEUESTATUS=Job queue status
TXT.NOAUTHORITY=No authority
TXT.PAGESIZE=Page size
TXT.REMAINSIZE=Remained size
TXT.STATUS=Status
TXT.STATUSSTART=Started
TXT.STATUSSTOP=Stopped
TXT.STOPPED=Stopped
TXT.TOTALSIZE=Total size
TXT.TYPE=Type
TXT.USE_REMAINSIZE=used/remained size(pages)
TXT.VERSION=Version
TXT.VOLUMEINFO=Volume information
TXT.VOLUMENAME=Volume name
TXT.WORKING=Started
WAIT.ADDAP=Adding application server
WAIT.BROKERRESUME=Resumming broker
WAIT.BROKERSTART=Starting broker
WAIT.BROKERSTOP=Stopping broekr
WAIT.BROKERSUSPEND=Suspending broker
WAIT.CASSTART=Starting broker
WAIT.CASSTOP=Stopping broker
WAIT.CUBRIDSTART=Starting database
WAIT.CUBRIDSTOP=Stopping database
WAIT.DELETE=Deleting
WAIT.DROPAP=Dropping application server.
WAIT.QUERYING=Executing query
WAIT.RESETCASADMIN=Resetting admin log
WARNYESNO.BROKERRESUME=All running application servers and jobs will be initialized! Continue anyway?
WARNYESNO.BROKERSTOP=All application servers and jobs will be stopped! Continue anyway?
WARNYESNO.BROKERSUSPEND=All running application servers and jobs will be suspended! continue anyway?
WARNYESNO.CASSTOP=All brokers and application servers and jobs will be stopped. Continue anyway?
WARNYESNO.CUBRIDSTOP=Are you sure you want to stop this database?
WARNYESNO.DELETE=Are you sure you want to delete?
WARNYESNO.DELETEALL=Are you sure you want to delete all data?(After delete you can not roll back)
WARNYESNO.DELETEBACKUPPLAN=Are you sure you want to delete this backup plan?
WARNYESNO.DELETEQUERYPLAN=Are you sure you want to delete this query plan?
WARNYESNO.DELETEUSER=Are you sure you want to delete this user?
WARNYESNO.DROPAP=All running jobs will be stopped! Continue anyway?
WARNYESNO.DROPTRIGGER=Are you sure you want delete this trigger?
WARNYESNO.REMOVELDB=Are you sure you want delete this remote database?
WARNYESNO.RESETCASADMIN=Are you sure you want reset admin log?
MSG.WAITING=Please wait...
ERROR.NETWORKFAIL=Can not connect to server. Please check CUBRID Manager Server state and settings of connection(port number, ip...).
ERROR.CANNOTCONNECT=Can not connect to server. Please check CUBRID Manager Server state and settings of connection(port number, ip...).
ERROR.LOGINFAILED=Log in failed
ERROR.MESSAGEFORMAT=Message Format error
ERROR.GETPARAMETERS=Failed to load parameter.
ERROR.DISCONNECTED=connection has been closed.
ERROR.LOGFILENOTEXIST=Log file doesn't exist.
ERROR.EMPTYLOGFILENAME=Insert log file name.
ERROR.INSERTUSERID=Insert user ID.
ERROR.SELECTTARGETFILE=Selete target file.
ERROR.SELECTBROKER=Select(insert) broker.
ERROR.NOBROKERTOLOGRUN=Broker does not exist.
TABLE.MAX=max
TABLE.MIN=min
TABLE.AVG=avg
TABLE.TOTALCOUNT=total count
TABLE.ERRCOUNT=error count
TABLE.CLASSATTRIBUTE=Class attribute
TABLE.PROPERTY=Property
MSG.GETDBINFO=Getting database information.
MSG.ALREADYCONNECTED=Aleady connected.
ERROR.UNKNOWNHOST=Unknown host.
ERROR.CONNECTFAIL=Can not connect to server. Please check CUBRID Manager Server state and settings of connection(port number, ip...).
ERROR.INTERVALISTOOSMALL=The input interval is too small(minimum:1 sec).
LABEL.REFRESHINTERVALOF=Refresh interval of broker information window
TABLE.TASKNAME=Task name
TITLE.MANAGERLOG=CUBRID Manager log
TITLE.ACCESSLOG=Access log
TITLE.ERRORLOG=Error log
TITLE.SELECTTARGETFILE=Select File(s) to analyze
ERROR.NODBNAME=Insert database name
ERROR.NT_DBNAME_LENGTH_TOOLONG=Database name length can not exceed 17.
TOOLTIP.NEWDBNAME=Specify the name of the database to create
TOOLTIP.EDIT_CREATEDB_NUMPAGE=Number of pages. minimum value is 100
TOOLTIP.EDIT_CREATEDB_LOGSIZE=Customize the size of the log files. minimum value is 100
TOOLTIP.COMBOPAGESIZE=Specifies the page size in bytes
TOOLTIP.EDITGENERICVOL=Database directory path
TOOLTIP.EDITLOGVOL=Log file directory path
TABLE.VOLNAME=Vol name
TABLE.PURPOSE=Purpose
TABLE.NUMPAGES=Num pages
TOOLTIP.EDITVOLNAME=The additional volume name
TOOLTIP.COMBOPURPOSE=The storage purpose of the volume
TOOLTIP.EDITVOLPATH=The exact pathname of the directory where the volume is created
TOOLTIP.EDITPAGESIZE=The number of pages for the new volume
TOOLTIP.BTNADDVOL=Add the additional volume
TOOLTIP.BTNDELETEVOL=Delete a selected volume information from the volume list
ERROR.INPUTVOLUMENAME=Input a volume name
ERROR.INVALIDVOLUMENAME=Invalid volume name
ERROR.INPUTPAGESIZE=Please ener a page size
ERROR.INVALIDVOLUMENAME_X=Invalid volume name(dbname_x...)
ERROR.ALREADYEXISTVOLUME=The volume name already exists in the list
MSG.DATABASENAMEIS=The database name is
MSG.NUMBEROFPAGESOFDATABASEWILLBE=The number of pages of database will be
MSG.SIZEOFAPAGEWILLBE=The size of a page will be
MSG.SIZEOFTHELOGFILEWILLBE=The size of the log file will be
MSG.ADDITIONALVOLUMES=The additional volumes below will be created
MSG.VOLUMENAMEWILLBE=The volume name will be
MSG.PURPOSEOFVOLUMEWILLBE=The purpose of volume will be
MSG.PAGESIZEOFVOLUMEWILLBE=The page size of volume will be
MSG.DIRECTORYPATHFORVOLUMEWILLBE=The directory path for volume will be
ERROR.DATABASEALREADYEXIST=The database name already exists.
WAITING.CHECKINGDIRECTORY=Checking directories
TITLE.NEWDIRECTORYDIALOG=Create new directories
LABEL.THEDIRECTORIES=The directories below do not exist\nDo you want to create these directories?
WAITING.CHECKINGFILES=Checking files
TITLE.CHECKFILEDIALOG=Overwrite confirm
GROUP.FILES=Files
LABEL.THEFILESBELOW=The files below already exist\nDo you want to overwrite these files?
WAITING.CREATINGDATABASE=Creating the database
MSG.CREATESUCCESS=The database has been created successfully
MSG.SUCCESS=Success
ERROR.RUNNINGDATABASE=Database aleady running. Stop database first.
TABLE.VOLUMESIZE_MB=Volume size(MB)
WAITING.GETTINGVOLUMEINFO=Getting volume information
WARNYESNO.DELETEDB=Do you really want to delete this database?
WAITING.DELETEDB=Deleting the database
TITLE.DBA_CONFIRMDIALOG=DBA Confirm
LABEL.INSERTPASSWORD=Insert Password
MSG.DETELEDBSUCCESS=Delete operation has been completed sucessfully
ERROR.INPUTNEWDBNAME=Insert new database name
WAITING.RENAMEDB=Renaming database...
MSG.RENAMEDBSUCCESS=Rename optertion has been completed successfully
ERROR.INVALIDDBNAME=Invalid database name.
ERROR.INVALIDCREATE_NUMPAGE=Page number is invalid.
ERROR.INVALIDCREATE_LOGSIZE=Invalid log size..
ERROR.CREATE_NUMPAGE_TOO_SMALL=Num page is too small.(\ucd5c\uc18c\uac12:100)
WARNYESNO.RENAMEDB=Are you sure you want to rename this database to
WAITING.CLASSINFO=Getting class information
TOOLTIP.EDITDBNAME=Selected database name
TOOLTIP.EDITTARGETDIR=Specify the directory to unload
TOOLTIP.CHECKUSETMP=Check this option to use a temporary file which is used for unloading
TOOLTIP.EDITTMPDIR=Specify the directory to create the temporary file
ERROR.INVALIDTARGETDIRECTORY=Invalid target directory
ERROR.INVALIDHASHFILEDIRECTORY=Invalid hashfile directory
ERROR.INVALIDEVALUE=Inserted value is invalid
WAITING.UNLOAD=Unloading the database
MSG.SCHEMAUNLOADOK=The schema has been unloaded successfully.
TITLE.UNLOADRESULTDIALOG=Unloaddb result
WAITING.GETTINGUNLOAD=Getting unloadinfo...
TOOLTIP.EDITPERIOD=LoadDB regularly commits the transaction after this number of instances has been inserted
TOOLTIP.EDITUSERNAME=Specify the name of the user under which database access is performed
TOOLTIP.ESTIMATEDSIZE=estimated number of instances (default: 5000)
TOOLTIP.ESTIMATEDSIZE2=estimated number of instances (default: computed)
TOOLTIP.CHECKSTAT=Check this option to update the internal statistics for every class into which instances are inserted
TOOLTIP.OIDISNOTUSE=Not use oid
COMBO.SELECTUNLOADEDDB=Select unloaded database to load
COMBO.NOUNLOADFILES=Unload files not found
TABLE.UNLOADEDTIME=Unloaded time
TABLE.FILELOCATION=File location
TOOLTIP.CHECKSCHEMA=Check this option to load a schema file
TOOLTIP.CHECKOBJECT=Check this option to load a object file
TOOLTIP.CHECKINDEX=Check this option to load a index file
TOOLTIP.CHECKTRIGGER=Check this option to load a trigger file
TOOLTIP.LISTSCHEMA=Select a schema file to load
TOOLTIP.EDITSCHEMA=Insert schema file path to load
TOOLTIP.LISTOBJECT=Select a object file to load
TOOLTIP.EDITOBJECT=Insert object file path to load
TOOLTIP.LISTINDEX=Select a index file to load
TOOLTIP.EDITINDEX=Insert index file path to load
TOOLTIP.LISTTRIGGER=Select a trigger file to load
TOOLTIP.EDITTRIGGER=Insert trigger file path to load
WAITING.LOADDB=Loading the database
ERROR.NOUNLOADINFORMATION=Unload information doesn't exist
ERROR.SELECTDBTOLOAD=Select a database to load
ERROR.SELECTSCHEMAFILETOLOAD=Select schema-file to load in the schema list
ERROR.SELECTOBJECTFILETOLOAD=Select object-file to load in the object list
ERROR.SELECTINDEXFILETOLOAD=Select index-file to load in the index list
ERROR.SELECTTRIGGERFILETOLOAD=Select trigger-file to load in the trigger list
TITLE.COMMAND_RESULTDIALOG=Command result
TABLE.LASTBACKUPDATE=Last backup date
TABLE.SIZE_MB=Size(MB)
COMBO.SELECTBACKUPLEVEL=Select backup level
ERROR.NOBACKUPDIR=Enter a directory path to store backup file
WARNYESNO.BACKUPDB=Are you sure you want to back up the database
ERROR.SELECTBACKUPLEVEL=Please select a Backup Level
WARNYESNO.BACKUPDBSPACEOVER=Backup process may be failed due to insufficient disk space\nAre you sure to continue?
WAITING.BACKUPDB=Backing up the database 
MSG.BACKUPDBSUCCESS=Backup operation has been completed successfully
TITLE.BACKUPVOLINFODIALOG=Backup volume information
WAITING.GETTINGBACKUPINFO=Getting backup information
TOOLTIP.RESTORECHECKDATE=Check this option to specify the time up to which to restore the database
WAITING.RESTOREDB=Restoring the database
MSG.RESTORESUCCESS=The database has been restored successfully.
TABLE.CURRENTVOLNAME=Current volume name
TABLE.NEWVOLNAME=New volume name
TABLE.NEWDIRECTORYPATH=New directory path name
ERROR.INPUTTARGETDB=Input a name of the target database
ERROR.INPUTLOGDIRECTORY=Input a directory for the log file
ERROR.NODBTOOVERWRITE=No such destination database exists to overwrite
ERROR.DESITINATIONDBEXIST=Desitination database  already exists
WARNYESNO.COPYDB=Are you sure to copy this database ?
ERROR.NOTENOUGHSPACE=Not enough space
WARNYESNO.COPYDBSPACEOVER=Copy process may be failed due to insufficient disk space\nAre you sure to continue?
WAITING.COPYDB=Copying the database
MSG.COPYDBSUCCESS=Copy operation has been completed successfully
COMBO.ALLCLASSES=All classes in the database
WARNYESNO.OPTIMIZEDB=Are you sure to optimize this database?
WAITING.OPTIMIZEDB=Optimizing the database
MSG.OPTIMIZESUCCESS=Optimize success: 
MSG.OPTIMIZEFAIL=Optimize fail: 
MSG.COMPACTDBSUCCESS=Compact operation has been completed successfully.
WARNYESNO.COMPACTDB=Are you sure to compact this database?
WAITING.COMPACTDB=Compacting the database
MSG.CHECKDBSUCCESS=Database check optertion has been completed successfully
WARNYESNO.CHECKDB=Do you really want to check this database?
WAITING.CHECKDB=Checking the database
ERROR.DATABASEISNOTRUNNING=Database is not active state.
LABEL.LOCKESCALATION=Lock escalation
LABEL.RUNDEADLOCKINTERVAL=Run deadLock interval
LABEL.STATUSMONITORLIST=Status Monitor List
LABEL.STATUSMONITORLIST_DB=db
LABEL.STATUSMONITORLIST_CAS=cas
LABEL.STATUSMONITORLIST_BROKER=broker
TABLE.INDEX=Index
TABLE.PNAME=PNAME
TABLE.UID=UID
TABLE.HOST=HOST
TABLE.PID=PID
TABLE.ISOLATIONLEVEL=ISOLATION LEVEL
TABLE.TIMEOUT=TIME OUT
TOOLTIP.EDITSQLXWANTTOMODIFY=Edit cubrid.conf file, if you want to modify these values
LABEL.CURRENTLOCKEDOBJECT=Current number of objects which are locked
LABEL.MAXIMUMLOCKEDOBJECT=Maximum number of objects which can be locked
TABLE.OID=OID
TABLE.OBJECT_TYPE=OBJECT_TYPE
TABLE.NUM_HOLDERS=NUM_HOLDERS
TABLE.NUM_BLOCKED_HOLDERS=NUM_BLOCKED_HOLDERS
TABLE.NUM_WAITERS=NUM_WAITERS
LABEL.OBJECTID=Object ID
LABEL.OBJECTTYPE=Object type
TABLE.TRAN_INDEX=Tran_index
TABLE.GRANTEDMODE=Granted mode
TABLE.COUNT=count
TABLE.NSUBGRANULES=Nsubgranules
TABLE.BLOCKEDMODE=Blocked mode
TABLE.STARTWAITINGAT=start waiting at
TABLE.WAITFORNSECS=Wait for nsecs
WAITING.GETTINGTRANSACTION=Getting transaction information
TOOLTIP.KILLTRANLIST=Information about the active transactions of database
TABLE.USERNAME=User name
TABLE.PROCESSID=Process ID
TABLE.PROGRAMNAME=Program name
WAITING.KILLTRANSACTION=Killing transaction
WARNYESNO.KILLTRANSACTIONS=Are you sure to kill those transactions
WARNYESNO.KILLTRANSACTION=Are you sure to kill the transaction
MSG.KILLTRANSUCCESS=Transactions have been successfully killed
WAITING.GETTINGSERVERINFO=Getting server information
ERROR.LOCKTIMEOUTINPUT=Invalid lock time out value(-1 ~ 65520)
WAITING.CHANGINGSERVERPROPERTY=Changing server property
MSG.SETSERVERSUCCESS=You must restart the database server to reflect the updated property
TOOLTIP.SQLXINITLIST=Please double-click item to change value.
ERROR.FILECANNOTCREATE=Can not create file.
LABEL.SOURCEFILE=Source file
LABEL.DESTFILE=Destination file
WARNYESNO.STOPRECEIVINGBACKUP=Do you want to stop receiving backup file?
ERROR.DOWNLOADINPROGRESS=File download is not completed.
ERROR.FILEOPEN=File open fail
ERROR.FILECLOSE=File close fail
ERROR.FILEWRITE=File write fail
MSG.DOWNLOADBACKUPSUCCESS=Backup file has been downloaded successfully
ERROR.CANCELDOWNLOAD=Download operation has been canceled.
WAITING.GETTINGBACKUPINFO=Getting backup info
ERROR.INVALIDBACKUPID=Invalid backup ID
ERROR.INVALIDBACKUPPATH=Invalid backup Path
ERROR.INVALIDSPECIALDAY=Invalid value for period detail.\n(Usage: yyyy-mm-dd)
ERROR.INVALIDBACKUPTIME=The backup time is Invalid.\nExample - 0230(when AM 2:30)
ERROR.BACKUPIDALREADYEXIST=Backup name already exists
ERROR.BACKUPIDDOESNOTEXIST=Backup ID does not exist
LABEL.HOUR=HOUR
LABEL.MINUTE=MINUTE
WAITING.UPDATEQUERYPLAN=Update query plan
ERROR.MINIMUMVALUE=The minimum interval value is 5
TITLE.JOB_GETDBSTATUSDIALOG=Database status
TABLE.DATABASE=Database
TABLE.ERRORCODE=Error code
TABLE.DATABASES=Databases
TOOLTIP.AUTOSTARTDB=Specify automatic start database list when the host starts
TOOLTIP.CURRENTDB=Current avaialble database list
WAITING.SETTINGAUTOSTART=Setting auto-start
MSG.AUTOSTARTSUCCESS=Setting the auto-started databases has been done successfully!
TABLE.ERRORTIME=Error time
TABLE.ERRORDESC=Error description
WAITING.GETTINGLOGINFORM=Getting log information
ERROR.CANNOTREMOVEPUBLIC=Cannot remove user public from group list
TABLE.OWNER=Owner
TABLE.SUPERCLASS=Superclass
TABLE.VIRTUAL=Type
ERROR.CANNOTGRANTTOYOURSELF=Cannot issue revoke/grant commands to yourself
ERROR.CLASSNAMEALREADYEXIST=Class name already exists
ERROR.USERNAMEALREADYEXIST=User name already exists
ERROR.INVALIDUSERNAME=Invalid user name
ERROR.USERPASSSETTING=Name and PassWord can't be contained \"User\" and \"Test\"!
ERROR.PASSWORDLENGTH=Your password should not exceed 8 chracters
ERROR.INVALIDNULLPASSWORD=Your new Password is not acceptable.
WAITING.NEWUSER=Creating new user
WAITING.UPDATEUSER=Updating user
ERROR.IDCANNOTBEDELETED=The selected ID cannot be deleted
LABEL.PAGESIZE=Page size: 
LABEL.FREESPACE=Free space: 
TOOLTIP.ADDVOLEDITNAME=Specify the name of volume. If blank, system default value will be used
TOOLTIP.ADDVOLEDITPAGE=Specify the page of volume.
TOOLTIP.ADDVOLEDITPATH=Specify the name of the directory where the volume is to be added. If blank, system default value will be used
TOOLTIP.ADDVOLEDITMBYTES=Translates the page of volume into Mega Bytes
TOOLTIP.ADDVOLCOMBOPURPOSE=Specify the purpose of volume to be added
ERROR.INVALIDVOLUMENAME=The volume name that you entered is invalid
ERROR.INVALIDVOLUMENAMEX=The volume name that you entered is invalid(dbname_x...)
ERROR.VOLUMESIZETOOBIG=Not enough disk space
MSG.ADDVOLEND1=\t\t======Add volume option======\n\nThe volume name will be set with its default value\n\nThe volume path is\n\t
MSG.ADDVOLEND2=\n\nThe number of pages is 
MSG.ADDVOLEND3=\n\nThe volume purpose is 
WAITING.ADDVOL=Adding volume
MSG.ADDVOLSUCCESS=The adding volume operation has been completed successfully
TOOLTIP.AUTOEXTPAGES=Specify automatical extension pages.");
TOOLTIP.WARNRATE=Specify warning rate about volume. Use the percentage of the used space/the total
ERROR.INVALIDWARNRATEDATA=Invalid value for Out-of-Space Warning Rate(DATA)
ERROR.TOO_SMALLWARNRATEDATA=The minimum Out-of-Space Warning Rate of data volume is 5%.
ERROR.TOO_LARGEWARNRATEDATA=The maximum Out-of-Space Warning Rate of data volume is 30%.
ERROR.INVALIDWARNRATEINDEX=Invalid value for Out-of-Space Warning Rate(INDEX)
ERROR.TOO_SMALLWARNRATEINDEX=The minimum Out-of-Space Warning Rate of index volume is 5%.
ERROR.TOO_LARGEWARNRATEINDEX=The maximum Out-of-Space Warning Rate of index volume is 30%.
ERROR.INVALIDEXTPAGEDATA=Invalid value for extension page(DATA)
ERROR.INVALIDEXTPAGEINDEX=Invalid value for extension page(INDEX)
ERROR.TOO_SMALL_EXTPAGEDATA=The minimum number of data page is 1000.
ERROR.TOO_SMALL_EXTPAGEINDEX=The minimum number of index page is 1000.
WAITING.SETTINGAUTOADDVOL=Setting auto add volume
MSG.SUCCESSAUTOADDVOL=Setting the automation of adding volumes has been done successfully
ERROR.INVALIDCLASSNAME=Invalid table(class) name
WAITING.CREATECLASS=Creating class
WAITING.CREATEVIEW=Creating virtual class
WAITING.RENAMECLASS=Renaming class
TABLE.DOMAIN=Domain
TABLE.INHERIT=Inherit
TABLE.INDEXED=Indexed
TABLE.NOTNULL=Not Null
TABLE.SHARED=Shared
TABLE.UNIQUE=Unique
TABLE.CLASSATTRIBUTES=Class attributes
TABLE.INSTANCEATTRIBUTES=Instance attributes
TABLE.ISCLASS=Class
TABLE.CLASSNAME=Class name
TABLE.ALIAS=Alias
TABLE.RETURNTYPE=Return type
TABLE.ARGUMENTTYPE=Argument type
TABLE.FUNCTIONNAME=Function name
TABLE.INDEXTYPE=Index type
TABLE.ISCLASSMEMBER=Type
TABLE.MEMBERNAME=Attributes
TOOLTIP.CLASSLISTQUERYSPECS=Query specifications for the given virtual class in the database (SQL statements)
TOOLTIP.CLASSLISTMETHODS=Information about all of the methods defined for the class
TOOLTIP.CLASSLISTMETHODFILES=List of all of method files for the class
TOOLTIP.CLASSEDITSUBCLASSES=List of the immediate subclasses of the class
TOOLTIP.CLASSLISTSUPERCLASSES=List of all superclasses defined for the class
TOOLTIP.CLASSLISTRESOLUTIONS=Information about all resolutions of the class
TOOLTIP.CLASSEDITCLASSNAME=Name of the class
TOOLTIP.CLASSEDITTYPE=Whether if the class is system-defined or user-defined
TOOLTIP.CLASSEDITOWNER=Table owner.\nPlease click to chagne.
#TOOLTIP.CLASSEDITOWNER=User who owns the class
TOOLTIP.CLASSEDITVIRTUALCLASS=Whether if the class is a virtual class or not
TOOLTIP.CLASSLISTATTRIBUTES=Information about all attributes of the class
TOOLTIP.CLASSLISTCONSTRAINTS=Information about all constraints of the class
ERROR.INVALIDATTRNAME=Invalid Attribute Name
ERROR.INVALIDATTRTYPE=Invalid Attribute Type
WAITING.ADDATTR=Adding Attribute
WAITING.DROPATTR=Dropping Attribute
ERROR.CANNOTDELDEFAULT=Cannot delete the existing default
WAITING.EDITATTR=Update Attribute
ERROR.NOATTRSELECTED=No attributes were selected
ERROR.INVALIDNAME=Invalid Name
ERROR.CONSTRAINTREAUIREINSTANCE=constraint requires only instance attributes
ERROR.NOTNULLREQUIREONEATTR=NOT NULL constraint requires only one attribute
WAITING.ADDCONSTRAINT=Adding constraint
WAITING.DROPCONSTRAINT=Drop constraint
WAITING.ADDSUPER=Adding superclass
WAITING.DROPSUPER=Drop superclass
ERROR.SELECTSUPERCLASSANDATTR=Select a superclass and an attribute/method name
ERROR.INVALIDALIASNAME=Invalid alias name
WAITING.ADDRESOLUTION=Adding resolution
WAITING.DROPRESOLUTION=Drop resolution
ERROR.INPUTMETHODNAME=Input method name and implementation
WAITING.ADDMETHOD=Adding method
WAITING.DROPMETHOD=Drop method
TABLE.NO=No
TABLE.YES=Yes
WAITING.UPDATEMETHOD=Updating method
ERROR.INPUTMETHODFILE=Input method file
WAITING.ADDMETHODFILE=Adding method file
WAITING.DROPMETHODFILE=Drop method file
LABEL.ADDQUERYSPEC=Add a new query specification
LABEL.EDITQUERYSPEC=Edit the query specification
WAITING.ADDQUERYSPEC=Adding query spec
WAITING.CHGQUERYSPEC=Changing query spec
WAITING.DROPQUERYSPEC=Drop query spec
WAITING.VALIDATEQUERYSPEC=Validate query spec
WAITING.VALIDATEVCLASS=Validate view
MSG.VALIDATESUCCESS=Validation succeeded
TOOLTIP.NEWTRIGGEREDITNAME=Name of trigger
TOOLTIP.NEWTRIGGERCOMBOEVENTTIME=Condition evaluate time
TOOLTIP.NEWTRIGGERCOMBOEVENTTYPE=Database event type
TOOLTIP.NEWTRIGGEREDITEVENTTARGET=Database event target(class or attribute)
TOOLTIP.NEWTRIGGEREDITCONDITION=Controls whether or not the trigger action is performed
TOOLTIP.NEWTRIGGERCOMBODELAYEDTIME=Action evaluate time
TOOLTIP.NEWTRIGGERCOMBOACTION=Trigger activity type
TOOLTIP.NEWTRIGGEREDITACTION=Trigger activity description
TOOLTIP.NEWTRIGGERSPINPRIORITY=Trigger priority level(zero is lowest)
TOOLTIP.NEWTRIGGERCOMBOSTATUS=state of trigger(enable/disable)
TOOLTIP.NEWTRIGGEREDITPRIORITY=Trigger priority level(zero is lowest)
ERROR.INVALIDTRIGGERNAME=Invalid trigger name
ERROR.ENTEREVENTTARGET=Please enter a event target
WAITING.NEWTRIGGER=Creating new trigger
MSG.NEWTRIGGERSUCCESS=Trigger has been created successfully
WAITING.DELTRIGGER=Removing trigger
MSG.DELTRIGGERSUCCESS=Trigger has been removed successfully
WAITING.ALTERTRIGGER=Changing trigger information
MSG.ALTERTRIGGERSUCCESS=Trigger Information has been changed successfully
TOOLTIP.ALTERTRIGPRIORITY=Trigger priority level(zero is lowest)
TOOLTIP.ALTERTRIGSTATE=state of trigger(enable/disable)
BUTTON.FIRST=First
BUTTON.LAST=Last
MSG.NULLLOGFILE=(The log file is empty)
TOOLTIP.COMBOBROKERADDASTYPE=The application server type that broker generates and manages.
TOOLTIP.EDITBROKERADDAPPLROOT=The directory where the script files are located. Application Server searches script files from APPL_ROOT directory. This value can be used in script files. It is not valid when application server type is CAS
TOOLTIP.EDITBROKERADDASMAX=The maximum number of Application Server that can be generated. (Default: 10)
TOOLTIP.EDITBROKERADDASMIN=The minimum number of Application Server generated when broker is initialized. (Default: 5)
TOOLTIP.EDITBROKERADDBNAME=The broker name. It does not distinguish upper and lower case
TOOLTIP.EDITBROKERADDPORT=The port number of the broker. It's a unique number in the system
TABLE.PARAMETER=Parameter
TOOLTIP.PARA_AUTO_ADD_APPL_SERVER=If the number of client's requests exceeds current the number of Application Server and if this value is set to ON, then it starts new Application Server automatically.(Default: OFF)
TOOLTIP.PARA_LOG_BACKUP=This parameter determines whether to save old access logs and error logs.\nThis parameter can be changed in on-line state.(Default: OFF)
TOOLTIP.PARA_SQL_LOG=This parameter determines whether to save logs when Application Server processes client's requests. The log file name is '$CUBRID_BROKER/log /script/ port_number.sql.log'.\nThis parameter can be changed in on-line state.(Default: OFF)
TOOLTIP.PARA_SQL_LOG_TIME=If Application Server processes a query, spends longer than the time set in SQL_LOG_TIME, that query is saved in $CUBRID_BROKER/log/script <Month> <Date> <Hour> <Min> <Sec>.<Running_time>.<port number> file.  If SQL_LOG_TIME is set to -1, the log is not saved.\nThis parameter can be changed in on line state.(Unit: sec, Default: 1000000)
TOOLTIP.PARA_TIME_TO_KILL=When AUTO_ADD_APPL_SERVER is ON, the idle Application Server dynamically added is killed by the comparison with the value set on TIME_TO_KILL.\nThis parameter can be changed in on-line state.(Default: 300)
TOOLTIP.PARA_SESSION=This parameter determines whether to keep  sessions, for WAS and VAS, or not. It is not valid when application server type is CAS.  (Default: OFF)
TOOLTIP.PARA_SESSION_TIMEOUT=The session will be terminated if the session status has been idle for longer time than the value set on this parameter.  (Unit: sec, Default: 30)
TOOLTIP.PARA_JOB_QUEUE_SIZE=The maximum size of jobs allowed in the queue. When the queue is full, new jobs are piled up on the backlog of socket. Jobs that are piled up on the backlog cannot be used or managed by on-line commands (cubrid_broker job_first / monitor).  (Default: 30, Maximum: 127)
TOOLTIP.PARA_FILE_UPLOAD_TEMP_DIR=The directory where the files sent from web server to UniWEB is being saved temporally. It is only valid when application server type is WAS.  (Default: tmp)
TOOLTIP.PARA_FILE_UPLOAD_DELIMITER=The delimiter used for sending files from web server to UniWEB. The delimiter must be specified by only one character. It is only valid when application server type is WAS.  (Default: ^)
TOOLTIP.PARA_ACCESS_LOG=This parameter determines whether to save access log.  (Default: ON)
TOOLTIP.PARA_ACCESS_LIST=Name of the file, which contains the client's IP addresses that it has the right to access. (Default: Not Specified)
TOOLTIP.PARA_SOURCE_ENV=The file that contains environment variables of Broker. Each Broker can contain different variables. The file extension must be env. (e.g.) DB_INCLUDE_OID 1
TOOLTIP.PARA_MAX_STRING_LENGTH=This parameter specifies the maximum length to be selected for data types such as bit, varbit, char, varchar, nchar, nchar varying.\nFor instance, retrieving a value of varchar(1000) has the same effect of varchar(100) when this parameter is specified as 100.\nA negative number indicates that the length defined in the database should be used. (default: -1).
TOOLTIP.PARA_SERVICE=When CUBRID Broker environment is initialized, the broker with this parameter set to ON is started.(Default: ON)
TOOLTIP.PARA_APPL_SERVER_SHM_ID=The shared memory ID of application server. This number is used when CUBRID Broker is initialized and started.
TOOLTIP.PARA_APPL_SERVER_MAX_SIZE=The maximum process size of application server. If the current process size exceeds this value, broker restarts the application server.\nThis parameter can be changed in on line state.(Unit: MB, Default: 10M)
TOOLTIP.PARA_LOG_DIR=The directory for saving access logs and error logs (Default: $CUBRID_BROKER/log) 
TOOLTIP.PARA_SQL_LOG_MAX_SIZE=This specifies the maximum size of a scripts log. Once the log file reaches the maximum size, it will be renamed with .bak extension. (unit: K-bytes, default: 100000).
TOOLTIP.PARA_KEEP_CONNECTION=This parameter specifies the connection type between CAS servers and their clients.\nIt is applicable only to CAS-type application servers. OFF indicates that a CAS server may be disconnected from a client once a transaction completes, while ON indicates that it keeps the connection until the client requests disconnection.\nAUTO behaves the same as ON as long as the number of CAS servers is not less than the number of clients.\nAUTO has the same effect as OFF, otherwise. (default: AUTO).
TOOLTIP.PARA_STRIPPED_COLUMN_NAME=This parameter indicates whether a class name (or an alias) preceding attribute name in a SELECT-list should be included or not in the result column name.\nFor instance, \u201cselect db_class.class_name from db_class\u201d will result in \u201cclass_name\u201d when this parameter is ON, \u201cdb_class.class_name\u201d, otherwise. (default: ON).
ERROR.INVALIDFILENAME=Invalid file name
ERROR.ISNOTINTEGER=The value is not integer
ERROR.BROKERPORTEXIST=Broker port number already exists
ERROR.WRONGENVFILENAME=Wrong file name: file extenstion is must be .env
ERROR.JOBQUEUEMAXOVER=JOB_QUEUE_SIZE's maximum is 127
ERROR.ISNOTSTRING=The value is not string
ERROR.INVALIDSQLMAXSIZE=Wrong value\nSQL_LOG_MAX_SIZE: 1~2000000
MSG.ADDBROKERBASICOPTION=Basic option 
MSG.ADDBROKERBROKERNAMEIS=The broker name is 
MSG.ADDBROKERBROKERASTYPEIS=The broker AS type is 
MSG.ADDBROKERASROOTDIRECTORYIS=The AS root directory is 
MSG.ADDBROKERMINIMUMASNUMBERIS=The minimum AS number is 
MSG.ADDBROKERMAXIMUMASNUMBERIS=The maximum AS number is 
MSG.ADDBROKERBROKERPORTNUMBERIS= The broker port number is
MSG.ADDBROKERADVANCEDOPTION=Advanced option
MSG.NOTSPECIFIED=not specified
ERROR.INVALIDBROKERNAME=Invalid broker name
ERROR.EXISTBROKERNAME=The broker name already exists
ERROR.EXISTSHMID=APPL_SERVER_SHM_ID is already used.
ERROR.EXISTMASTERSHMID=APPL_SERVER_SHM_ID is already used as master shared memory id.
ERROR.INVALIDPORTNUMBER=Invalid port number
ERROR.MINMAXAPSERVER=Invalid  maximum or minimum number of the aplication server
ERROR.PORTUSEDASSHMID=The port number is already used as APPL_SERVER_SHM_ID
ERROR.NOAPPLROOT=The APPL_ROOT is not specified
ERROR.OVER_MAX_VALUE=Value is too large.
ERROR.UNDER_MIN_VALUE=Value is too small.
WAITING.ADDBROKER=Add broker
WAITING.BROKERPARASET=Broker parameter setting
MSG.AFTERRESTARTCAS=After restarting CUBRID Broker, it will be adapted
WAITING.DELBROKER=Deleting Broker
WAITING.RESTARTBROKER=Restarting broker
TABLE.JOBID=Job ID
TABLE.IP=IP
WAITING.GETJOBINFO=Getting Job Information
MSG.JOBPRISUCCESS=Job priority is adjusted
TOOLTIP.BRKSETLOG=This parameter determines whether to save logs when Application Server processes client's requests. The log file name is '$CUBRID_BROKER/log /script/ port_number.sql.log'. (Default: OFF) [Value: ON | OFF]
TOOLTIP.BRKSETTIME=If Application Server processes a query, spends longer than the time set in SQL_LOG_TIME, that query is saved in "$CUBRID_BROKER/log /script<Month><Date><Hour><Min><Sec>.<Running_time>.<port number>" file. If SQL_LOG_TIME is set to -1, the log is not saved. It is very useful for system tuning since it let you know about query processing time. (Unit: sec, Default: -1). [Value: Integer]
TOOLTIP.BRKSETMAX=The maximum process size of Application Server. If the current process size exceeds this value, Broker restarts the Application Server. (Unit: MB, Default: 10M). [Value: Integer]
TOOLTIP.BRKSETCOMPRESS=This parameter determines whether to compress file or not. It is only valid when application server type is VAS. (Unit: KB, Default: 100). [Value: Integer]
TOOLTIP.BRKSETBACKUP=This parameter determines whether to save access old logs and error logs files when the Broker stops. If the value is ON, when the administrator stops the Broker, date/time information is attached to broker_name.access, and broker_name.error file name. It is saved as  broker_name.access. yymmdd.hhmm,and broker_ name.error. yymm dd.hhmm. (Default: OFF). [Value: ON|OFF]
TOOLTIP.BRKSETGAP=The difference between the actual priority and the priority (0, 1, 2) set by the client for the job. The actual priority is PRIORITY_GAP * priority_set_program. It is only valid when application server type is VAS, AMS and ULS. (Default: 10) [Value: Integer]
TOOLTIP.BRKSETTTK=When AUTO_ADD_APPL_SERVER is ON, the idle Application Server dynamically added is killed by the comparison with the value set on TIME_TO_KILL. If this value is too small, generating or killing Application Server may occurs too frequently. If this value is too large, idle Application Server may exist for too long period. (Default: 300) [Value: Integer]
WAITING.SETBROKERCONF=Setting Broker Conf
POPUP.REMOVEPARA=Remove Parameter
WAITING.SETBROKERENV=Setting Broker Env
ERROR.HAVENOAUTH=You have no authority for this database
ERROR.FILEDOWNFAIL=Can not download file.\nIf you checked compress option and compress tool was not available at the server, download will be failed.
ERROR.ENTERQUERYSTRING=Please enter a Query String
ERROR.EMPTYTEMPLATENAME=Insert template name.
ERROR.TEMPLATENOTEXIST=Template does not exist.
ERROR.INVALIDENDTIME=Invalid end time. usage: [yyyy/mm/dd hh:mm:ss]
ERROR.INVALIDSTARTTIME=Invalid start time. usage: [yyyy/mm/dd hh:mm:ss]
ERROR.EMPTYLOGNAME=Insert log name.
ERROR.EMPTYLOGFILE=Insert log file.
ERROR.EMPTYOID=Insert OID.
ERROR.OIDALEADYEXIST=OID value aleady exist.

###HelpAction[Linux]
ERROR.BROWSERNOTFOUND=The browser cannot be found in the path.\nPlease, try again after you set any to the path among mozilla, opera, netscape, and firefox.

###CHANGE_OWNERDialog
TITLE.CHANGEOWNER=Change owner
LABEL.NEWOWNER=New owner
ERROR.EMPTYOWNER=Insert new owner.
BUTTON.CHANGE=Change

###JOB_BACKUPDialog, JobAutomation
CHECK.STOREOLDBACKUP=Store old backup file
CHECK.UPDATESTATISTICS1=Update statistics information
CHECK.DELETEARCHIVE=Delete archive volumes
GROUP.ONLINEOFFLINE=Online/offline
RADIO.OFFLINEBACKUP=Offline backup
RADIO.ONLINEBACKUP=Online backup
COMBOITEM.MONTHLY=Monthly
COMBOITEM.WEEKLY=Weekly
COMBOITEM.DAILY=Daily
COMBOITEM.SPECIAL=A specific day
COMBOITEM.DAY0=sunday
COMBOITEM.DAY1=monday
COMBOITEM.DAY2=tuesday
COMBOITEM.DAY3=wednesday
COMBOITEM.DAY4=thursday
COMBOITEM.DAY5=friday
COMBOITEM.DAY6=saturday
ERROR.INVALIDPERIODTYPE=Invalid backup period type
ERROR.INVALIDPERIODDETAIL=Invalid backup period detail

###ADD_QUERYPLANDialog, JobAutomation
ERROR.INVALIDQUERYPERIODTYPE=Invalid query execution period type
ERROR.INVALIDQUERYPERIODDETAIL=Invalid query execution period detail
ERROR.INVALIDQUERYTIME=The query execution time is Invalid.\nExample - 0230(when AM 2:30)

###LOADDB_PAGE1Dialog
CHECK.NOLOG=No log
TOOLTIP.NOLOG=writing log operation will be skipped while loading database(Not recommended).
MSG.NOLOG=If no log option checked and load operation failed(error, interrupt of user...),\ndatabase can not be restored. so no log option is not recommended.
CHECK.OIDISNOTUSE=Oid is not used

###CubridView \uad00\ub828
ERROR.SERVERNOTSTARTED=Database is not restarted.\nPlease restart database and retry.

###sqlx.init \uc124\uc815 \uad00\ub828
ERROR.NOTBOOLEAN=0 or 1 is only available.
ERROR.OUTOFBOUNDS=value is out of range.
ERROR.INCLUDESPACE=Invalid empty space exist.
TABLE.CLASSIFICATION=classification
SQLXINIT.TYPE=type: 
SQLXINIT.INTEGER=int
SQLXINIT.BOOLEAN=0 or 1
SQLXINIT.FLOAT=float
SQLXINIT.CLIENTSERVER=client/server
SQLXINIT.CLIENT=client
SQLXINIT.SERVER=server
SQLXINIT.NOTUSE=not use
SQLXINIT.NONE=none
SQLXDESC.ERROR_LOG=Override error message file name. The default will be <dbname>_<date>_<server_PID>.err for servers or uclient.err for clients.\nTo use stderr, set the parameter value to NULL. To disable logging set the parameter value to "/dev/null". \nThe recommended setting is the default setting. 
SQLXDESC.NUM_DATA_BUFFERS=Number of data pages cached in memory. This will require enough memory to hold num_data_buffers * the database page size (default:4 KB)nThis is in addition to other memory requirements such as stack, log and sort buffers, and temporary space. 
SQLXDESC.FLUSH_DATA_BUFFER_FACTOR=Dirty pages that must be flushed when this threshold is reached.\nThis is a fraction of the data buffers that can be dirty.\nMinimum .3 recommended .7 to .9 
SQLXDESC.LOCK_ESCALATION=Sets the maximum number of locks acquired on individual instances of a class before the locks on the instances are escalated to a class lock.\nLock escalation is ignored if there are other transactions waiting for locks on the instances or the classes or if the transaction cannot obtain the desired lock on the class. 
SQLXDESC.DEADLOCK_DETECTION_INTERVAL=Interval between attempts at deadlock detection (seconds).\nAn approximate interval to attempt to run the deadlock detector. The deadlock detector is only run when there are at least two suspended transactions and one of those suspended transactions has been suspended since the last deadlock detection run. The default value of this parameter is 1.
SQLXDESC.LOCK_TIMEOUT_IN_SECS=Minimal amount of time to wait for a lock.\nA negative value, indicates to wait indefinitely until the lock is granted or until the transaction is rolled back as a result of a deadlock.\nA value of 0, indicates not to wait for a lock. 
SQLXDESC.LOCKF_ENABLE=Lock the database volume to avoid multiple openings of the database by several applications.\nIf this parameter is disabled, concurrent access to the same database could happen by several programs (e.g., two servers) and can result in database corruption.\nThe user is advised not to modify this parameter unless severe NFS network problems are present at the installation.\nPlease consult your system administrator before you modify this parameter. See system parameter chapter of the DBA manual for more information about this parameter. 
SQLXDESC.ISOLATION_LEVEL=Transaction isolation level. \nSix levels of isolation are provided, represented by: \n\"TRAN_SERIALIZABLE\" \"TRAN_REP_CLASS_REP_INSTANCE\" \"TRAN_REP_CLASS_COMMIT_INSTANCE\" \"TRAN_REP_CLASS_UNCOMMIT_INSTANCE\" \"TRAN_COMMIT_CLASS_COMMIT_INSTANCE\" \"TRAN_COMMIT_CLASS_UNCOMMIT_INSTANCE\" \nFor other aliases, or for more information on the levels, see the System Parameters chapter in the Database Administration Guide. 
SQLXDESC.MEDIA_FAILURES_ARE_SUPPORTED=A restore of a database from a backup to the moment of the media crash will not be achieved when this parameter is set to off since the moment of the database backup since log archives may not be created.\nIn fact, if this parameter is set to zero, CUBRID archives log pages of only currently running transactions and automatically removes the archives once these transactions are finished. 
SQLXDESC.LOG_SIZE=Size in pages of the active_log and each archive_log files.\nThe default value is -1. This will set this parameter value to the size of the main database file. The minimum value is 100. If this parameter value is smaller than minimum, default value will be used.
SQLXDESC.LOG_RESERVE_SPACE=This parameter indicates if the space of the active log is preallocated during createdb. 
SQLXDESC.LOG_PREFIX_NAME=The prefix string of log or backup volumes.\nThe default prefix(set this parameter value to NULL) will be the database name. 
SQLXDESC.LOG_PATH=Location of the log volumes and database backups.\nThis value must give a double quoted string or NULL for the default. The default will be the same path as the database. 
SQLXDESC.NUM_LOG_BUFFERS=Number of log buffer pages cached in memory.\nThis will require 1 database page (default:4 KB) times num_log_buffers of memory. A value between 50-100 buffers is recommended.
SQLXDESC.CHECKPOINT_INTERVAL=Checkpoint when log has grown by checkpoint_atnpages_interval.\nA checkpoint will be done every time the log growth this much. 
SQLXDESC.WARN_OUTOFSPACE_FACTOR=Database server will issue warning when the free space in volume is less than this fraction.
SQLXDESC.UNFILL_FACTOR=Fraction of space in each data page reserved for future updates. 
SQLXDESC.UNFILL_INDEX_FACTOR=Percent of space in each index page reserved for future updates. Used only during index creation 
SQLXDESC.MAX_QUICK_SIZE=The size in bytes of the largest unit of storage to manage using the quick list mechanism of the quick fit algorithm. 
SQLXDESC.MAX_BLOCK_SIZE=The size in Kbytes that the workspace will allocate for one of its regions.\nThis also limits the upper bound of various objects in workspace memory, such as strings, sequences, classes, etc.\nThe default (and maximum) for PC Client is 63, not 128. 
SQLXDESC.MAX_BLOCK_COUNT=The maximum number of blocks the workspace is allowed to allocate.\nTogether with the max_block_size, this determines the maximum workspace size as (max_block_size * max_block_count) * 1 KB 
SQLXDESC.INITIAL_WORKSPACE_TABLE_SIZE=Initial size in number of entries of the workspace hash table. 
SQLXDESC.SR_BUFFERS=Size of memory buffers allocated for sorting purposes.\nSorting buffers are allocated contiguously. The size of each sorting buffer is sr_buffers * ths database page size (default:4KB).\nUP TO ONE SORTING BUFFER PER ACTIVE CLIENT REQUEST may be allocated. This is in addition to other memory for data buffers, stack etc. Recommended range is 16-500. 
SQLXDESC.OPTIMIZATION_LEVEL=Optimization level. 
SQLXDESC.QUERYAREA_FACTOR=This is the fraction of the initial database size to be reserved for temporary query processing space.\nRecommended value is .10. For applications such as CUBRID/M which need more query processing space relative to the initial database size, it is recommended that additional \"TEMP\" volumes be added with addvoldb. 
SQLXDESC.VOLEXT_PATH=This parameter specifies the directory where automatic volume extensions are created.\nIf NULL is given, the directory of the first database volume is used. The volume extension path is a single path, that is, the system looks for space in a single place.\nIt is NOT a multiple path, that is, the system does not look here, there, and everywhere. 
SQLXDESC.AUTO_VOLEXT_FACTOR=Factor that is used to compute the number of minimal number of pages that are used when an automatic volume extension is added to the database.\nThe minimal number of pages is determined by truncating the result of the multiplication of this parameter by the number of pages of the first database volume.\nIf the value of this parameter is zero, automatic volume extensions will not be created.\nNote that permanent volume extensions are created in the partition assigned by volext_path parameter. 
SQLXDESC.VOLTMP_PATH=Location where temporary volumes are created.\nIf NULL is given, the location of the first database volume is used. 
SQLXDESC.MAXTMP_PAGES=Maximum number of pages that can be allocated for all temporary volumes.\nA negative value indicates to use as much space as needed (limited by the amount of space in the disk partition specified by voltmp_path).\nA value of zero, indicates that temporary volumes should not be created. 
#SQLXDESC.THREAD_QUANTUM=This parameter specifies the number of milliseconds in process virtual time after which a thread of execution is preempted. This value is only an approximation since the actual preemption is delayed to a specific database event (e.g., page lookup or object lock) after the above interval value is exceeded. 
SQLXDESC.COMMIT_ON_SHUTDOWN=If this is 1 then SQL/X will perform a commit automatically on shutdown. 
SQLXDESC.CUBRID_PORT_ID=TCP port id for the SQLX master program (used by all clients) 
SQLXDESC.NETWORK_SERVICE_NAME=TCP port name for the SQLX master program. This must give a double quoted string. 
SQLXDESC.MAX_CLIENTS=The maximum number of concurrent client connections the server will accept. 
SQLXDESC.MAX_THREADS=This parameter sets the maximum number of all working threads.\nAll working threads consist of server threads for clients and worker threads for active requests. Therefore the value of max_threads is the sum of max_clients System Parameters and active_requests. If the system thread parameters, max_clients, active_requests, active_requests are not set properly, the system automatically assigns the parameter values based on max_clients and return a warning message.
SQLXDESC.ACTIVE_REQUESTS=The number of simultaneously active requests that the server is to be tuned for.\nA transaction may have more than one requests at a time. Especially, when a client executes an asynchronous select query or a query with method call.\nThe recommended value for active_requests is its default, max_clients.
SQLXDESC.DB_HOSTS=A colon or space separated list of hostnames, utilized by a client, to locate an alternative host for connecting to a database server. 
#SQLXDESC.SERVER_DRIVER_VERSION_CHECK=Major release check between CUBRID/M server and driver. Value of 1 (default) enables checking, 0 disables. 
SQLXDESC.CLIENT_TIMEOUT=The duration of time between \"ping\" messages sent from the server to the client.\nThis is used to detect Winsock clients that have crashed.\nTimeout value is in seconds, a negative value will disable the \"ping\". This value will be read by the client, so it can be set per client. 
SQLXDESC.MAX_PING_WAIT=When the server tests a foreign host during a \"ping\" it may be blocked if the host is unreachable.\nSet this value to the number of seconds you are willing to wait on unreachable hosts before the server determines that the foreign host is down.\nVery slow networks may require that this number be increased. A value of 0 or less cancels the test for unreach able hosts during the client ping.\nThis value is read by the server. 
SQLXDESC.CONNECTION_TIMEOUT=When a client connection is refused (e.g., server/master queue of backlog connections is overflowed), the system could retry the client connection within the number of seconds specified by this parameters. Recommended value between 3-10. 
SQLXDESC.NETWORK_PAGESIZE=Specifies the size in bytes that CUBRID uses as the communication block between the client and the server.\nThe value must be a power of two and greater than or equal to 1024 bytes (1Kbytes). 
SQLXDESC.BACKUP_MAX_VOLUME_SIZE=This parameter places an upper limit on the size in bytes of the backup volumes created with the backupdb utility.\nThis can be used to segment a backup into multiple backup volumes.\nIt should be set only when needed. When this parameter is not set or set to default(-1), backup volumes will be as large as the destination media allows.
SQLXDESC.BACKUP_IOBUFFER_SIZE=Increase the block buffering between the backupdb utility and the backup destination.\nSpecify the number of buffers to use. Buffers are device and operating system dependent, but are often either 4K or 8K. 
SQLXDESC.INITIAL_OBJECT_LOCK_TABLE_SIZE=Ths CUBRID lock manager allocates the data structures for managing the objects to be locked when the server is started.\nThe initial number of data structures is specified by the system parameter initial_object_lock_table_size.\nIf the number of objects to be locked exceeds the value of the system parameter initial_object_lock_table_size, additional data structures will be allocated within the system limits.
SQLXDESC.LOCK_TIMEOUT_MESSAGE_DUMP_LEVEL=The information for the transactions varies with the value of the timeout_message_dump_level system parameter.\nIf the value is 0 (default), the information about other transactions blocking the lock request is not printed.\nIf the value is 1, the information about one of the transactions is printed.\nIf the value is 2, the information about all of the transactions blocking the request is printed.
SQLXDESC.TEMP_MEM_BUFFER_PAGES=Size of memory buffers allocated for a temporary query result.\nThe size of each temp buffer is temp_mem_buffer_pages * page size. Possible range is 0-20. 
SQLXDESC.GC_ENABLE=If this is 1 then client will perform garbage collection when needed.
SQLXDESC.ENABLE_HISTO=If this is 1 then the user will be able to collect and show the histogram of query execution statistics.
SQLXDESC.INDEX_SCAN_ORDER=By default, the result of index scan is sorted with its OID. This may help the performance of fetching the results due to \"locality of reference\".\nIf this parameter value is 1 then the result of index scan is sorted with its key value.\nThis may help the query optimizer skip the redundant \"order by\" clause.
###cubrid.conf description
SQLXDESC.API_TRACE_FILE=
SQLXDESC.API_TRACE_MODE=
SQLXDESC.AUDIT_BUFFER_SIZE=
SQLXDESC.AUDIT_FLUSH_INTERVAL=
SQLXDESC.AUDIT_INIT_STATE=
SQLXDESC.AUDIT_SET_ALL_ON_NEW_CLASSES=
SQLXDESC.AUDIT_TRAIL_DIR=
SQLXDESC.AUDIT_TRAIL_MAX_SIZE=
SQLXDESC.AUTO_COMMIT=
SQLXDESC.CALL_STACK_DUMP_DISABLE=
SQLXDESC.CALL_STACK_DUMP_ENABLE=
SQLXDESC.CALL_STACK_DUMP_ON_ERROR=
SQLXDESC.CATALOG_OID_TABLE_SIZE=
SQLXDESC.CHECK_DELETED_OBJECTS=
SQLXDESC.CHECKPOINT_INTERVAL_MINUTES=
SQLXDESC.CLASS_REPRESENTATION_CACHE=
SQLXDESC.COMPACTDB_PAGE_RECLAIM_ONLY=
SQLXDESC.CPU_WEIGHT=
SQLXDESC.DEFAULT_DRIVER_DIR=
SQLXDESC.DISABLE_DEFAULT_NUMERIC_DIVISION_SCALE=
SQLXDESC.DO_LDB_CLASS=
SQLXDESC.DONT_REUSE_HEAP_FILE=
SQLXDESC.DRIVER_PAGE_FETCH=
SQLXDESC.DRIVER_TIMEOUT=
SQLXDESC.EVENT_HANDLER=
SQLXDESC.GC_BLOCK_INCREMENT=
SQLXDESC.INQUIRE_ON_EXIT=
SQLXDESC.IO_VOLINFO_INCREMENT=
SQLXDESC.IS_PTHREAD_SCOPE_PROCESS=
SQLXDESC.LDB_DRIVER_DECAY_CONSTANT=
SQLXDESC.LDB_MAX_ACTIVE_DRIVERS=
SQLXDESC.LDB_MIN_ACTIVE_DRIVERS=
SQLXDESC.LDB_PRECONNECT_LIST=
SQLXDESC.LIKE_TERM_SELECTIVITY=
SQLXDESC.MAX_CLASSNAME_CACHE_ENTRIES=
SQLXDESC.MAX_ENTRIES_IN_TEMP_FILE_CACHE=
SQLXDESC.MAX_INDEX_SCAN_COUNT=
SQLXDESC.MAX_OUTER_CARD_OF_IDXJOIN=
SQLXDESC.MAX_PAGES_IN_TEMP_FILE_CACHE=
SQLXDESC.MAXLENGTH_ERROR_LOG=
SQLXDESC.MEMORY_REPORT_LEVEL=
SQLXDESC.MEMORY_VERIFICATION_LEVEL=
SQLXDESC.MIN_NUM_ROWS_FOR_MULTI_DELETE=
SQLXDESC.MUTEX_BUSY_WAITING_CNT=
SQLXDESC.NEW_CLASSNAME_CACHE_SIZE=
SQLXDESC.NO_RANGE_OPTIMIZATION=
SQLXDESC.NUM_INDEX_OID_BUFFERS=
SQLXDESC.NUM_LRU_CHAINS=
SQLXDESC.OID_BATCH_SIZE=
SQLXDESC.OPTIMIZATION_LIMIT=
SQLXDESC.OPTIMIZE_HOSTVARS_AT_RUNTIME=
SQLXDESC.ORACLE_STYLE_EMPTY_STRING=
SQLXDESC.ORACLE_STYLE_OUTERJOIN=
SQLXDESC.QO_DUMP_LEVEL=
SQLXDESC.RESET_TR_PARSER_INTERVAL=
SQLXDESC.SERVER_INSERTS=
SQLXDESC.SESSION_MODE_SYNC=
SQLXDESC.SQL_TRACE_CRITICAL_TIME=
SQLXDESC.SQL_TRACE_FILE_DIR=
SQLXDESC.SQL_TRACE_FILE_PREFIX=
SQLXDESC.SQL_TRACE_FILE_SUFFIX=
SQLXDESC.SQL_TRACE_LEVEL=
SQLXDESC.SQL_TRACE_MAX_LINES=
SQLXDESC.SQL_TRACE_WARNING_TIME=
SQLXDESC.SUPPRESS_FSYNC=
SQLXDESC.THREAD_PRIVATE_MEM_SIZE=
SQLXDESC.THREAD_STACKSIZE=
SQLXDESC.TTVOL_SHRINK_ENABLE=
SQLXDESC.USE_OID_PREFLUSH=
SQLXDESC.BWCOMP_PRIMARY_KEY=
SQLXDESC.DISABLE_JAVA_STORED_PROCEDURE=
SQLXDESC.IS_REPLICATED=
SQLXDESC.BYTES_PER_CHAR=

### temp
#TEMP=\uc18c\uc694\uc2dc\uac04
#TEMPMSG=\uc18c\uc694\uc2dc\uac04: 

### LoginDialog
TITLE.LOGIN=DB user login
LBL.PASSWORD=password

# User information wait message
WAITING.GETINFORMATION=Wait a moment.
WAITING.RUNNINGQUERY=Executing query

### UserManagementDialog
TABLE.DBAAUTH=DB Creation authority
TABLE.CASAUTH=Broker authority
TABLE.BROKERPORT=Broker Port
ERROR.FAILCMUSERMODIFY=Can not change user authority.
WARNING.DUPLICATION1=ID aleady exist. (
WARNING.DUPLICATION2=)
WARNING.EMPTYSTRING1=Empty space exist in ID or password. (
WARNING.EMPTYSTRING2='th user)
MSG.WRONGPASSWORD=Password is not correct.

#QueryEditorOptionDialog
TITLE.QUERYEDITOROPTION=Query Editor Option
CHECK.AUTOCOMMIT=Autocommit
TOOLTIP.INIT=Specify active state when query editor started.\nAfter started you can change state with tool bar.
CHECK.RECORDLIMIT=Search unit of result instances
TOOLTIP.RECORDLIMIT1=All instances will be fetched, if unchecked.
TOOLTIP.RECORDLIMIT2=Query Result will be displayed up to this value.\nIf more results exist you can see dialog to choose whether remained results displayed or not.
LABEL.PAGELIMIT=Page unit of result instances
TOOLTIP.PAGELIMIT=All instances will be fetched in the unit of page.\nPage size will be up to this value.
CHECK.GETOIDINFO=Get OID info(updatable result)
TOOLTIP.GETOIDINFO=OID info will be displayed in the first column of result rows.
LABEL.CASPORT=Broker port
TOOLTIP.CASPORT=Query editor will use this port\n
CHECK.CHARSET=Character set
TOOLTIP.CHARSET=Query Editor will use this character set
MESSAGE.INVALIDRECORDLIMIT=Invalid instance limit(must bigger than 1)
MESSAGE.INVALIDCASPORT=Invalid broker port.
MESSAGE.ILLEGALCHARSET=Invalid character set - 
TOOLTIP.QUERYEDITOROPTION=Changed option will be applied in new Query Editor window.

### UserManagementPasswordConfirmDialog
TITLE.PASSWORDCONFIRM=Confirm password
TITLE.PASSWORDCHANGE=Change password
LABEL.PREVPASSWORD=Previous password
LABEL.NEWPASSWORD=New password
LABEL.CONFIRMPASSWORD=New password confirm
WARNING.PREVPASSWD=password is not correct.
WARNING.CONFIRMPASSWD=New password is different from New password confirm.
WARNING.NEWPASSWD=Only digits and alphabet is available in password.

#add BACKUPDBDialog
LABEL.READTHREADALLOWED=num thread
LABEL.COMPRESSTYPE=compress type
LABEL.COMPRESSLEVEL=compress level
LABEL.COMPRESS=compress
CHECK.USECOMPRESS=Use compress
COMBO.AUTO=auto
COMBO.DISABLE=disable
COMBO.INPUT=User input
COMBO.MAXCLIENT=max_client

#add ADD_ATTRIBUTEDialog
LABEL.DOMAIN2=domain
LABEL.SIZE=size
LABEL.PRECISION=precision
LABEL.SCALE=scale
COMBOITEM.SELECTION=selection
ERROR.INVALIDSIZE=Invalid size
ERROR.MAXSIZEOVER=Max size if 1073741823.
ERROR.INVALIDPRECISION=Invalid precision.
ERROR.INVALIDSCALE=Invalid scale.
ERROR.INVALIDCOMBINATION=Precision must bigger than or equal to scale.
ERROR.MAXPRECISIONOVER=Max precision is 38.
ERROR.MAXSCALEOVER=Max scale is 38.
LABEL.DEFAULT=Default value
LABEL.MIN=Minimum value
LABEL.MAX=Maximum value
TABLE.SIZE=Size
TABLE.SCALE=decimal point

#Export
WARNING.COLUMNCOUNTOVER=Column count is over then xls's max column count(256).\nWe don't save after 257 column.\n\nGo ahead anyway?
MESSAGE.COLUMNCOUNTOVER=We were export 256th column.
QEDIT.EXPORTOK=records export success.
QEDIT.EXPORTLIMIT1=Instance is over then xls's max record count(
QEDIT.EXPORTLIMIT2=)
QEDIT.EXPORTLIMIT3=sheets created.

#RemoveLogAction
TOOL.REMOVEALLERRLOG=Delete all error log files
TOOL.REMOVEALLACCESSLOG=Delete all access log files
TOOL.REMOVEALLSCRIPTLOG=Delete all script log files
TOOL.REMOVEERRLOG=Delete
TOOL.REMOVELOG=Delete
TOOL.REMOVESCRIPTLOG=Delete
WAIT.REMOVEALLERRLOG=Deleting all error log files.
WAIT.REMOVEERRLOG=Deleting err log file.
WAIT.REMOVEALLACCESSLOG=Deleting all access log files.
WAIT.REMOVEALLSCRIPTLOG=Deleting all script log files.
WAIT.REMOVELOG=Deleting log file.
WAIT.REMOVESCRIPTLOG=Deleting script log file.
WARN.REMOVELOG=Are you sure delete log file(s)?

#LockinfoAction
WAIT.GETTINGLOCKINFO=Getting lock information.

#DBUsers
LABEL.NOTEXIST=not exist
LABEL.GROUPLIST=Group list: 
LABEL.MEMBERLIST=Member list: 
LABEL.OWNCLASS=Class list of this user
LABEL.AUTHLIST=Authorization list of this user
LABEL.NOTEXISTOWNCLASS=No class.
LABEL.DBAHASALLAUTH=dba user has all authorization.
LABEL.NOTEXISTOWNAUTH=No auth. Search authorization of user's group

#PROPPAGE_USER_GENERALDialog
BUTTON.ADDGROUP=>
BUTTON.REMOVEGROUP=<
BUTTON.ADDMEMBER=>
BUTTON.REMOVEMEMBER=<
GROUP.GROUPCONF=Group/member configuration
GROUP.ALLUSERS=All users
GROUP.GROUPLIST=Group list
GROUP.MEMBERLIST=Member list

#PROPPAGE_USER_AUTHORIZATIONDialog
WARNING.CANNOTREVOKESYSTEMCLASS=Cannot revoke system class.
LABEL.ITISDBA=Cannot grant authorization to DBA user.
TABLE.CLASS=Class
TABLE.SELECT=SELECT
TABLE.INSERT=INSERT
TABLE.UPDATE=UPDATE
TABLE.DELETE=DELETE
TABLE.ALTER=ALTER
TABLE.INDEX1=INDEX
TABLE.EXECUTE=EXECUTE
TABLE.GRANTSELECT=GRANT SELECT
TABLE.GRANTINSERT=GRANT INSERT
TABLE.GRANTUPDATE=GRANT UPDATE
TABLE.GRANTDELETE=GRANT DELETE
TABLE.GRANTALTER=GRANT ALTER
TABLE.GRANTINDEX=GRANT INDEX
TABLE.GRANTEXECUTE=GRANT EXECUTE

#CubridWizardDialog
WIZARD.NEXT=&Next >
WIZARD.BACK=< &Back
WIZARD.OK=&Finish
WIZARD.CANCEL=Cancel
WIZARD.HELP=&Help

#ADD_QUERYPLANDialog
ERROR.INVALIDID=Invalid ID.
ERROR.ALREADYEXISTID=ID already exist.

#QuerySampleDialog
TITLE.QUERYSAMPLE=Query sample
TAB.QUERY=Query
TAB.FUNCTION=Function
TAB.EXAMPLE=Example

STRING.INFORMATION=\ information
STRING.O=\u25cb
STRING.X=\u00d7
STRING.DIRSELECT=Database server accessable directory only
STRING.FILESELECT=Database server accessable file only
STRING.ERROR=An error found. Please refresh.

TOOL.DBLOGOUT=Logout

TITLE.HELP=Help

#query example
EXAMPLE.0=create class olympic (\n       host_year integer NOT NULL,\n       host_nation character varying(40) NOT NULL,\n       host_city character varying(20) NOT NULL,\n       opening_date date NOT NULL,\n       closing_date date NOT NULL,\n       mascot character varying(20),\n       slogan character varying(40),\n       introduction character varying(1500)\n)
EXAMPLE.1=
EXAMPLE.2=create class participant (\n       host_year integer NOT NULL,\n       nation_code character(3) NOT NULL,\n       gold integer DEFAULT 0,\n       silver integer DEFAULT 0,\n       bronze integer DEFAULT 0\n)
EXAMPLE.3=
EXAMPLE.4=create class set_type (\n\tnumber\tinteger,\n\tname\t varchar(9)\n)\n\ncreate class set_use (\n\ttel\tset(set_type),\n\tother\tsequence(char(9))\n)
EXAMPLE.5=
EXAMPLE.6=drop class olympic, participant
EXAMPLE.7=alter table athlete add column age int;
EXAMPLE.8=
EXAMPLE.9=
EXAMPLE.10=alter table stadium drop attribute address, seats;
EXAMPLE.11=alter table athlete change gender default 'M';\nalter table athlete change gender default 'W';
EXAMPLE.12=alter table athlete rename column gender as gender_type;
EXAMPLE.13=
EXAMPLE.14=
EXAMPLE.15=rename class history_record as record_history
EXAMPLE.16=create index game_date_idx on game(game_date);
EXAMPLE.17=drop index game_date_idx;\ndrop index on game(medal)
EXAMPLE.18=alter class athlete add unique(dna_print)
EXAMPLE.19=
EXAMPLE.20=create serial my_serial start with 0 maxvalue 100 cycle
EXAMPLE.21=alter serial my_serial increment by 2 nocycle
EXAMPLE.22=drop serial my_serial
EXAMPLE.23=insert into nation (code, name, continent, capital)\nvalues ('KOR', 'Korea', 'Asia', 'Seoul');
EXAMPLE.24=insert into athlete (name, gender, nation_code, event) \nvalues ('Nam Hyun-Hee', 'W', 'KOR', 'Fencing');
EXAMPLE.25=
EXAMPLE.26=
EXAMPLE.27=insert into man (name) \n(select name from athlete where gender ='M' and rownum = 1);
EXAMPLE.28=update nation set capital = 'Pusan' where name = 'Korea';
EXAMPLE.29=
EXAMPLE.30=
EXAMPLE.31=
EXAMPLE.32=
EXAMPLE.33=
EXAMPLE.34=
EXAMPLE.35=delete from stadium;
EXAMPLE.36=
EXAMPLE.37=delete from olympic where host_year in {1980, 1984, 1988};
EXAMPLE.38=
EXAMPLE.39=\nselect 1 + 1, 1 * 1, 1 - 1 from db_root;\n\nselect 'new generation'  || ' database system' from db_root;\n\nselect {1,2}+{3}, {1,2}-{2} from db_root;
EXAMPLE.40=update athlete set nation_code = (select code from nation where name =\n'Korea') where name = 'Lim Su-jeong';
EXAMPLE.41=-- assumes athlete_idx(code int, name varchar)\ninsert into athlete_idx values (athlete_ai_code.next_value, 'Park Tae-Hwan');
EXAMPLE.42=select athlete_ai_code.next_value from athlete;
EXAMPLE.43=select host_year, host_nation from olympic order by host_nation asc;
EXAMPLE.44=select code, name from nation where code like '%K_';
EXAMPLE.45=select * \nfrom foo \nwhere i = 5 and s = '5' \nusing index foo_idx2;
EXAMPLE.46=select * from foo\nwhere i = 5 and s = '5' and j = 50 and t = '50'\nusing index none;
EXAMPLE.47=select count (*) from small, big\nwhere big.i = small.i\nusing index small.idx_i;
EXAMPLE.48=select count (*)\nfrom small, med, big\nwhere small.i = med.i and med.s = big.s\nusing index big.idx_i, big.idx_all;
EXAMPLE.49=
EXAMPLE.50=create table athlete (\n   code             SMALLINT    NOT NULL PRIMARY KEY,\n   name             VARCHAR(40) NOT NULL,\n   gender           CHAR(1)     ,\n   nation_code      CHAR(3)     ,\n   event            VARCHAR(30) ,\n   );
EXAMPLE.51=create class test_class (\na integer,\nb integer,\nunique(a,b))
EXAMPLE.52=
EXAMPLE.53=
EXAMPLE.54=grant select on athlete to Davis;
EXAMPLE.55=grant select, insert, update, delete on stadium to Brown, Davis;
EXAMPLE.56=grant all privileges on stadium to public;
EXAMPLE.57=revoke insert, update, delete on game from Davis;
EXAMPLE.58=revoke insert, update, delete on nation, athlete from Davis;
EXAMPLE.59=call login ('jones', '') on class db_user;
EXAMPLE.60=call add_user ('anderson', '') on class db_user;
EXAMPLE.61=call drop_user ('jones') on class db_user;
EXAMPLE.62=call find_user ('smith') on class db_user to smith;
EXAMPLE.63=call add_user ('administration', '') on class db_user to admin;
EXAMPLE.64=call add_user ('smith', '') on class db_user to smith;\n\ncall add_member (smith) on admin;
EXAMPLE.65=call add_member ('brown') on admin;
EXAMPLE.66=call drop_member ('brown') on admin;
EXAMPLE.67=call find_user ('smith') on class db_user to smith;\n\ncall set_password ('dfs582b') on smith;
EXAMPLE.68=
EXAMPLE.69=
EXAMPLE.70=alter table athlete change gender default 'M';
EXAMPLE.71=
EXAMPLE.72=
EXAMPLE.73=
EXAMPLE.74=
EXAMPLE.75=
EXAMPLE.76=
EXAMPLE.77=rename stadium as stadium_info;
EXAMPLE.78=
EXAMPLE.79=select avg(gold) from participant where nation_code = 'KOR';
EXAMPLE.80=select host_nation \nfrom olympic \ngroup by host_nation\norder by host_nation;
EXAMPLE.81=select capital into :p1 from nation where code = 'KOR';\n\nselect name from nation where capital = :p1;
EXAMPLE.82=
EXAMPLE.83=select sum(n) from \n(\n    select gold from participant where nation_code='KOR'\n  union all \n    select silver from participant where nation_code='JPN'\n) as t(n);
EXAMPLE.84=
EXAMPLE.85=
EXAMPLE.86=select nation_code, count(code) from athlete\ngroup by nation_code having count(code) > 200;
EXAMPLE.87=select distinct h.host_year, o.host_nation from history h, olympic o\nwhere h.host_year=o.host_year and o.host_year>1950 order by o.host_nation;
EXAMPLE.88=select distinct h.host_year, o.host_nation from history h, olympic o\nwhere h.host_year=o.host_year and o.host_year>1950 order by o.host_nation desc;
EXAMPLE.89=select host_year, nation_code, gold from participant where gold \n\tbetween 10 and 15 order by 3 desc, 2;
EXAMPLE.90=select host_year, nation_code, gold from participant where gold\n        not between 0 and 15 order by 3 desc, 2;
EXAMPLE.91=
EXAMPLE.92=select name, gender, players from event where players in (5, 6);
EXAMPLE.93=select continent, name from nation where code in (select nation_code\nfrom participant where gold>0);
EXAMPLE.94=
EXAMPLE.95=select host_year, host_nation, host_city, mascot, slogan from olympic\nwhere mascot is not null;
EXAMPLE.96=select nation_code, gold, silver from participant\nwhere gold > all(select silver from participant) and host_year=1992;
EXAMPLE.97=select nation_code, gold, silver from participant\nwhere gold > some(select silver from participant) and host_year=1992;
EXAMPLE.98=select cast(score as float), unit\nfrom history\nwhere unit = 'kg';
EXAMPLE.99=select to_char(date '12/25/1999', 'dd') from db_root;\n\nselect to_char(time '10:20:30 am', 'HH24') from db_root;\n\nselect to_char(timestamp '10:20:30 am 12/25/1999', 'MONTH MON yyyy') from db_root;\n\nselect to_char(timestamp '10:20:30 am 12/25/1999', 'MONTH MON MM DAY DY D AM', 'en_US') from db_root;\n\nselect to_char(timestamp '10:20:30 am 12/25/1999', 'MONTH MON MM DAY DY D AM', 'ko_KR') from db_root;\n\nselect to_char(1234,'S9999') from db_root;\n\nselect to_char(1.234E-4) from db_root;
EXAMPLE.100=select to_date('9/6/1976') from db_root;\n\nselect to_date('1999 3 4','YYYY MM DD') from db_root;\n\nselect to_date('1999 March 4,'YYYY MONTH DD','en_US') from db_root;\n\nselect to_date('1999 3\uc6d4 4','YYYY MONTH DD','ko_KR') from db_root;
EXAMPLE.101=select to_time('10:30:20 AM') from db_root;\n\nselect to_time('HOUR: 10 MINUTE: 30 SECOND: 20',\n               '"HOUR:" HH24 "MINUTE:" MI "SECOND:" SS') from db_root;\n\nselect to_time('10:30:20 AM', 'HH:MI:SS AM', 'en_US') from db_root;\n\nselect to_time('10:30:20 \uc624\uc804', 'HH:MI:SS AM', 'ko_KR') from db_root;
EXAMPLE.102=select to_timestamp('10:30:20 AM 12/25/1999') from db_root;\n\nselect to_timestamp('YEAR: 1999 MONTH: 12 DAY: 25 HOUR: 10 MINUTE: 30 SECOND: 20',\n                     '"YEAR:" YYYY "MONTH:" MM "DAY:" DD "HOUR:" HH24 "MINUTE:" MI "SECOND:" SS') \nfrom db_root;\n\nselect to_timestamp('1999 March 4 10:30:20 AM', 'YYYY MONTH DD HH:MI:SS AM', 'en_US') from db_root;\n\nselect to_timestamp('1999 3\uc6d4 4 10:30:20 \uc624\uc804', 'YYYY MONTH DD HH:MI:SS AM', 'ko_KR') from db_root;
EXAMPLE.103=select TO_NUMBER('-1234') from db_root;\n\nselect TO_NUMBER('0.123','0.000') from db_root;
EXAMPLE.104=select extract(month from timestamp '01/31/1994 8:15:00 pm') from db_root;
EXAMPLE.105=select bit_length ('Cubrid') from db_root;
EXAMPLE.106=select OCTET_LENGTH ('Cubrid') from db_root;
EXAMPLE.107=select position ('of' in 'United States of America') from db_root;
EXAMPLE.108=select substring('Seawind Beach Resort'\n  from position('Beach' in 'Seawind Beach Resort')) from db_root;
EXAMPLE.109=select char_length(name), name\nfrom nation\nwhere char_length(name) between  15 and 16\norder by 1 asc;
EXAMPLE.110=select lower('Cubrid') from db_root;
EXAMPLE.111=select TRIM (name)\nfrom athlete;
EXAMPLE.112=select TRIM ('a' from name)\nfrom athlete;
EXAMPLE.113=select LTRIM('XXX123','X') from db_root;
EXAMPLE.114=select RTRIM('123XXX','X') from db_root;
EXAMPLE.115=select LPAD('123', 6, 'X') from db_root;
EXAMPLE.116=select LPAD('123456', 4, 'X') from db_root;
EXAMPLE.117=select RPAD('123', 6, 'X') from db_root;
EXAMPLE.118=select RPAD('123456', 4, 'X') from db_root;
EXAMPLE.119=select REPLACE('a a a', ' a ', ' the ' ) from db_root;
EXAMPLE.120=select TRANSLATE('1234567890123', '12345', 'ABCDE' ) from db_root;
EXAMPLE.121=select UPPER ('Abcdefg') from db_root;
EXAMPLE.122=select ADD_MONTHS(DATE '2/29/1980',12) from db_root;
EXAMPLE.123=select LAST_DAY(DATE '1/01/2000') from db_root;
EXAMPLE.124=select MONTHS_BETWEEN(DATE '1/13/1999',DATE '2/3/1999') from db_root;
EXAMPLE.125=select SYS_DATE from db_root;
EXAMPLE.126=select SYS_TIME from db_root;
EXAMPLE.127=select SYS_TIMESTAMP from db_root;
EXAMPLE.128=select n\nfrom foo\nwhere MOD(n, 10) < 5;
EXAMPLE.129=select distinct nation_code from athlete where event like 'Wre%';
EXAMPLE.130=select count(*)\nfrom participant\nwhere host_year = 1988;
EXAMPLE.131=select min(gold)\nfrom participant\nwhere nation_code = 'KOR';
EXAMPLE.132=select sum(gold)\nfrom participant\nwhere host_year = 1988;
EXAMPLE.133=select variance(gold)\nfrom participant\nwhere nation_code = 'KOR';
EXAMPLE.134=select stddev(gold), stddev(silver), stddev(bronze)\nfrom participant\nwhere nation_code = 'KOR';
EXAMPLE.135=select name,\ncase when gender = 'M' then 'MAN'\n         when gender = 'W' then 'WOMAN'\n         end as GENDER\nfrom athlete;
EXAMPLE.136=case when a is not null\nthen a \nelse b\nend
EXAMPLE.137=select  *\nfrom (select nation_code from participant \nwhere host_year = 1988\norder by gold desc, silver desc, bronze desc)\nas T\nwhere rownum <5;
EXAMPLE.138=select  *\nfrom (select nation_code from participant\nwhere host_year = 1988\norder by gold desc, silver desc, bronze desc)\nas T\nwhere rownum >= 5 and rownum <10;
EXAMPLE.139=select name, rownum / 10\nfrom stadium\nwhere mod(rownum, 10) = 0;
EXAMPLE.140=select name, inst_num() / 10\nfrom stadium\nwhere mod(inst_num(), 10) = 0;
EXAMPLE.141=select distinct nation_code, silver, host_year\nfrom participant\norder by silver desc for orderby_num() between 1 and 10;
EXAMPLE.142=select nation_code, avg(gold) as g from participant group by\nnation_code having groupby_num() < 10;
EXAMPLE.143=select nation_code, avg(gold), avg(silver), avg(bronze)\nfrom participant\nwhere gold+silver+bronze>0 and inst_num() <= 1000\ngroup by nation_code \nhaving groupby_num() <= 10
EXAMPLE.144=create trigger t1\ndeferred insert on c1\nexecute after\nupdate c1 set a1 = a1 + 1\nwhere a1 > 25;
EXAMPLE.145=create trigger check_name_first\nbefore insert on athlete\nif new.gender is null\nexecute reject;
EXAMPLE.146=create trigger medal_trigger\nbefore update on participant\nif new.gold < 0 OR new.silver < 0 or new.bronze < 0\nexecute reject;
EXAMPLE.147=create trigger medal_trig\nstatus active\nbefore update on participant\nif new.gold < 0 OR new.silver < 0 OR new.bronze < 0\nexecute reject;
EXAMPLE.148=
EXAMPLE.149=create trigger foo_trigger\ndeferred update on foo\nif old.n = 100\nexecute print 'foo_trigger';
EXAMPLE.150=
EXAMPLE.151=set trigger trace on;
EXAMPLE.152=set trigger maximum depth 5;
EXAMPLE.153=rename trigger medal_trig as medal_trigger;
EXAMPLE.154=alter trigger medal_trigger priority 1.0;
EXAMPLE.155=alter trigger medal_trigger status inactive;
EXAMPLE.156=drop trigger medal_trigger;
EXAMPLE.157=execute deferred trigger medal_trigger;
EXAMPLE.158=drop deferred trigger medal_trigger;
EXAMPLE.159=select distinct h.host_year, o.host_nation\nfrom olympic o left outer join history h on h.host_year=o.host_year where\no.host_year>1950;
EXAMPLE.160=select distinct h.host_year, o.host_nation\nfrom history h right outer join olympic o on h.host_year=o.host_year where\no.host_year>1950;
EXAMPLE.161=
EXAMPLE.162=select chr(65), chr(66), chr(67) from db_root;
EXAMPLE.163=select host_year, coalesce(mascot, 'Not Exist') from olympic;
EXAMPLE.164=select decode( length('Korea'),     4 ,   'length: 4', \n                                    5 ,   'length: 5', \n                                    6 ,   'length: 6', \n                                    'length: unknown')\nfrom db_root;
EXAMPLE.165=select length(name), name \nfrom nation order by 1 asc;
EXAMPLE.166=select lengthb(name), name \nfrom nation order by 1 asc;
EXAMPLE.167=select host_year, nullif(mascot, 'HODORI') from olympic;
EXAMPLE.168=select host_year, nvl( mascot, 'Not Exist') from olympic;
EXAMPLE.169=select host_year, nvl2( mascot, 'Exist', 'Not Exist' ) from olympic;
EXAMPLE.170=select rand() from db_root;\nselect mod(rand(), 100) from db_root;
EXAMPLE.171=select substr(NULL, 2) from db_root;
EXAMPLE.172=select substrb('Seawind Beach Resort', 9, 5) from db_root;
EXAMPLE.173=select trunc(99.999999, -1), trunc(99.999999, 3) from db_root;
EXAMPLE.174=select power(2, 3), power(5, 2) from db_root;
EXAMPLE.201= <Name> \n\n   ALTER\n\n <Description> \n\n\nChange the definition of a class.\n\n <Syntax> \n\n\n<alter> ::= ALTER [ <class_type> ] <class_name> <alter_clause> ;\n\n<class_type> ::= CLASS | TABLE | VCLASS | VIEW\n\n<alter_clause> ::= ADD <alter_add> [ INHERIT <resolution_comma_list> ] |\n                   DROP <alter_drop> [ INHERIT <resolution_comma_list> ] |\n                   RENAME <alter_rename> [ INHERIT <resolution_comma_list> ] |\n                   CHANGE <alter_change> |\n                   INHERIT <resolution_comma_list>\n\n<alter_add> ::= [ ATTRIBUTE | COLUMN ] <class_element_comma_list> |\n                CLASS ATTRIBUTE <attribute_definition_comma_list> |\n                FILE <file_name_comma_list> |\n                METHOD <method_definition_comma_list> |\n                QUERY <select_statement> |\n                SUPERCLASS <class_name_comma_list>\n\n<alter_change> ::= FILE <file_path_name> AS <file_path_name> |\n                   METHOD <method_definition_comma_list> |\n                   QUERY [ <unsigned_integer_literal> ] <select_statement> |\n                   <general_attribute_name> DEFAULT <value_specifiation>\n\n<alter_drop> ::= [ ATTRIBUTE | COLUMN | METHOD ]\n                 <general_attribute_name_comma_list> |\n                 FILE <file_name_comma_list> |\n                 QUERY [ <unsigned_integer_literal> ] |\n                 SUPERCLASS <class_name_comma_list> |\n                 CONSTRAINT <constraint_name>\n\n<alter_rename> ::= [ ATTRIBUTE | COLUMN | METHOD ] \n                   <general_atttribute_name> AS <attribute_name> |\n                   FUNCTION OF <general_attribute_name> AS <function_name>\n                   FILE <file_path_name> AS <file_path_name>\n\n<resolution> ::= <general_attribute_name> OF <class_name>\n                 [ AS <attribute_name> ]\n\n<class_element> ::= <attribute_definition> | <class_constraint>\n\n\n <Example> \nalter table athlete add column age int default 0 not null;
EXAMPLE.202= <Name> \n\n   CALL\n\n <Description> \n\n\nInvoke a method on an instance or class.\n\n <Syntax> \n\n\n<call> ::= CALL <method_name> ( [ <argument_value_comma_list> ] ) \n           ON <call_target> [ <to_variable> ] ;\n\n<argument_value> ::= <value_specification>\n\n<call_target> ::= <variable_name> | <metaclass_specification>\n\n<metaclass_specification> ::= CLASS <class_name>\n\n\n <Example> 
EXAMPLE.203= <Name> \n\n   CREATE\n\n <Description> \n\n\nCreate a class, virtual class, or view.\n\n <Syntax> \n\n<create> ::= <create_class> | <create_virtual_class>\n\n<create_class> ::= CREATE {CLASS | TABLE} <class_name>\n                   [ <subclass_definition> ]\n                   [ ( <class_element_comma_list> ) ]\n                   [ CLASS ATTRIBUTE ( <attribute_definition_comma_list> ) ]\n                   [ METHOD <method_definition_comma_list> ]\n                   [ FILE <method_file_comma_list> ]\n                   [ INHERIT <resolution_comma_list> ]\n                   ;\n\n<create_virtual_class> ::= CREATE {VCLASS | VIEW} <class_name>\n                           [ <subclass_definition> ]\n                           [ ( <view_attribute_def_comma_list> ) ]\n                           [ CLASS ATTRIBUTE\n                             ( <attribute_definition_comma_list> ) ]\n                           [ METHOD <method_definition_comma_list> ] \n                           [ FILE <method_file_comma_list> ]\n                           [ INHERIT <resolution_comma_list> ]\n                           [ AS <query_statement> ]\n                           [ WITH CHECK OPTION ]\n                           ;\n\n<subclass_definition> ::= AS SUBCLASS OF <class_name_comma_list>\n\n<class_element> ::= <attribute_definition> | <class_constraint>\n\n<attribute_definition> ::= <general_attribute_name> <attribute_type>\n                           [ <default_or_shared> ]\n                           [ <attribute_constraint_list> ]\n\n<class_constraint> ::= [ CONSTRAINT <constraint_name> ]\n                       UNIQUE ( <attribute_name_comma_list>\n\n<view_attribute_definition> ::= <attribute_definition> | <attribute_name>\n\n<default_or_shared> ::= SHARED [ <value_specification> ] |\n                        DEFAULT <value_specification>\n\n<attribute_constraint> ::= NOT NULL | UNIQUE\n\n<method_definition> ::= <general_method_name>\n                        [ ( [ <argument_type_comma_list> ] ) ]\n                        [ <result_type> ]\n                        [FUNCTION <function_name>]\n\n<resolution> ::= <general_attribute_name> OF <class_name>\n                 [ AS <attribute_name> ]\n\n<general_attribute_name> ::= [ CLASS ] <attribute_name>\n<general_method_name>    ::= [ CLASS ] <method_name>\n\n<attribute_type> ::= <domain_name>\n<argument_type>  ::= <domain_name>\n<result_type>    ::= <domain_name>\n\n\n <Example> \n\n\nCREATE TABLE record (\n    host_year    INT NOT NULL,\n    event_code   INT NOT NULL,\n    athlete_code INT NOT NULL,\n    medal        CHAR(1)  NOT NULL,\n    score        VARCHAR(20),\n    unit         VARCHAR(5),\n    PRIMARY KEY(host_year, event_code, athlete_code, medal)\n);
EXAMPLE.204= <Name> \n\n   DELETE FROM\n\n <Description> \n\n\nDelete instances of classes.\n\n <Syntax> \n\n<delete> ::= DELETE FROM <class_specification> [ WHERE <search_condition> ] ;\n\n<class_specification> ::= <class_hierarchy> | ( <class_hierarchy_comma_list )\n\n<class_hierarchy> ::= [ ONLY ] <class_name> |\n                      ALL <class_name> [ EXCEPT <class_specification> ]\n\n\n <Example> 
EXAMPLE.205= <Name> \n\n   DROP\n\n <Description> \n\n\nDrop a class and all instances of the class.\nDrop an index on an attribute(s).\nDrop a trigger.\nDrop deferred trigger action.\n\n\n <Syntax> \n\n<drop> := <drop_class> | <drop_index> | <drop_trigger> | <drop_deferred>\n\n<drop_class> ::= DROP [ <class_type> ] <class_specification_comma_list> ;\n\n<class_specification> ::= <class_hierarchy> | ( <class_hierarchy_comma_list )\n\n<class_hierarchy> ::= [ ONLY ] <class_name> |\n                      ALL <class_name> [ EXCEPT <class_specification> ]\n\n<drop_index> ::= DROP INDEX ON <class_name> ( <attribute_name_comma_list> ) ;\n\n<drop_trigger> ::= DROP TRIGGER <trigger_name_comma_list> ;\n\n<drop_deferred> ::= DROP DEFERRED TRIGGER <trigger_spec> ;\n\n<trigger_spec> ::= <trigger_name_comma_list> | ALL TRIGGERS ;\n\n\n <Example> \n\ndrop index game_date_idx;\ndrop index on game(medal)\n\ndrop trigger medal_trigger;\ndrop deferred trigger medal_trigger;
EXAMPLE.206= <Name> \n\n   GRANT\n\n <Description> \n\n\nGrant authorization on a class.\n\n <Syntax> \n\n<grant> ::= GRANT <privileges> ON <class_specification_comma_list>\n              TO <user_name_comma_list> [ WITH GRANT OPTION ] ;\n\n<privileges> ::= ALL [ PRIVILEGES ] | <privilege_comma_list>\n\n<privilege> ::= SELECT | INSERT | DELETE | UPDATE | ALTER | INDEX | EXECUTE\n\n<user_name> ::= <identifier>\n\n<class_specification> ::= <class_hierarchy> | ( <class_hierarchy_comma_list )\n\n<class_hierarchy> ::= [ ONLY ] <class_name> |\n                      ALL <class_name> [ EXCEPT <class_specification> ]\n\n <Example> 
EXAMPLE.207= <Name> \n\n   INDEX\n\n <Description> \n\n\nBuild an index on an attribute.\n\n <Syntax> \n\n<index> ::= CREATE INDEX ON <index_specification> ;\n\n<index_specification> ::= <class_name> ( <attribute_name_comma_list> ) ;\n\n\n <Example> \n\ncreate index game_date_idx on game(game_date);
EXAMPLE.208= <Name> \n\n   INSERT INTO\n\n <Description> \n\n\nInsert new instances of a class.\n\n <Syntax> \n\n<insert> ::= INSERT INTO <class_name> <insert_spec> ;\n\n<insert_spec> ::= [ ( [ <attribute_name_comma_list> ] ) ] <value_clause> |\n                  DEFAULT VALUES;\n\n<value_clause> ::= VALUES ( [ <insert_item_comma_list> ] )\n                   [ TO <variable_name> ] |\n                   <query_statement>\n\n<insert_item> ::= <expression> | <method_call>\n\n\n <Example> \n\ninsert into athlete (name, gender, nation_code, event)\n    values ('Nam Hyun-Hee', 'W', 'KOR', 'Fencing');
EXAMPLE.209= <Name> \n\n   CREATE VIEW\n\n <Description> \n\nCreate a virtual class or view of a local database entity (SQL/M).\n\n <Syntax> \n\n<create_vclass> ::= CREATE {VCLASS | VIEW} <class_name>\n                    { <ldb_vclass_definition> | <vclass_definition> }\n                    ;\n\n<ldb_vclass_definition> ::= ON LDB <identifier>\n                            [ AS SUBCLASS OF <class_name_comma_list> ]\n                            [ CLASS ATTRIBUTE\n                              ( <class_attribute_def_comma_list> ) ]\n                            [ ( <view_attribute_definition_comma_list> ) ]\n                            [ OBJECT_ID ( <attribute_name_comma_list> ) ]\n                            [ METHOD <method_definition_comma_list> ] \n                            [ FILE <method_file_comma_list> ]\n                            [ INHERIT <resolution_comma_list> ]\n                            [ AS <select_statement> ]\n\n<vclass_definition> ::= [ AS SUBCLASS OF <class_name_comma_list> ]\n                        [ CLASS ATTRIBUTE\n                          ( <class_attribute_def_comma_list> ) ]\n                        [ ( <view_attribute_definition_comma_list> ) ]\n                        [ METHOD <method_definition_comma_list> ] \n                        [ FILE <method_file_comma_list> ]\n                        [ INHERIT <resolution_comma_list> ]\n                        [ AS <query_list> ]\n                        [ WITH CHECK OPTION ]\n\n<class_attribute_def> ::= <attribute_name> <data_type> \n                          [ DEFAULT <value_specification> ]\n\n<view_attribute_definition> ::= <attribute_definition> | <attribute_name>\n\n<attribute_definition> ::= <attribute_name> <data_type> [ <default_or_shared> ]\n\n<method_definition> ::= [ CLASS ] <method_name>\n                        [ ( [ <argument_type_comma_list> ] ) ]\n                        [ <result_type> ]\n                        [FUNCTION <function_name>]\n\n<default_or_shared> ::= SHARED [ <value_specification> ] |\n                        DEFAULT <value_specification>\n\n<resolution> ::= [ CLASS ] <attribute_name> OF <class_name>\n                 [ AS <attribute_name> ]\n\n<argument_type> ::= <data_type> | POINTER\n<result_type>   ::= <data_type> | POINTER\n\n <Example> \n\ncreate view game_2004 (name varchar(40), medal char(6) default 'none')\nas select a.name, g.medal\nfrom game g, athlete a\nwhere g.host_year = 2004 and g.athlete_code =  a.code ;
EXAMPLE.210= <Name> \n\n   RENAME\n\n <Description> \n\n\nRename a class, virtual class, or trigger.\n\n <Syntax> \n\n<rename> ::= <rename_class> | <rename_trigger>\n\n<rename_class> ::= RENAME CLASS <class_name> AS <class_name> ;\n\n<rename_trigger> ::= RENAME TRIGGER <trigger_name> AS <trigger_name> ;\n\n\n <Example> \n\nrename class history_record as record_history;\n\nrename trigger medal_trig as medal_trigger;
EXAMPLE.211= <Name> \n\n   REVOKE\n\n <Description> \n\n\nRevoke authorization on a class.\n\n <Syntax> \n\n<revoke> ::= REVOKE <privileges> ON <class_specification_comma_list> \n             FROM <user_name_comma_list> ;\n\n<privileges> ::= ALL [ PRIVILEGES ] | <privilege_comma_list>\n\n<privilege> ::= SELECT | INSERT | DELETE | UPDATE | ALTER | INDEX | EXECUTE\n\n<user_name> ::= <identifier>\n\n<class_specification> ::= <class_hierarchy> | ( <class_hierarchy_comma_list )\n\n<class_hierarchy> ::= [ ONLY ] <class_name> |\n                      ALL <class_name> [ EXCEPT <class_specification> ]\n\n <Example> 
EXAMPLE.212= <Name> \n\n   SELECT\n\n <Description> \n\n\nQuery on instances of classes.\n\n <Syntax> \n\n\n<select_statement> ::= <query_specification> ;\n\n<query_specification> ::= SELECT [ <qualifier> ] <select_expressions> \n                          [ { TO | INTO } <variable_comma_list ]\n                          FROM <table_specification_comma_list>\n                          [ WHERE <search_condition> ]\n                          [ GROUP BY <path_expression_comma_list> ]\n                          [ HAVING <search_condition> ]\n\n<qualifier> ::= ALL | DISTINCT | UNIQUE\n\n<select_expressions> ::= * | <expression_comma_list>\n\n<table_specification> ::= <class_specfication> [ <correlation> ] |\n                          <metaclass_specification> [ <correlation> ] |\n                          <subquery> <correlation> |\n                          TABLE ( <expression> ) <correlation>\n\n<correlation> ::= [ AS ] <identifier> [ ( <identifier_comma_list> ) ]\n\n<class_specification> ::= <class_hierarchy> | ( <class_hierarchy_comma_list )\n\n<class_hierarchy> ::= [ ONLY ] <class_name> |\n                      ALL <class_name> [ EXCEPT <class_specification> ]\n\n<metaclass_specification> ::= CLASS <class_name>\n\n<query_statement> ::= <query_expression>\n                      [ ORDER BY <sort_specification_comma_list> ]\n\n<query_expression> ::= <query_term>\n                       [ <table_operator> [ <qualifier> ] <query_term> ] ...\n\n<query_term> ::= <query_specification> | <subquery>\n\n<subquery> ::= ( <query_statement> )\n\n<table_operator> ::= UNION | DIFFERENCE | INTERSECTION\n\n<sort_specification> ::= <path_expression> [ ASC | example ] |\n                         <unsigned_integer_literal [ ASC | example ]\n\n\n <Example> 
EXAMPLE.213= <Name> \n\n   TRIGGER\n\n <Description> \n\n\nCreate a trigger.\nChange the status or priority of a trigger.\n\n <Syntax> \n\n<create_trigger> ::= CREATE TRIGGER <trigger_name>\n                     [ <status_spec> ]\n                     [ <priority_spec> ]\n                     <event_time> <event_type> [ <event_target> ]\n                     [ IF <trigger_condition> ]\n                     EXECUTE [ <delayed_action_time> ] <trigger_action> ;\n\n<alter_trigger> ::= ALTER TRIGGER <trigger_name> <alter_trigger_clause> ;\n\n<alter_trigger_clause> ::= <status_spec> | <priority_spec>\n\n\n<status_spec> ::= STATUS <trigger_status>\n\n<trigger_status> := ACTIVE | INACTIVE;\n\n<priority_spec> ::= PRIORITY <unsigned_real>\n\n<event_time> ::= BEFORE | AFTER | DEFERRED;\n\n<delayed_action_time> ::= AFTER | DEFERRED;\n\n<event_type> ::= INSERT | STATEMENT INSERT | UPDATE | STATEMENT UPDATE | \n                 DELETE | STATEMENT DELETE | COMMIT | ROLLBACK\n\n<event_target> ::= ON <class_name> [ ( <attribute_name> ) ]\n\n<trigger_condition> ::= <search_condition> | <call_statement>\n\n<trigger_action> ::= REJECT | INVALIDATE TRANSACTION | \n                     PRINT <string_literal> |\n                     EVALUATE <expression> |\n                     <insert_statement> |\n                     <update_statement> |\n                     <delete_statement> |\n                     <call_statement>\n\n\n <Example> 
EXAMPLE.214= <Name> \n\n   UPDATE\n\n <Description> \n\n\nUpdate attributes of instances or classes.\n\n <Syntax> \n\n\n<update> ::= UPDATE { <class_specification> | <metaclass_specification> }\n             SET <assignment_comma_list>\n             [ WHERE <search_condition> ]\n             ;\n\n<class_specification> ::= <class_hierarchy> | ( <class_hierarchy_comma_list )\n\n<class_hierarchy> ::= [ ONLY ] <class_name> |\n                      ALL <class_name> [ EXCEPT <class_specification> ]\n\n<metaclass_specification> ::= CLASS <class_name>\n\n<assignment> ::= [ <class_variable> . ] \n                 <attribute_name> = { <expression> | NULL }\n\n\n <Example> 
EXAMPLE.300=-------------------------------------------------------------------------\n <Result Example>\n\nselect 1 + 1, 1 * 1, 1 - 1 from db_root;\n\n          1+1          1*1          1-1\n=======================================\n            2            1            0\n\n1 rows selected.\n\n\nselect 'new generation'  || ' database system' from db_root;\n\n  'new generation'||' database system'\n======================\n  'new generation database system'\n\n1 rows selected.\n\nselect {1,2}+{3}, {1,2}-{2} from db_root;\n\n  {1, 2}+{3}            {1, 2}-{2}          \n============================================\n  {1, 2, 3}             {1}                 \n\n1 rows selected.\n\n-------------------------------------------------------------------------
EXAMPLE.301=
EXAMPLE.302=-------------------------------------------------------------------------\n <Result Example>\n\nselect host_year, host_nation from olympic order by host_nation asc;\n\n    host_year  host_nation         \n===================================\n         2000  'Australia'         \n         1956  'Australia'         \n         1920  'Belgium'           \n         1976  'Canada'            \n         1948  'England'           \n         1952  'Finland'           \n         1924  'France'            \n         1900  'France'            \n         1972  'Germany'           \n         1936  'Germany'           \n         2004  'Greece'            \n         1896  'Greece'            \n         1960  'Italy'             \n         1964  'Japan'             \n         1988  'Korea'             \n         1968  'Mexico'            \n         1928  'Netherlands'       \n         1992  'Spain'             \n         1912  'Sweden'            \n         1996  'USA'               \n         1984  'USA'               \n         1932  'USA'               \n         1904  'USA'               \n         1980  'USSR'              \n         1908  'United Kingdom'    \n\n25 rows selected.\n\nselect distinct h.host_year, o.host_nation from history h, olympic o\nwhere h.host_year=o.host_year and o.host_year>1950 order by o.host_nation;\n\n    host_year  host_nation         \n===================================\n         2000  'Australia'         \n         2004  'Greece'            \n         1988  'Korea'             \n         1968  'Mexico'            \n         1992  'Spain'             \n         1984  'USA'               \n         1996  'USA'               \n         1980  'USSR'              \n\n8 rows selected.\n-------------------------------------------------------------------------
EXAMPLE.303=-------------------------------------------------------------------------\n <Result Example>\n\nselect host_year, host_nation from olympic order by host_nation asc;\n\n    host_year  host_nation         \n===================================\n         2000  'Australia'         \n         1956  'Australia'         \n         1920  'Belgium'           \n         1976  'Canada'            \n         1948  'England'           \n         1952  'Finland'           \n         1924  'France'            \n         1900  'France'            \n         1972  'Germany'           \n         1936  'Germany'           \n         2004  'Greece'            \n         1896  'Greece'            \n         1960  'Italy'             \n         1964  'Japan'             \n         1988  'Korea'             \n         1968  'Mexico'            \n         1928  'Netherlands'       \n         1992  'Spain'             \n         1912  'Sweden'            \n         1996  'USA'               \n         1984  'USA'               \n         1932  'USA'               \n         1904  'USA'               \n         1980  'USSR'              \n         1908  'United Kingdom'    \n\n25 rows selected.\n-------------------------------------------------------------------------
EXAMPLE.304=-------------------------------------------------------------------------\n <Result Example>\n\nselect host_year, nation_code, gold from participant where gold\n        between 10 and 15 order by 3 desc, 2;\n\n    host_year  nation_code                  gold\n================================================\n         1996  'FRA'                          15\n         1992  'CUB'                          14\n         1992  'ESP'                          13\n         2000  'FRA'                          13\n         2004  'GER'                          13\n         2000  'GER'                          13\n         2000  'ITA'                          13\n         1996  'ITA'                          13\n         1992  'KOR'                          12\n         1988  'KOR'                          12\n         2000  'NED'                          12\n         2000  'CUB'                          11\n         2004  'FRA'                          11\n         1988  'FRG'                          11\n         2000  'GBR'                          11\n         1992  'HUN'                          11\n         1988  'HUN'                          11\n         2000  'ROU'                          11\n         1988  'BUL'                          10\n         2004  'ITA'                          10\n\n20 rows selected.\n\nselect host_year, nation_code, gold from participant where gold\n        not between 0 and 15 order by 3 desc, 2;\n\n    host_year  nation_code                  gold\n================================================\n         1988  'URS'                          55\n         1992  'EUN'                          45\n         1996  'USA'                          44\n         1988  'GDR'                          37\n         2000  'USA'                          37\n         1992  'USA'                          37\n         2004  'USA'                          36\n         1988  'USA'                          36\n         1992  'GER'                          33\n         2004  'CHN'                          32\n         2000  'RUS'                          32\n         2000  'CHN'                          28\n         2004  'RUS'                          27\n         1996  'RUS'                          26\n         1996  'GER'                          20\n         2004  'AUS'                          17\n         2000  'AUS'                          16\n         1996  'CHN'                          16\n         1992  'CHN'                          16\n         2004  'JPN'                          16\n\n20 rows selected.\n\n-------------------------------------------------------------------------
EXAMPLE.305=
EXAMPLE.306=
EXAMPLE.307=-------------------------------------------------------------------------\n <Result Example>\n\nselect n.name, n.continent from nation n\nwhere exists (select * from participant p where p.host_year=1988 and\np.nation_code=n.code) and rownum < 10;\n\n  name                  continent           \n============================================\n  'Zimbabwe'            'Africa'            \n  'Zambia'              'Africa'            \n  'Zaire'               'Africa'            \n  'Yugoslavia'          'Europe'            \n  'Yemen Democratic Republic'  'Asia'              \n  'Yemen'               'Asia'              \n  'Yemen Arabian Republic'  'Asia'              \n  'Saint Vincent & the Grenadines'  'Americas'          \n  'Vietnam'             'Asia'              \n\n9 rows selected.\n-------------------------------------------------------------------------
EXAMPLE.308=-------------------------------------------------------------------------\n <Result Example>\n\nselect avg(gold) from participant where nation_code = 'KOR';\n\n    avg(gold)\n=============\n            9\n\n1 rows selected.\n-------------------------------------------------------------------------
EXAMPLE.309=-------------------------------------------------------------------------\n <Result Example>\n\nselect nation_code, \n\tavg(gold) as  "avg",\n\tcount(gold) "count",\n\tmax(gold) "max",\n\tmin(gold) "min",\n\tsum(gold) "sum",\n\tstddev(gold) "stddev",\n\tvariance(gold) "variance"\nfrom participant \nwhere gold > 0\ngroup by nation_code \nhaving groupby_num() < 4;\n\n  nation_code                   avg        count          max          min      \n    sum       stddev     variance\n================================================================================\n=================================\n  'ALG'                           1            3            2            1      \n      4            0            0\n  'ARG'                           2            1            2            2      \n      2            0            0\n  'ARM'                           1            1            1            1      \n      1            0            0\n\n3 rows selected.\n-------------------------------------------------------------------------
EXAMPLE.310=-------------------------------------------------------------------------\n <Result Example>\n\nselect name, gender, players from event where players in (5, 6);\n\n  name                  gender                    players\n=========================================================\n  'Basketball'          'W'                             5\n  'Basketball'          'M'                             5\n  'Rhythmic Team'       'W'                             6\n  'Rhythmic Team'       'M'                             6\n  'Rhythmic Group Competition'  'W'                             6\n  'Hockey'              'W'                             6\n  'Hockey'              'M'                             6\n  'Indoor'              'W'                             6\n  'Indoor'              'M'                             6\n\n9 rows selected.\n-------------------------------------------------------------------------
EXAMPLE.311=-------------------------------------------------------------------------\n <Result Example>\n\n\nselect :p1.description, :p1.has_lifeguard from db_root;\n\n  capital             \n======================\n  'Seoul'  \n\n1 rows selected.\n\n-- using host variable (:p1)\n\nselect name from nation where capital = :p1;\n\n  name                \n======================\n  'Korea'             \n\n1 rows selected.\n-------------------------------------------------------------------------
EXAMPLE.312=-------------------------------------------------------------------------\n <Result Example>\n\nselect name from nation where name like 're%';\n\n  name                \n======================\n  'Zaire'             \n  'Saint Vincent & the Grenadines'\n  'Singapore'         \n  'Democratic People's Republic of Korea'\n  'Korea'             \n  'Ireland'           \n  'Grenada'           \n  'Greece'            \n  'Great Britain'     \n  'Eritrea'           \n  'Cote dlvoire'      \n\n11 rows selected.\n-------------------------------------------------------------------------
EXAMPLE.313=-------------------------------------------------------------------------\n <Result Example>\n\ncreate serial s;\n\nselect s.next_value from db_root;\n\n  s.next_value        \n======================\n  1                   \n\n1 rows selected.\n\nselect s.next_value from db_root;\n\n  s.next_value        \n======================\n  2                   \n\n1 rows selected.\n-------------------------------------------------------------------------
EXAMPLE.314=-------------------------------------------------------------------------\n <Result Example>\n\nselect host_year, mascot, slogan from olympic\nwhere mascot is not null;\n\n    host_year  mascot                slogan              \n=========================================================\n         2004  'Athena  Phevos'      'Welcome Home'      \n         2000  'Olly Syd Millie'     'Share the Spirit'  \n         1996  'Izzy'                'The Celebration of the Century'\n         1992  'Cobi'                'Friends Forever'   \n         1988  'HODORI'              'Harmony and progress'\n         1984  'Sam'                 'Play part in History'\n         1980  'Misha'               ''                  \n         1976  'Amik'                ''                  \n         1972  'Waldi'               ''                  \n         1968  ''                    ''                  \n         1964  ''                    ''                  \n         1960  ''                    ''                  \n         1956  ''                    ''                  \n         1952  ''                    ''                  \n         1948  ''                    ''                  \n         1936  ''                    ''                  \n         1932  ''                    ''                  \n         1928  ''                    ''                  \n         1924  ''                    ''                  \n         1920  ''                    ''                  \n         1912  ''                    ''                  \n         1908  ''                    ''                  \n         1904  ''                    ''                  \n         1900  ''                    ''                  \n         1896  ''                    ''                  \n\n25 rows selected.\n-------------------------------------------------------------------------
EXAMPLE.315=-------------------------------------------------------------------------\n <Result Example>\n\nselect distinct h.host_year, o.host_nation\nfrom olympic o left outer join history h on h.host_year=o.host_year where\no.host_year>1950;\n\n    host_year  host_nation         \n===================================\n         NULL  'Australia'         \n         NULL  'Canada'            \n         NULL  'Finland'           \n         NULL  'Germany'           \n         NULL  'Italy'             \n         NULL  'Japan'             \n         1968  'Mexico'            \n         1980  'USSR'              \n         1984  'USA'               \n         1988  'Korea'             \n         1992  'Spain'             \n         1996  'USA'               \n         2000  'Australia'         \n         2004  'Greece'            \n\n14 rows selected.\n-------------------------------------------------------------------------
EXAMPLE.316=
EXAMPLE.317=
EXAMPLE.318=-------------------------------------------------------------------------\n <Result Example>\n\nselect distinct nation_code, host_year, gold + silver + bronze from\nparticipant where gold + silver + bronze > any (select gold + silver + bronze\nfrom participant where nation_code = 'KOR') and rownum < 10;\n\n  nation_code             host_year  gold+silver+bronze\n=======================================================\n  'AUS'                        2004                  49\n  'CHN'                        2004                  63\n  'FRA'                        2004                  33\n  'GBR'                        2004                  30\n  'GER'                        2004                  49\n  'ITA'                        2004                  32\n  'JPN'                        2004                  37\n  'KOR'                        2004                  30\n  'RUS'                        2004                  92\n\n9 rows selected.\n-------------------------------------------------------------------------
EXAMPLE.319=-------------------------------------------------------------------------\n <Result Example>\n\n(\n  (\n    ( \n      select name, players from event where rownum = 1\n      union\n      select name, players from event where rownum = 10\n      union\n      select name, players from event where rownum = 100\n    )\n    difference\n    (\n      select name, players from event where rownum = 10 or rownum = 100\n    ) \n  )\n  intersect\n  select name, players from event where rownum = 1\n)\nunion all\nselect name, players from event where rownum = 1;\n\n  name                      players\n===================================\n  'Greco-Roman 97kg'              1\n  'Greco-Roman 97kg'              1\n\n2 rows selected.\n-------------------------------------------------------------------------
EXAMPLE.400=-------------------------------------------------------------------------\n <Result Example>\n\nselect ADD_MONTHS(DATE '2/29/1980',12) from db_root;\n\n   add_months(date '2/29/1980', 12)\n===================================\n  02/28/1981                       \n\n1 rows selected.\n-------------------------------------------------------------------------
EXAMPLE.401=-------------------------------------------------------------------------\n <Result Example>\n\nselect 'Carlyle on the Bay' "String",\n\tBIT_LENGTH ('Carlyle on the Bay') "BIT_LENGTH",\n\tCHAR_LENGTH('Carlyle on the Bay') "CHAR_LENGTH",\n\tOCTET_LENGTH('Carlyle on the Bay') "OCTET_LENGTH",\n\tLENGTH('Carlyle on the Bay') "LENGTH",\n\tLENGTHB('Carlyle on the Bay') "LENGTHB"\nfrom db_root\n\n  String\t\t\tBIT_LENGTH\tCHAR_LENGTH\tOCTET_LENGTH\tLENGTH\tLENGTHB\n========================================================================================\n  'Carlyle on the Bay'\t144\t\t18\t\t18\t\t18\t18\n\n1 rows selected.\n-------------------------------------------------------------------------
EXAMPLE.402=-------------------------------------------------------------------------\n <Result Example>\n\nselect CAST(9 as numeric(2,1)) "CAST",\n       TO_NUMBER('123') "TO_NUMBER",\n       TO_CHAR(DATE '02/06', 'DAY', 'ko_KR') "TO_CHAR",\n       TO_DATE('FEB/09/2006 THU', 'MON/DD/YYYY DY') "TO_DATE",\n       TO_TIME('14:00:30') "TO_TIME",\n       TO_TIMESTAMP('02:00 06/02/09', 'HH24:MI YY/MM/DD') "TO_TIMESTAMP"\nfrom db_root\n\n  CAST\tTO_NUMBER\tTO_CHAR\tTO_DATE\tTO_TIME\tTO_TIMESTAMP             \n=================================================================================================\n  9.0\t123\t\t'\uc6d4\uc694\uc77c'\t\t02/09/2006\t02:00:30 PM\t02:00:00 AM 02/09/2006 \n\n1 rows selected.\n-------------------------------------------------------------------------
EXAMPLE.403=-------------------------------------------------------------------------\n <Result Example>\n\nselect chr(65), chr(66), chr(67) from db_root;\n\n   chr(65)\tchr(66)\tchr(67)            \n==============================\n  'A'\t\t'B'\t\t'C'                 \n\n1 rows selected.\n-------------------------------------------------------------------------
EXAMPLE.404=-------------------------------------------------------------------------\n <Result Example>\n\nselect coalesce(nullif(t1, ''), 'blank') "coalesce",\n       nvl(nullif(t1, ''), 'blank') "nvl",\n       nvl2(nullif(t1, ''), 'not_blank', 'blank') "nvl2",\n       nullif(t1, '') "nullif",\n       t1\nfrom table({NULL}) as t(t1);\n\n  coalesce              nvl                   nvl2                  nullif      \n          t1                  \n================================================================================\n==============================\n  'blank'               'blank'               'blank'               NULL        \n          NULL                \n\n1 rows selected.\n-------------------------------------------------------------------------
EXAMPLE.405=-------------------------------------------------------------------------\n <Result Example>\n\nselect nation_code, gold,\n\tdecode(gold, 0, 'none', 1, 'one', 'more than one')\nfrom participant where host_year = 2000 and silver = 1 ;\n\n  nation_code                  gold  decode(gold, 0, 'none', 1, 'one', 'more\ntha\nn one')\n=========================================================\n  'IRL'                           0  'none'              \n  'URU'                           0  'none'              \n  'VIE'                           0  'none'              \n  'KSA'                           0  'none'              \n  'MDA'                           0  'none'              \n  'TRI'                           0  'none'              \n  'PRK'                           0  'none'              \n  'MAR'                           0  'none'              \n  'TPE'                           0  'none'              \n  'BAH'                           1  'one'               \n  'LAT'                           1  'one'               \n  'YUG'                           1  'one'               \n  'UZB'                           1  'one'               \n  'ALG'                           1  'one'               \n  'AUT'                           2  'more than one'     \n  'FIN'                           2  'more than one'     \n  'ETH'                           4  'more than one'   \n\n17 rows selected.\n-------------------------------------------------------------------------
EXAMPLE.406=-------------------------------------------------------------------------\n <Result Example>\n\nselect extract(month from timestamp '01/31/1994 8:15:00 pm') "extract",\n\tmonths_between(date '3/3/1999',date '2/3/1999') "month_between"\nfrom db_root;\n\n      extract                 month_between\n=======================================\n               1\t1.000000000000000e+00\n\n\n1 rows selected.\n-------------------------------------------------------------------------
EXAMPLE.407=-------------------------------------------------------------------------\n <Result Example>\n\nselect nation_code, avg(gold) as g from participant group by\nnation_code having groupby_num() < 10;\n\n  nation_code                     g\n===================================\n  'AFG'                           0\n  'AHO'                           0\n  'ALB'                           0\n  'ALG'                           1\n  'AND'                           0\n  'ANG'                           0\n  'ANT'                           0\n  'ARG'                           0\n  'ARM'                           0\n\n9 rows selected.\n-------------------------------------------------------------------------
EXAMPLE.408=-------------------------------------------------------------------------\n <Result Example>\n\nselect name, inst_num() / 10\nfrom stadium\nwhere mod(inst_num(), 10) = 0;\n\n  name                  inst_num()/10\n=====================================\n  'Olympic Sailing Centre'              1\n  'Omni Coliseum'                   2\n  'Georgia State University Gymnasium'              3\n  'Bruce Stadium, Canberra'              4\n  'Wondang Ranch'                   5\n  'Jamsil Students' Gymnasium'              6\n  'RFK Memorial Stadium'              7\n  'Bernat Picornell pools'              8\n  'Seongnam Stadium'                9\n  'Fencing Hall'                   10\n  'Real Club de Polo'              11\n  'The Dome'                       12\n  'State Hockey Centre'             13\n  'Baseball Stadium'               14\n\n14 rows selected.\n-------------------------------------------------------------------------
EXAMPLE.409=-------------------------------------------------------------------------\n <Result Example>\n\nselect LAST_DAY(DATE '1/01/2000') from db_root;\n\n   last_day(date '1/01/2000')\n=============================\n  01/31/2000                 \n\n1 rows selected.\n-------------------------------------------------------------------------
EXAMPLE.410=-------------------------------------------------------------------------\n <Result Example>\n\nselect LOWER ('AbcdE'),\n\tUPPER ('AbcdE')\nfrom db_root;\n\n   lower('AbcdE')\t\tupper('AbcdE')     \n============================================\n  'abcde'\t\t'ABCDE'             \n\n1 rows selected.\n-------------------------------------------------------------------------
EXAMPLE.411=-------------------------------------------------------------------------\n <Result Example>\n\nselect LPAD('123', 6, 'X'),\n       RPAD('123', 6, 'X')\nfrom db_root;\n\n   lpad('123', 6, 'X')\trpad('123', 6, 'X')\n============================================\n  'XXX123'\t\t'123XXX'            \n\n1 rows selected.\n-------------------------------------------------------------------------
EXAMPLE.412=-------------------------------------------------------------------------\n <Result Example>\n\nselect LTRIM('XXX123','X'),\n\tRTRIM('123XXX','X'),\n\tTRIM('X' from 'XX123XX')\nfrom db_root;\n\n   ltrim('XXX123', 'X')\trtrim('123XXX', 'X')\ttrim(both 'X' from 'XX123XX')\n==================================================================\n  '123'\t\t\t'123'\t\t\t'123'               \n\n1 rows selected.\n\nselect LTRIM('  123  '),\n\tRTRIM('  123  '),\n\tTRIM('  123  ')\nfrom db_root;\n\n   ltrim('  123  ')\trtrim('  123  ')\ttrim(both  from '  123  ')\n==================================================================\n  '123  '\t\t'  123'\t\t'123'               \n\n1 rows selected.\n-------------------------------------------------------------------------
EXAMPLE.413=-------------------------------------------------------------------------\n <Result Example>\n\nselect mod(5,3) "mod",\n\tpower(2,3) "power",\n\trand() "rand"\nfrom db_root\n\n          mod\t\tpower\t        rand\n=============================================\n              2\t\t       8\t2094202884\n\n\n1 rows selected.\n-------------------------------------------------------------------------
EXAMPLE.414=-------------------------------------------------------------------------\n <Result Example>\n\nselect distinct nation_code, silver, host_year\nfrom participant\norder by silver desc for orderby_num() between 1 and 10;\n\n  nation_code                silver    host_year\n================================================\n  'USA'                          39         2004\n  'EUN'                          38         1992\n  'GDR'                          35         1988\n  'USA'                          34         1992\n  'USA'                          32         1996\n  'URS'                          31         1988\n  'USA'                          31         1988\n  'RUS'                          28         2000\n  'RUS'                          27         2004\n  'AUS'                          25         2000\n\n10 rows selected.\n-------------------------------------------------------------------------
EXAMPLE.415=-------------------------------------------------------------------------\n <Result Example>\n\nselect \n  position ('beach' IN 'CubridLand''s beach resort & country club') \n  "position",\n  replace('CubridLand''s beach resort & country club', 'resort', 'hotel') \n  "replace",\n  translate('CubridLand''s beach resort & country club', 'abc', 'def') \n  "translate"\nfrom db_root;\n\n     position  replace               translate           \n=========================================================\n           14  'CubridLand's beach hotel & country club'  'CueridLdnd's eedfh\nre\nsort & fountry flue'\n\n1 rows selected.\n\n-------------------------------------------------------------------------
EXAMPLE.416=-------------------------------------------------------------------------\n <Result Example>\n\nselect distinct nation_code\nfrom participant\nwhere gold > 20\nand rownum between 1 and 3;\n\n  nation_code         \n======================\n  'CHN'               \n  'RUS'               \n  'USA'               \n\n3 rows selected.\n-------------------------------------------------------------------------
EXAMPLE.417=-------------------------------------------------------------------------\n <Result Example>\n\nselect sysdate, \n       systime, \n       systimestamp\nfrom db_root\n\n   SYS_DATE    SYS_TIME     SYS_TIMESTAMP           \n====================================================\n  02/09/2006  06:49:00 PM  06:49:00 PM 02/09/2006   \n\n1 rows selected.\n-------------------------------------------------------------------------
EXAMPLE.418=-------------------------------------------------------------------------\n <Result Example>\n\nselect abs(-3) "abs",\n       floor(19.9) "floor",\n       round(88.88888, 2) "round",\n       trunc(99.999999, 2) "trunc"\nfrom db_root;\n\n          abs\tfloor\t\tround\t\ttrunc               \n===========================================================\n            3\t19.0\t\t88.89000\t\t99.990000           \n\n\n1 rows selected.\n-------------------------------------------------------------------------
EXAMPLE.419=-------------------------------------------------------------------------\n <Result Example>\n\nselect substr('CubridLand''s beach resort & country club', 29, 7) "substr",\n       substrb('CubridLand''s beach resort & country club', 29, 7) "substrb",\n       substring('CubridLand''s beach resort & country club' from 29 for 7) "substring",\n       substr('CubridLand''s beach resort & country club', 37) "substr",\n       substrb('CubridLand''s beach resort & country club', 37) "substrb",\n       substring('CubridLand''s beach resort & country club' from 37) "substring"\nfrom db_root\n\n  substr                substrb               sub\nstring            substr                substrb               substring\n          \n================================================================================\n====================================================\n  'country'             'country'             'country'             'club'      \n          'club'                'club'     \n-------------------------------------------------------------------------

# add constraint
TAB.PRIKEY=Primary key
TAB.FORKEY=Foreign key
TAB.INDEX=Index
TABLE.ORDER=ORDER
LABEL.TARGETCLASS=Target class:
LABEL.TARGETPKEY=Target class primary key
TABLE.TARGETNAME=Target attribute name

# protego version message
TITLE.PROTEGOUSERMANAGEMENT=User management for Protego
TITLE.PROTEGOAUTHMANAGEMENT=Protego authorities management
TITLE.PROTEGOMTMANAGEMENT=Authority shifts management
TITLE.PROTEGOAPIDMANAGEMENT=Application IDs management
TITLE.REMOVEAPID=Delete application IDs
TITLE.REMOVEAUTHORITY=Delete authorities
BUTTON.CHANGEPROTEGOMANAGER=Administrator alteration
BUTTON.SAVETOFILE=Save to a file
TEXT.ADMCHANGED=The administrator has been altered.
TEXT.CHANGEADMFAILED=It has failed in altering the administrator.
TEXT.CONFIRMAUTHREMOVE=Do you want to delete the given authority?
TEXT.FAILEDREMOVEUSERAUTH=It has failed in deleting the user authorities.
TEXT.FAILEDADDUSERAUTH=It has failed in adding the user authorities..
TEXT.FAILEDREMOVEAPID=It has failed in deleting the application ID.
TEXT.FAILEDADDAPID=It has failed in adding the application ID.
TEXT.FAILEDLIST=A list of failures
TEXT.FAILED_N_LIST= authorities have not been added successfully.
TEXT.CONFIRMAPIDREMOVE=Do you want to delete the given application ID?
TEXT.SUCCESSFULLYSAVEDTOFILE=User informations are saved successfully.
TITLE.UPAPORT=CPA port
ERROR.INPUTUPAPORT=Enter the CPA port number.
ERROR.INVALIDPORTNUMBER=CPA port number is invalid.
TABLE.APID=Application ID
TABLE.USERDN=User DN
ERROR.USERDNERROR=The user is different from the logged in.
ERROR.INPUTUSERDN=Enter the user DN.
ERROR.INPUTDBUSER=Enter the database user.
ERROR.INPUTEXPTIME=Enter the expiration time.
ERROR.INPUTMTNAME=Enter the maintenance name.
ERROR.INPUTAPID=Enter the application ID.
ERROR.INVALIDEXPTIME=The expiration time is invalid.
ERROR.ADMAUTH=Administrator authorities are required.
ERROR.REMOVESYSTEMDEFINEDAPID=You cannot delete the application ID defined within the system.
ERROR.GETUSERAUTHINFO=Information on user authorities cannot be fetched.
ERROR.GETAPIDINFO=Information on application IDs cannot be fetched.
#TABLE.DATABASE=\ub370\uc774\ud130\ubca0\uc774\uc2a4
TABLE.DATABASEUSER=Database user
TABLE.REGTIME=The registered time
TABLE.EXPIRETIME=The expiration time
TABLE.MANAGERDN=Administrator DN
TABLE.MAINTENECEID=Maintenance ID
TABLE.NOTE=Note
TABLE.MTUSERNAME=Maintenance name
LABEL.FILENAME=File name:
#TABLE.TYPE=\ud0c0\uc785
MENU.ADD=Add
MENU.REMOVE=Delete
MENU.CHANGE=Change
MENU.ADDAUTHINFO=Enter authority information
MENU.READFROMFILE=Import from a file
MENU.OPTION=Option
TITLE.ADDRESULT=Results of the new authority
TITLE.MTREG=Add an authority shift
TITLE.MTREGRESULT=Results of an authority shift
TITLE.APIDREG=Add an application ID
TEXT.SELECTCERT=Select certification

QEDIT.FIRSTPAGE=First Page
QEDIT.LASTPAGE=Last Page
QEDIT.PREVIOUSPAGE=Previous Page
QEDIT.NEXTPAGE=Next Page
PROGRESSMONITOR.RUNQUERY=Run Query...
QEDIT.LOGSRESULT=Logs
ERROR.ADDCONSTRAINT.FK=The foreign key name can not be empty.
ERROR.ADDCONSTRAINT.INDEX=The index name can not be empty.
ERROR.UNSUPPORTEDJRE=Unsupported JRE version. You must be used JRE 1.5 or a later version.

