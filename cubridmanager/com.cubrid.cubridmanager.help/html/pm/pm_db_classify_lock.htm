
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
 <meta name="generator" content="Adobe RoboHelp 8" />
<title>동시성/잠금 파라미터</title>
<link type="text/css" rel="stylesheet" href="../nhelp.css" />
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
-->
</style>
<script type="text/javascript" language="javascript1.2" src="../whmsg.js"></script>
<script type="text/javascript" language="javascript" src="../whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whlang.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whtopic.js"></script>

</head>
<body><script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.gbWhTopic)
{
	var strUrl = document.location.href;
	var bc = 0;
	var n = strUrl.toLowerCase().indexOf("bc-");
	if(n != -1)
	{
		document.location.href = strUrl.substring(0, n);
		bc = strUrl.substring(n+3);
	}

	if (window.addTocInfo)
	{
	addTocInfo("성능 튜닝\n데이터베이스 서버 설정\n동시성/잠금 파라미터");
         if(strUrl.toLowerCase().indexOf("/help/")==-1){

    addButton("show",BTN_TEXT,"Show","","","","",0,0,"","","");

    }


	}
	if (window.writeBtnStyle)
		writeBtnStyle();

	if (window.writeIntopicBar)
		writeIntopicBar(1);if(strUrl.toLowerCase().indexOf("/help/")==-1){

         document.write("<p style=\"text-align:left\"> ");

AddMasterBreadcrumbs("../index.htm", "", "&nbsp;&gt;&nbsp;", "홈", "../cubrid.htm");

document.write("<a href=\"pm.htm\">성능 튜닝<\/a> &nbsp;&gt;&nbsp; <a href=\"pm_server_general.htm\">데이터베이스 서버 설정<\/a> &nbsp;&gt;&nbsp; 동시성/잠금 파라미터<\/p>");}


	if (window.setRelStartPage)
	{
	setRelStartPage("../index.htm");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}
}
else
	if (window.gbIE4)
		document.location.reload();

//-->
//]]></script>
<h4>동시성/잠금 파라미터</h4>
<p>다음은 데이터베이스 서버의 동시성 제어 및 잠금에 관한 파라미터로 각 파라미터의 타입과 설정 가능한 값의 범위는 다음과 같다.</p>
<table border="1">
<tr>
<th>
<p>파라미터 이름</p>
</th>
<th>
<p>타입</p>
</th>
<th>
<p>디폴트 값</p>
</th>
<th>
<p>최소값</p>
</th>
<th>
<p>최대값</p>
</th>
</tr>
<tr>
<td>
<p>deadlock_detection_interval_in_secs</p>
</td>
<td>
<p>int</p>
</td>
<td>
<p>1</p>
</td>
<td>
<p>1</p>
</td>
<td>
<p>&#160;</p>
</td>
</tr>
<tr>
<td>
<p>isolation_level</p>
</td>
<td>
<p>int</p>
</td>
<td>
<p>3</p>
</td>
<td>
<p>1</p>
</td>
<td>
<p>6</p>
</td>
</tr>
<tr>
<td>
<p>lock_escalation</p>
</td>
<td>
<p>int</p>
</td>
<td>
<p>100000</p>
</td>
<td>
<p>5</p>
</td>
<td>
<p>&#160;</p>
</td>
</tr>
<tr>
<td>
<p>lock_timeout_in_secs</p>
</td>
<td>
<p>int</p>
</td>
<td>
<p>-1</p>
</td>
<td>
<p>-1</p>
</td>
<td>
<p>&#160;</p>
</td>
</tr>
<tr>
<td>
<p>lock_timeout_message_type</p>
</td>
<td>
<p>int</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>2</p>
</td>
</tr>
</table>
<h6>deadlock_detection_interval_in_secs</h6>
<p><span class="keyword">deadlock_detection_interval_in_secs</span>는 중단된 트랜잭션에 대해 교착 상태 여부를 탐지하는 주기를 초 단위로 설정하기 위한 파라미터이다. CUBRID 시스템은 교착 상태에 있는 트랜잭션 중 하나를 롤백시켜 교착 상태를 해결한다. 디폴트 값은 1초이다. 탐지 주기가 길면 오랜 시간동안 교착 상태를 탐지할 수 없으므로 주의한다.</p>
<h6>isolation_level</h6>
<p><span class="keyword">isolation_level</span>은&#160;트랜잭션의 고립 수준을 설정하기 위한 파라미터로 고립 수준이 높을수록 트랜잭션의 동시성이 적고 다른 동시성 트랜잭션에 의해 간섭받지 않는다. <span class="keyword">isolation_level</span> 파라미터는 고립 수준을 의미하는 1에서 6까지의 정수값 또는 문자 스트링으로 설정하며, 디폴트 값은 <span class="keyword">TRAN_REP_CLASS_UNCOMMIT_INSTANCE</span>이다. 각 고립 수준 및 파라미터 설정값에 대한 자세한 내용은 다음 표를 참조한다.</p>
<table border="1">
<tr>
<th>
<p>고립 수준</p>
</th>
<th>
<p>isolation_level 파라미터 설정값</p>
</th>
</tr>
<tr>
<td>
<p>SERIALIZABLE</p>
</td>
<td>
<p>"TRAN_SERIALIZABLE" or 6</p>
</td>
</tr>
<tr>
<td>
<p>REPEATABLE READ CLASS with REPEATABLE READ INSTANCES</p>
</td>
<td>
<p>"TRAN_REP_CLASS_REP_INSTANCE" or "TRAN_REP_READ" or 5</p>
</td>
</tr>
<tr>
<td>
<p>REPEATABLE READ CLASS with READ COMMITTED INSTANCES(or CURSOR STABILITY)</p>
</td>
<td>
<p>"TRAN_REP_CLASS_COMMIT_INSTANCE" or "TRAN_READ_COMMITTED" or "TRAN_CURSOR_STABILITY" or 4</p>
</td>
</tr>
<tr>
<td>
<p>REPEATABLE READ CLASS with READ UNCOMMITTED INSTANCES</p>
</td>
<td>
<p>"TRAN_REP_CLASS_UNCOMMIT_INSTANCE" or "TRAN_READ_UNCOMMITTED" or 3</p>
</td>
</tr>
<tr>
<td>
<p>READ COMMITTED CLASS with READ COMMITTED INSTANCES</p>
</td>
<td>
<p>"TRAN_COMMIT_CLASS_COMMIT_INSTANCE" or 2</p>
</td>
</tr>
<tr>
<td>
<p>READ COMMITTED CLASS with READ UNCOMMITTED INSTANCES</p>
</td>
<td>
<p>"TRAN_COMMIT_CLASS_UNCOMMIT_INSTANCE" or 1</p>
</td>
</tr>
</table>
<ul>
<li><span class="keyword">TRAN_SERIALIZABLE</span> : 오손 읽기, 반복 불가능한&#160;읽기, 유령 읽기 등의 동시성 관련 문제들이 발생하지 않으므로, 가장 높은 수준의 일관성을 보장할 수 있다.</li>
<li><span class="keyword">TRAN_REP_CLASS_REP_INSTANCE</span> : 다른 트랜잭션에 의해 수정된 인스턴스를 읽지 않으며 반복 불가능한 읽기를 수행하지 않는다. 또한, 현재 트랜잭션이&#160;접근한 클래스 또는 인스턴스에 대해 다른 트랜잭션이 갱신 연산을 수행하지 못한다. 다만, 일부 인스턴스에 대해 유령 읽기가 발생할 수 있다.</li>
<li><span class="keyword">TRAN_REP_CLASS_COMMIT_INSTANCE</span> : 다른 트랜잭션에 의해 수정된 인스턴스를 읽지 않으며, 현재 트랜잭션이 접근한 클래스 또는 인스턴스에 대해 다른 트랜잭션이 갱신 연산을 수행하지 못한다. 다만,&#160;일부 인스턴스에 대해 반복 불가능한 읽기가 발생할 수 있다.</li>
<li><span class="keyword">TRAN_REP_CLASS_UNCOMMIT_INSTANCE</span> : 다른 트랜잭션에 의해 수정된 인스턴스를 읽지 않으며, 현재 트랜잭션이 접근한 클래스 또는 인스턴스에 대해 다른 트랜잭션이 갱신 연산을 수행하지 못한다. 다만, 커밋되지 않은 인스턴스에 대해 오손 읽기가 발생할 수 있다.</li>
<li><span class="keyword">TRAN_COMMIT_CLASS_COMMIT_INSTANCE</span> : 다른 트랜잭션에 의해 수정된 인스턴스를 읽지 않는다. 다만, 현재 트랜잭션이 접근한 클래스 또는 인스턴스에 대해 다른 트랜잭션이 갱신 연산을 수행할 수도 있으며, 반복 불가능한 읽기가 발생할 수 있다.</li>
<li><span class="keyword">TRAN_COMMIT_CLASS_UNCOMMIT_INSTANCE</span> : 다른 트랜잭션에 의해 수정된 클래스는 읽지 않지만, 수정된 인스턴스는 읽는다. 또한, 클래스와 인스턴스 모두에 대해 반복 불가능한 읽기가 발생할 수 있다.</li>
</ul>
<h6>lock_escalation</h6>
<p><span class="keyword">lock_escalation</span>은 인스턴스 잠금이 클래스 잠금으로 확대되기 전에&#160;개별 인스턴스에 허용되는 최대 잠금의 개수를 설정하기 위한 파라미터로 디폴트 값은 <span class="keyword">100,000</span>이다. <span class="keyword">lock_escalation</span> 파라미터의 설정값이 작으면, 메모리 잠금 관리에 의한 오버헤드가 적은 반면 동시성은 줄어든다. 반대로 설정값이 크면 메모리 잠금 관리에 의한 오버헤드가 큰 반면 동시성이 향상된다.</p>
<h6>lock_timeout_in_secs</h6>
<p><span class="keyword">lock_timeout_in_secs</span>는 잠금 대기 시간을 지정하기 위한 파라미터로 지정된 시간 이내에 잠금이 허용되지 않으면 해당 트랜잭션이 취소되고 오류가 반환된다. 디폴트 값인 <span class="keyword">-1</span>로 설정하면 잠금이 허용될 때까지의 대기 시간이 무제한이고, 0으로 설정하면 잠금을 대기하지 않는다.</p>
<h6><span class="keyword">lock_timeout_message_type</span></h6>
<p><span class="keyword">lock_timeout_message_type</span>은 잠금 타임아웃 발생 시 반환되는 메시지에 포함되는 정보 수준을 설정하는 파라미터이다. 디폴트 값인 <span class="keyword">0</span>으로 설정하면 잠금 소유에 관한 정보가&#160;메시지에 포함되지 않고,&#160;1로 설정하면 관련된 잠금 소유에 관한 정보가 포함되며, 2로 설정하면 잠금 소유 정보가 모두&#160;포함된다.</p>
<script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);


highlightSearch();
//-->
//]]></script>
</body>
</html>
