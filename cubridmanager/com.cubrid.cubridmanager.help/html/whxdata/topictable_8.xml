<?xml version="1.0" encoding="UTF-8"?>
<ck><di ky="321" rd="pm/pm_db_classify_lock.htm|동시성/잠금 파라미터" ct=" 동시성/잠금 파라미터  다음은 데이터베이스 서버의 동시성 제어 및 잠금에 관한 파라미터로 각 파라미터의 타입과 설정 가능한 값의 범위는 다음과 같다.     ..."/><di ky="322" rd="pm/pm_db_classify_logging.htm|복구/로깅 관련 파라미터" ct=" 로깅 관련 파라미터  다음은 CUBRID 데이터베이스의 백업과 복구에 이용되는 로그에 관련된 파라미터로 각 파라미터의 타입과 설정 가능한 값의 범위는 다음과 같다.  ..."/><di ky="323" rd="pm/pm_db_classify_memory.htm|메모리 관련 파라미터" ct=" 메모리 관련 파라미터  다음은 데이터베이스 서버 또는 클라이언트에서 사용하는 메모리와 관련된 파라미터로 각 파라미터의 타입과 설정 가능한 값의 범위는 다음과 같다.  ..."/><di ky="324" rd="pm/pm_db_classify_querycache.htm|쿼리 캐시 관련 파라미터" ct=" 쿼리 캐시 관련 파라미터  다음은 동일한  SELECT  문에 대해 캐시된 수행 결과를 제공하는 쿼리 캐시 기능과 관련된 파라미터로 각 파라미터의 타입과 설정 가능한 값의 ..."/><di ky="325" rd="pm/pm_db_classify_transaction.htm|커밋 관련 파라미터" ct=" 트랜잭션 처리 관련 파라미터  다음은 트랜잭션의 커밋 성능 향상을 위한 파라미터로 각 파라미터의 타입과 설정 가능한 값의 범위는 다음과 같다.     파라미 ..."/><di ky="326" rd="pm/pm_db_classify_type.htm|구문/타입 관련 파라미터" ct=" 구문/타입 관련 파라미터  다음은 CUBRID에서 지원하는 SQL 구문 및 데이터 타입에 관한 파라미터로 각 파라미터의 타입과 설정 가능한 값의 범위는 다음과 같다.  ..."/><di ky="327" rd="pm/pm_db_classify_utility.htm|유틸리티 관련 파라미터" ct=" 유틸리티 관련 파라미터  다음은 CUBRID에서 사용되는 유틸리티와 관련된 파라미터로 각 파라미터의 타입과 설정 가능한 값의 범위는 다음과 같다.     파 ..."/><di ky="328" rd="pm/pm_db_conf_change.htm|데이터베이스 서버 설정값 변경" ct=" 데이터베이스 서버 설정값 변경  환경 설정 파일 편집  $CUBRID/conf  디렉터리에 있는 데이터베이스 설정 파일( cubrid.conf )을 직접 편집하여 데이 ..."/><di ky="329" rd="pm/pm_db_setting.htm|cubrid.conf 설정 파일과 기본 제공 파라미터" ct=" cubrid.conf 설정 파일과 기본 제공 파라미터  CUBRID는 데이터베이스 서버, 브로커, CUBRID 매니저로 구성된다. 각 구성 요소를 수행하기 위한 설정 파일 ..."/><di ky="330" rd="pm/pm_manager_parameter.htm|파라미터 구문 작성 규칙" ct=" 파라미터 설명  cm_port  cm_port 는 CUBRID 매니저 서버와 매니저 클라이언트 사이에 이용되는 포트를 설정하기 위한 파라미터이다. 실제 사용되는 포트는 ..."/><di ky="331" rd="pm/pm_manager_setting.htm|매니저 환경 설정 파일" ct=" cm.conf 설정 파일과 기본 제공 파라미터  CUBRID 매니저 서버 시스템 파라미터  다음은 CUBRID 매니저 서버를 실행하는데 필요한 파라미터로 설정 파일( ..."/><di ky="332" rd="pm/pm_server_general.htm|데이터베이스 서버 설정이 미치는 범위" ct=" 데이터베이스 서버 설정이 미치는 범위  CUBRID는 데이터베이스  서버 ,   브로커,  CUBRID 매니저로 구성되며 ,  각 구성요소에 대한 설정 파일이 존재한다 . ..."/><di ky="333" rd="syntax/csql_notation_condition.htm|검색 조건" ct=" 검색 조건  &lt; search condition &gt;  &lt; boolean term &gt; [  OR  &lt; boolean term &gt; ]...  &lt; boolean term ..."/><di ky="334" rd="syntax/csql_notation_datataype.htm|데이터 타입" ct=" 데이터 타입  &lt; data type &gt;  &lt; primitive type &gt; | &lt; set of &gt; &lt; primitive typ e&gt; | &lt; set of &gt; &lt; ..."/><di ky="335" rd="syntax/csql_notation_expression.htm|표현식" ct=" 표현식  &lt; expression &gt;  &lt; term &gt; [ { + | - | &apos;||&apos; }  term  ]...  &lt; term &gt;  &lt; factor &gt; [ { *  ..."/><di ky="336" rd="syntax/csql_notation_idennamevariable.htm|식별자, 이름, 변수" ct=" 식별자, 이름, 변수  &lt; class name comma list &gt;  &lt; class name &gt; [ { , &lt; class name &gt; }... ]  &lt; class ..."/><di ky="337" rd="syntax/csql_notation_literal.htm|상수" ct=" 상수  &lt; literal &gt;  &lt; string literal &gt; | &lt; number literal &gt; | &lt; date literal &gt; | &lt; datetim ..."/><di ky="338" rd="syntax/csql_notation_sqllist_alter.htm|ALTER문" ct=" ALTER 문  &lt; alter statement &gt;  &lt; alter class statement &gt; | &lt; alter trigger statement &gt; | &lt; ..."/><di ky="339" rd="syntax/csql_notation_sqllist_call.htm|CALL문" ct=" CALL 문  &lt; call statement &gt;  CALL  &lt; method call &gt; [  ON  &lt; call target &gt; ] [ {  TO  |  INTO } ..."/><di ky="340" rd="syntax/csql_notation_sqllist_commit.htm|COMMIT문" ct=" COMMIT 문  &lt; commit statement &gt;  COMMIT  [ WORK ]   ..."/><di ky="341" rd="syntax/csql_notation_sqllist_create.htm|CREATE문" ct=" CREATE 문  &lt;create class statement&gt;  CREATE  {  CLASS  |  TABLE  } &lt; class name &gt; [ &lt; subcla ..."/><di ky="342" rd="syntax/csql_notation_sqllist_delete.htm|DELETE문" ct=" DELETE 문  &lt; delete statement &gt;  DELETE FROM  { &lt; class specification &gt; | &lt; meta class specifi ..."/><di ky="343" rd="syntax/csql_notation_sqllist_drop.htm|DROP문" ct=" DROP문  &lt; drop statement &gt;  &lt; drop class statement &gt; | &lt; drop trigger statement &gt; | &lt; drop ..."/><di ky="344" rd="syntax/csql_notation_sqllist_evaluate.htm|EVALUATE문" ct=" EVALUATE 문  &lt; evaluate statement &gt;  EVALUATE  &lt; expression &gt; [ {  TO  |  INTO  } &lt; variable &gt; ..."/><di ky="345" rd="syntax/csql_notation_sqllist_execute.htm|EXECUTE문" ct=" EXECUTE 문  &lt; execute statement &gt;  EXECUTE DEFERRED TRIGGER  { &lt; trigger name comma list &gt; |  ..."/><di ky="346" rd="syntax/csql_notation_sqllist_grant.htm|GRANT/REVOKE문" ct=" GRANT/REVOKE 문  &lt; authorization statement &gt;  GRANT  &lt; privileges &gt;  ON  &lt; class specification ..."/><di ky="347" rd="syntax/csql_notation_sqllist_index.htm|INDEX문" ct=" INDEX 문  &lt; index &gt;  CREATE  [ REVERSE ] [ UNIQUE ]  INDEX  [ index_name ]  ON  &lt; index_spec ..."/><di ky="348" rd="syntax/csql_notation_sqllist_insert.htm|INSERT문" ct=" INSERT 문  &lt; insert statement &gt;  INSERT INTO  [  ONLY  ] &lt; class name &gt; [ ( [ &lt; attribute name ..."/><di ky="349" rd="syntax/csql_notation_sqllist_list.htm|SQL 문 목록" ct=" SQL 문 목록     &lt; statement &gt;    &lt; create statement &gt;  | &lt; alter statement &gt;  | &lt; ..."/><di ky="350" rd="syntax/csql_notation_sqllist_optimization.htm|OPTIMIZATION문" ct=" OPTIMIZATION 문  &lt; get optimization statement &gt;  GET OPTIMIZATION LEVEL  [ {  TO  |  INTO  } &lt; ..."/><di ky="351" rd="syntax/csql_notation_sqllist_partition.htm|PARTITION문" ct=" PARTITION 문  &lt; create partition &gt;  &lt; create class &gt; &lt; partition clause &gt;  &lt; alter partition ..."/><di ky="352" rd="syntax/csql_notation_sqllist_rename.htm|RENAME문" ct=" RENAME 문  &lt; rename statement &gt;  &lt; rename class statement &gt; | &lt; rename trigger statement &gt;  ..."/><di ky="353" rd="syntax/csql_notation_sqllist_rollback.htm|ROLLBACK문" ct=" ROLLBACK 문  &lt; rollback statement &gt;  ROLLBACK  [  WORK  ] [  TO  [  SAVEPOINT  ] mark ]   ..."/><di ky="354" rd="syntax/csql_notation_sqllist_savepoint.htm|SAVEPOINT문" ct=" SAVEPOINT 문  &lt; savepoint statement &gt;  SAVEPOINT  mark   ..."/><di ky="355" rd="syntax/csql_notation_sqllist_select.htm|SELECT문" ct=" SELECT 문  &lt; query state &gt;  &lt; query expression &gt; [  ORDER BY  &lt; sort specification comma lis ..."/><di ky="356" rd="syntax/csql_notation_sqllist_transaction.htm|TRANSACTION문" ct=" TRANSACTION 문  &lt; get transaction statement &gt;  GET TRANSACTION ISOLATION LEVEL &lt; isolation l ..."/><di ky="357" rd="syntax/csql_notation_sqllist_trigger.htm|TRIGGER문" ct=" TRIGGER 문  &lt; get trigger statement &gt;  GET TRIGGER TRACE  [ {  TO  |  INTO  } &lt; variable &gt; ] ..."/><di ky="358" rd="syntax/csql_notation_sqllist_update.htm|UPDATE문" ct=" UPDATE 문  &lt; update statement &gt;  UPDATE  &lt; class specification &gt; | &lt; meta class specification ..."/><di ky="359" rd="syntax/csql_notation_sqllist_updatestatisticson.htm|UPDATE STATISTICS문" ct=" UPDATE STATISTICS 문  &lt; update statistics statement &gt;  UPDATE STATISTICS ON  &lt; update statisti ..."/><di ky="360" rd="syntax/csql_notation_sqllist_user.htm|USER문" ct=" USER 문  &lt; create user &gt;  CREATE USER  &lt; user name &gt; [ PASSWORD   password ] [ GROUPS   us ..."/><di ky="361" rd="syntax/csql_notation_table.htm|테이블 명세" ct=" 테이블 명세  &lt; extended table specification comma list &gt;  &lt; table specification &gt; [ {, &lt; table spe ..."/><di ky="362" rd="syntax/csql_syntaxtype_comment.htm|CSQL 구문" ct=" 주석  CSQL 인터프리터에서 입력 가능한 주석은 &apos;--&apos;로 시작하여 해당 라인 전부가 적용되는 SQL 방식이다. 추가로  &apos;//&apos;로 시작하는 C++ 언어 방식과 &apos;/*&apos; ..."/><di ky="363" rd="syntax/csql_syntaxtype_identifier.htm|식별자" ct=" 식별자  식별자 작성 원칙  CSQL 인터프리터에서 입력 가능한 식별자는 다음의 원칙에 따라 작성한다.   반드시 문자로 시작되어야 한다. 즉, 숫자나 기호로  ..."/><di ky="364" rd="syntax/csql_syntaxtype_keyword.htm|예약어" ct=" 예약어  아래의 키워드는 명령어, 함수명, 타입명 등으로 예약되어 있다. 사용자는 클래스명이나 속성명, 변수명에 아래 지정된 예약어를 사용할 수 없다. 단, 큰따옴표(&quot;  ..."/><di ky="365" rd="syntax/syntax.htm|CUBRID SQL 설명서" ct=" CUBRID SQL 설명서  CUBRID는 상속의 개념이 있는 객체 관계형 데이터베이스 시스템이다. 본 매뉴얼에서는 내용의 이해를 돕고자 관계형 데이터베이스에서 쓰는 용어 ..."/></ck>