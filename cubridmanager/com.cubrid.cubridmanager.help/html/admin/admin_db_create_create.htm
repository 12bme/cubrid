
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>데이터베이스 생성</title>
<link href="../nhelp.css" rel="Stylesheet" type="text/css" />
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
-->
</style>
<script type="text/javascript" language="javascript1.2" src="../whmsg.js"></script>
<script type="text/javascript" language="javascript" src="../whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whlang.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whtopic.js"></script>

 <meta name="generator" content="Adobe RoboHelp 8" />
</head>
<body><script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.gbWhTopic)
{
	var strUrl = document.location.href;
	var bc = 0;
	var n = strUrl.toLowerCase().indexOf("bc-");
	if(n != -1)
	{
		document.location.href = strUrl.substring(0, n);
		bc = strUrl.substring(n+3);
	}

	if (window.addTocInfo)
	{
	addTocInfo("관리자 안내서\n데이터베이스 관리\n데이터베이스 생성");
         if(strUrl.toLowerCase().indexOf("/help/")==-1){

    addButton("show",BTN_TEXT,"Show","","","","",0,0,"","","");

    }


	}
	if (window.writeBtnStyle)
		writeBtnStyle();

	if (window.writeIntopicBar)
		writeIntopicBar(1);if(strUrl.toLowerCase().indexOf("/help/")==-1){

         document.write("<p style=\"text-align:left\"> ");

AddMasterBreadcrumbs("../index.htm", "", "&nbsp;&gt;&nbsp;", "홈", "../cubrid.htm");

document.write("<a href=\"admin.htm\">관리자 안내서<\/a> &nbsp;&gt;&nbsp; <a href=\"admin_service_server_command.htm\">데이터베이스 관리<\/a> &nbsp;&gt;&nbsp; 데이터베이스 생성<\/p>");}


	if (window.setRelStartPage)
	{
	setRelStartPage("../index.htm");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}
}
else
	if (window.gbIE4)
		document.location.reload();

//-->
//]]></script>
<h4>데이터베이스 생성</h4>
<p><span class="keyword">cubrid createdb</span> 유틸리티는 CUBRID 시스템에서 사용할 데이터베이스를 생성하고 미리 만들어진 CUBRID 시스템 클래스를 초기화한다. 데이터베이스에 권한이 주어진 초기 사용자를 정의할 수도 있다.&#160;일반적으로 데이터베이스 관리자만이 <span class="keyword">cubrid createdb</span> 유틸리티를 사용한다. 로그와 데이터베이스의 위치도 지정할 수 있다.</p>
<h6>구문</h6>
<p class="syntax"><span class="keyword">cubrid</span> <span class="keyword">createdb</span> <span class="var">options</span>&#160;<span class="var">database_name</span><br />
<span class="var">options</span> :[{<span class="keyword">-p</span>|<span class="keyword">--pages</span>=}<span class="var">number</span>] &#160;[<span class="keyword">--comment</span>] &#160;[{<span class="keyword">-F</span>|<span class="keyword">--file-path</span>=}<span class="var">path</span>] &#160;[{<span class="keyword">-L</span>|<span class="keyword">--log-path</span>=}<span class="var">path</span>] [<span class="keyword">--server-name</span>=<span class="var">host</span> ]<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[{<span class="keyword">-r</span> | <span class="keyword">--replace</span>} ] [<span class="keyword">--more-volume-file</span>=<span class="var">file</span>] [<span class="keyword">--user-definition-file</span>=<span class="var">file</span>] [ <span class="keyword">--csql-initialization-file</span>=<span class="var">file</span>] &#160;[{<span class="keyword">-o</span>|<span class="keyword">--output-file</span>=} <span class="var">file</span>] &#160;[{<span class="keyword">-v</span> | <span class="keyword">--verbose</span>}]<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[{<span class="keyword">-l</span> | <span class="keyword">--log-page-count</span>=} <span class="var">number</span>] [ {<span class="keyword">-s</span> | <span class="keyword">--page-size</span>=} <span class="var">size</span>]</p>
<ul>
<li><span class="keyword">cubrid</span>&#160;:&#160;CUBRID 서비스 및 데이터베이스 관리를 위한 통합 유틸리티이다.</li>
<li><span class="keyword">createdb</span> :&#160;새로운 데이터베이스를 생성하기 위한&#160;명령이다.</li>
<li><span class="var">options</span>&#160;: 단축 옵션은 <span class="keyword">-</span>와 함께 지정해야 하고, 전체 옵션은 <span class="keyword">--</span>와 함께 지정해야 한다.</li>
<li><span class="var">database_name</span> : 데이터베이스가 생성될 디렉터리 경로명을 포함하지 않고, 생성하고자 하는 데이터베이스의 이름을 고유하게 부여한다. 이 때, 지정한&#160;데이터베이스 이름이 이미 존재하는 데이터베이스 이름과 중복되는 경우, CUBRID는 기존 파일을 보호하기 위하여 데이터베이스 생성을 더 이상 진행하지 않는다.</li>
</ul>
<h6>옵션</h6>
<p>다음은 <span class="keyword">cubrid</span> <span class="keyword">createdb</span>유틸리티와 함께 사용할 수 있는 옵션을 정리한 표이다. 대소문자를 구별해서 사용해야 한다.</p>
<table border="1" width="80%">
<col />
<col />
<tr>
<th width="160">
<p>&#160;옵션</p>
</th>
<th>
<p>설명</p>
</th>
</tr>
<tr>
<td class="keyword" width="160">
<p>-p</p>
<p>--pages</p>
</td>
<td>
<p>생성될 데이터베이스 볼륨(<span class="keyword">generic</span>)의 페이지 수를 지정한다.</p>
<p>디폴트 값 : 5000 페이지</p>
</td>
</tr>
<tr>
<td class="keyword" width="160">
<p>-F</p>
<p>--file-path</p>
</td>
<td>
<p>데이터베이스가 생성될 디렉터리 경로를 지정한다.</p>
<p>디폴트 값 : 현재 작업 디렉터리</p>
</td>
</tr>
<tr>
<td class="keyword" width="160">
<p>-L</p>
<p>--log-path</p>
</td>
<td>
<p>로그 파일이 저장되는 디렉터리 경로를 지정한다.</p>
<p>디폴트 값 :&#160;<span class="keyword">-F</span> 옵션으로 지정된 디렉터리 경로</p>
</td>
</tr>
<tr>
<td class="keyword" width="160">
<p>-r</p>
<p>--replace</p>
</td>
<td>
<p>생성될 데이터베이스의 이름이 기존 데이터베이스 이름과 중복되는 경우, 덮어쓰기를 허용한다.</p>
<p>디폴트 값 : 비활성화</p>
</td>
</tr>
<tr>
<td class="keyword" width="160">
<p>-o</p>
<p>--output-file</p>
</td>
<td>
<p>데이터베이스 생성에 관한 출력 메시지가 저장되는 파일을 지정한다. &#160;</p>
</td>
</tr>
<tr>
<td class="keyword" width="160">
<p>-v</p>
<p>--verbose</p>
</td>
<td>
<p>데이터베이스 생성에 관한 상세 메시지가 화면 출력된다.</p>
<p>디폴트 값 : 비활성화</p>
</td>
</tr>
<tr>
<td class="keyword" width="160">
<p>-l</p>
<p>--log-page-count</p>
</td>
<td>
<p>로그 볼륨의 페이지 수를 지정한다.</p>
<p>디폴트 값 : <span class="keyword">-p</span> 옵션으로 지정된 범용 볼륨의 페이지 수</p>
</td>
</tr>
<tr>
<td class="keyword" width="160">
<p>-s</p>
<p>--page-size</p>
</td>
<td>
<p>바이트 단위로 데이터베이스 페이지&#160;크기를 지정한다.</p>
<p>디폴트 값 : 운영체제에서 제공하는&#160;I/O에 최적화된 페이지 크기</p>
</td>
</tr>
<tr>
<td class="keyword" width="160">
<p>--comment</p>
</td>
<td>
<p>생성될 데이터베이스에 관한 정보를 주석으로 기록한다.&#160;&#160;</p>
</td>
</tr>
<tr>
<td class="keyword" width="160">
<p>--server-name</p>
</td>
<td>
<p>접속할 서버 호스트의 이름을 지정한다.</p>
<p>디폴트 값 : 로컬 호스트</p>
</td>
</tr>
<tr>
<td class="keyword" width="160">
<p>--more-volume-file</p>
</td>
<td>
<p>데이터베이스의 추가 볼륨을 생성하기 위한 명세를 포함하는 파일을 지정한다.</p>
</td>
</tr>
<tr>
<td class="keyword" width="160">
<p>--user-definition-file</p>
</td>
<td>
<p>사용자 정의를 포함하는 파일을 지정한다.&#160;</p>
</td>
</tr>
<tr>
<td class="keyword" width="160">
<p>--csql-initialization-file</p>
</td>
<td>
<p>csql 초기화를 위한 파일을 지정한다.</p>
</td>
</tr>
</table>
<ul>
<li class="title">페이지 수(-p)</li>
</ul>
<p class="code">cubrid createdb -p 10000 testdb</p>
<p class="definition">10,000 페이지가 할당된 testdb라는 이름의 데이터베이스를 생성하는 구문이다.<br />
<span class="keyword">-p</span>는 데이터베이스의 응용 프로그램을 위한 데이터베이스 페이지 수를 지정하기 위한 옵션으로서, 디폴트 값은 5,000이다.</p>
<ul>
<li class="title">데이터베이스 디렉터리 경로(-F)</li>
</ul>
<p class="code">cubrid createdb -F /dbtemp/new_db/ testdb</p>
<p class="definition">testdb라는 이름의 데이터베이스를 /dbtemp/new_db라는 디렉터리에 생성하는 구문이다.<br />
<span class="keyword">-F</span>는 새로운 데이터베이스가 생성되는 디렉터리의 절대 경로를 지정하는 옵션으로, <span class="keyword">-F</span> 옵션을 지정하지 않는 경우에는 현재 작업 디렉터리에 새로운 데이터베이스가 생성된다.</p>
<ul>
<li class="title">로그 파일 디렉터리 경로(-L)</li>
</ul>
<p class="code">cubrid createdb -F /dbtemp/new_db/ -L /dbtemp/db_log/ testdb</p>
<p class="definition">testdb라는 이름의 데이터베이스를 /dbtemp/newdb라는 디렉터리에 생성하고, 로그 파일을 /dbtemp/db_log 디렉터리에 생성하는 구문이다.<br />
<span class="keyword">-L</span>은 데이터베이스의 로그 파일이 생성되는 디렉터리의 절대 경로를 지정하는 옵션으로, <span class="keyword">-L</span> 옵션을 지정하지 않는 경우에는 <span class="keyword">-F</span> 옵션에서 지정한 디렉터리에 생성된다. 만약, <span class="keyword">-F</span> 옵션과 <span class="keyword">-L</span> 옵션을 둘 다 지정하지 않는 경우에는 데이터베이스와 로그 파일이 현재 작업 디렉터리에 생성된다.</p>
<ul>
<li class="title">덮어쓰기(-r)</li>
</ul>
<p class="code">cubrid createdb -r testdb</p>
<p class="definition">testdb라는 이름의 데이터베이스가 이미 존재하더라도 기존의 testdb를 덮어쓰기하고 새로운 testdb를 생성하라는 구문이다.<br />
<span class="keyword">-r</span>은 지정된 데이터베이스 이름이 이미 존재하는 데이터베이스 이름과 중복되더라도 새로운 데이터베이스를 생성하고, 기존의 데이터베이스를 덮어쓰도록 하는&#160;옵션이다.&#160;만약, <span class="keyword">-r</span> 옵션을 지정하지 않으면 더 이상 데이터베이스 생성을 진행하지 않는다.</p>
<ul>
<li class="title">출력 메시지를&#160;파일에 저장(-o)</li>
</ul>
<p class="code">cubrid createdb -o db_output testdb</p>
<p class="definition">testdb라는 데이터베이스를 생성하면서 이에 관한 유틸리티의 출력을 콘솔 화면이 아닌 db_output 파일에 저장하는 구문이다.<br />
<span class="keyword">-o</span> 옵션은 데이터베이스 생성에 관한 메시지를 파라미터로 지정된 파일에 저장하는 옵션이며, 파일은 데이터베이스와 동일한 디렉터리에 생성된다. <span class="keyword">-o</span> 옵션이 지정되지 않으면 메시지는 콘솔 화면에 출력된다. <span class="keyword">-o</span> 옵션은 데이터베이스가 생성되는 중에 출력되는 메시지를 지정된 파일에 저장함으로써 특정 데이터베이스의 생성 과정에 관한 정보를 활용할 수 있게 한다.</p>
<ul>
<li class="title">버보스(Verbose) 출력(-v)</li>
</ul>
<p class="code">cubrid createdb -v testdb</p>
<p class="definition">testdb라는 데이터베이스를 생성하면서 이에 관한 상세한 연산 정보를 화면에 출력하는 구문이다.<br />
<span class="keyword">-v</span> 옵션은 데이터베이스 생성 연산에 관한 모든 정보를 화면에 출력하는 옵션으로서, <span class="keyword">-o</span> 옵션과 마찬가지로 특정 데이터베이스 생성 과정에 관한 정보를 확인하는데 유용하다. 따라서, <span class="keyword">-v</span> 옵션과 <span class="keyword">-o</span> 옵션을 함께 지정하면, <span class="keyword">-o</span> 옵션의 파라미터로 지정된 출력 파일에&#160;<span class="keyword">cubrid createdb</span> 유틸리티의 연산 정보와 생성 과정에 관한 출력 메시지를 저장할 수 있다.</p>
<ul>
<li class="title">로그 페이지(-l)</li>
</ul>
<p class="code">cubrid createdb -l 1000 testdb</p>
<p class="definition">testdb라는 이름의 데이터베이스를 생성하고, testdb의 로그 볼륨 페이지 수를 1,000으로 지정하는 구문이다.<br />
<span class="keyword">-l</span> 옵션은 생성되는 데이터베이스의 로그 볼륨 페이지 수를 지정하는 옵션으로서, 디폴트 값은 <span class="keyword">-p</span> 옵션에 의해 지정된 범용(<span class="keyword">generic</span>) 볼륨의 페이지 수와 같다.&#160;데이터 변경 처리량과 트랜잭션 지속 시간에 따라 요구되는 로그 볼륨의 페이지 수가 달라지지만, 최소한 데이터베이스 볼륨의 페이지 수와 동일하거나 그 보다 2배 정도 큰 것이 적당하다.</p>
<ul>
<li class="title">페이지 크기(-s)</li>
</ul>
<p class="code">cubrid createdb&#160;-s 8192 testdb</p>
<p class="definition">testdb라는 데이터베이스 볼륨의 페이지 크기를 8192바이트로 지정하는 구문이다.<br />
<span class="keyword">-s</span> 옵션은 데이터베이스 페이지의 크기를 1024, 2048, 4096, 8192, 16384바이트 중 하나의 값으로 지정하는 옵션이다. 만약, 이러한 값이 아닌 다른 숫자를 지정할 경우에는 시스템이 올림값으로 페이지 크기를 지정한다. <span class="keyword">-s</span> 옵션을 통해 데이터베이스 볼륨의 페이지 크기를 변경하면,&#160;이와 연관된 데이터베이스 파라미터&#160;data_buffer_pages, sort_buffer_pages,&#160;log_buffer_pages에도 영향을 미치므로 주의해야 한다.</p>
<ul>
<li class="title">주석(--comment)</li>
</ul>
<p class="code">cubrid createdb --comment "a new database for study" testdb</p>
<p class="definition">testdb라는 이름의 데이터베이스를 생성하면서, 데이터베이스 볼륨에 이에 관한 주석을 추가하는 구문이다.<br />
<span class="keyword">--comment</span> 옵션은 데이터베이스의 볼륨 헤더에 지정된 주석을 포함하는 옵션으로 문자열에 공백이 포함되는 경우에는 큰 따옴표로 감싸주어야 한다.</p>
<ul>
<li class="title">서버 호스트 이름(--server-name)</li>
</ul>
<p class="code">cubrid createdb --server-name aa_host testdb</p>
<p class="definition">testdb라는 이름의 데이터베이스를 <span class="var">aa_host</span> 호스트 상에 생성 및 등록하는 구문이다.<br />
<span class="keyword">--server-name</span> 옵션은 CUBRID의 클라이언트/서버 버전을 사용할 때 특정 데이터베이스에 대한 서버가 지정한 호스트 상에 구동되도록 하는 옵션이다. 이 옵션으로 지정된 서버 호스트의 정보는 데이터베이스 위치 정보 파일(<span class="keyword">databases.txt</span>)에 기록된다. 만약,&#160;이 옵션이 지정되지 않으면 디폴트 값은 현재 로컬 호스트이다.</p>
<ul>
<li class="title">데이터베이스 볼륨 추가(--more-volume-file)</li>
</ul>
<p class="code">cubrid createdb --more-volume-file vol_info.txt testdb</p>
<p class="definition">testdb를 생성함과 동시에 <span class="var">vol_info.txt</span>에 저장된 명세를 기반으로 볼륨을 추가 생성하는 구문이다.<br />
<span class="keyword">--more-volume-file</span> 옵션은 데이터베이스가 생성되는 디렉터리에 추가 볼륨을 생성하는 옵션으로 지정된 파일에 저장된 명세에 따라 추가 볼륨을 생성한다. 이 옵션을 이용하지 않더라도, <span class="keyword">cubrid addvoldb</span> 유틸리티를 이용하여 볼륨을 추가할 수 있다.</p>
<p class="definition">다음은 <span class="var">vol_info.txt</span>에 저장된 추가 볼륨에 관한 명세이다. 각 볼륨에 관한 명세는 라인 단위로 작성되어야 한다.</p>
<p class="code">#xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx<br />
# NAME volname COMMENTS volcmnts PURPOSE volpurp NPAGES volnpgs<br />
NAME data_v1 COMMENTS "데이터 정보 볼륨" PURPOSE data NPAGES 1000<br />
NAME data_v2 COMMENTS "데이터 정보 볼륨" PURPOSE data NPAGES 1000<br />
NAME data_v3 PURPOSE data NPAGES 1000<br />
NAME index_v1 COMMENTS "인덱스 정보 볼륨" PURPOSE index NPAGES 500<br />
NAME temp_v1 COMMENTS "임시 정보 볼륨" PURPOSE temp NPAGES 500<br />
NAME generic_v1 COMMENTS "일반 정보 볼륨" PURPOSE generic NPAGES 500<br />
#xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</p>
<p class="definition">예제 파일에서와 같이 각 볼륨에 관한 명세는 다음과 같이 구성된다.</p>
<p class="syntax"><span class="keyword">NAME</span> <span class="var">volname</span> <span class="keyword">COMMENTS</span> <span class="var">volcmnts</span> <span class="keyword">PURPOSE</span> <span class="var">volpurp</span> <span class="keyword">NPAGES</span> <span class="var">volnpgs</span></p>
<ul>
<li><span class="var">volname</span> : 추가 생성될 볼륨의 이름으로 Unix 파일 이름 규약을 따라야 하고, 디렉터리 경로를 포함하지 않는 단순한 이름이어야 한다. 볼륨명에 관한 명세는 생략할 수 있으며,&#160;이 경우 시스템에 의해 "생성될 데이터베이스 이름_볼륨 식별자"로 볼륨명이 생성된다.</li>
<li><span class="var">volcmnts</span> : 볼륨 헤더에 기록되는 주석 문장으로, 추가 생성되는 볼륨에 관한 정보를 임의로 부여할 수 있다. 볼륨 주석에 관한 명세 역시 생략할 수 있다.</li>
<li><span class="var">volpurp</span> : 볼륨 저장의 목적으로, <span class="keyword">data</span>, <span class="keyword">index</span>, <span class="keyword">temp</span>, <span class="keyword">generic</span> 중 하나여야 한다. 볼륨 목적에 관한 명세는 생략할 수 있으며, 이 경우 디폴트 값은 <span class="keyword">generic</span>이다.</li>
<li><span class="var">volnpgs</span> : 추가 생성되는 볼륨의 페이지 수이다. 볼륨 페이지 수에 관한 명세는 생략할 수 없으며, 반드시 지정해야 한다.</li>
</ul>
<ul>
<li class="title">CSQL&#160;구문 저장 파일(--csql-initialization-file)</li>
</ul>
<p class="code">cubrid createdb --csql-initialization-file table_schema.sql testdb</p>
<p class="definition">testdb를 생성함과 동시에 table_schema.sql에 정의된 SQL 구문을 CSQL 인터프리터에서 실행시키는 구문이다.<br />
<span class="keyword">--csql-initialization-file</span> 옵션은 생성하고자 하는 데이터베이스에 대해 CSQL 인터프리터에서 구문을 실행하는 옵션으로, 파라미터로 지정된 파일에 저장된 SQL 구문에 따라 스키마를 생성할 수 있다.</p>
<ul>
<li class="title">사용자 정보 파일(--user-definition-file)</li>
</ul>
<p class="code">cubrid createdb --user-definition-file user_info.txt testdb</p>
<p class="definition">testdb를 생성함과 동시에 user_info.txt에 정의된 사용자 정보를 기반으로 testdb에 대한 사용자를 추가하는 구문이다.<br />
<span class="keyword">--user-definition-file</span> 옵션은 생성하고자 하는 데이터베이스에 대해 권한이 있는 사용자를 추가하는 옵션으로, 파라미터로 지정된 사용자 정보 파일에 저장된 명세에 따라 사용자를 추가한다. <span class="keyword">--user-definition-file</span> 옵션을 이용하지 않더라도 <span class="keyword"><a href="../syntax/syntax_access_manage.htm">CREATE USER</a></span> 구문을 이용하여 사용자를 추가할 수 있다.</p>
<p class="definition">사용자 정보 파일의 구문은 아래와 같다.</p>
<p class="syntax"><span class="keyword">USER</span> <span class="var">user_name</span> [ <span class="var">groups_clause</span> | <span class="var">members_clause</span> ]<br />
<span class="var"><br />
groups_clause</span>:<br />
&#160;[ <span class="keyword">GROUPS</span> <span class="var">group_name</span> [ { <span class="var">group_name</span> }... ] ]<br />
<span class="var"><br />
members_clause</span>:<br />
&#160;[ <span class="keyword">MEMBERS</span> <span class="var">member_name</span> [ { <span class="var">member_name</span> }... ] ]</p>
<ul>
<li><span class="var">user_name</span>은 데이터베이스에 대해 권한을 가지는 사용자 이름이며, 공백이 포함되지 않아야 한다.</li>
<li><span class="keyword">GROUPS</span> 절은 옵션이며, <span class="var">group_name</span>은 지정된 <span class="var">user_name</span>을 포함하는 상위 그룹의 이름이다. 이 때, <span class="var">group_name</span>은 하나 이상이 지정될 수 있으며, <span class="keyword">USER</span>로 미리 정의되어야 한다.<br /></li>
<li><span class="keyword">MEMBERS</span> 절은 옵션이며, <span class="var">member_name</span>은 지정된 <span class="var">user_name</span>에 포함되는 하위 멤버의 이름이다. 이 때, <span class="var">member_name</span>은 하나 이상이 지정될 수 있으며, <span class="keyword">USER</span>로 미리 정의되어야 한다.</li>
</ul>
<p class="definition">사용자 정보 파일에서는 주석을 사용할 수 있으며, 주석 라인은 연속된 하이픈(--)으로 시작된다. 공백 라인은 무시된다.</p>
<p class="definition">다음 예제는 그룹 sedan에 granduer와 sonata가, 그룹 suv에 tuscan이, 그룹 hatchback에 i30가 포함되는 것을 정의하는 사용자 정보 파일이다. 사용자 정보 파일명은 user_info.txt로 예시한다.</p>
<p class="code">--<br />
-- 사용자 정보 파일의 예1<br />
--<br />
USER sedan<br />
USER suv<br />
USER hatchback<br />
USER granduer GROUPS sedan<br />
USER sonata GROUPS sedan<br />
USER tuscan GROUPS suv<br />
USER i30 GROUPS hatchback</p>
<p class="definition">위 예제와 동일한 사용자 관계를 정의하는 파일이다. 다만, 아래 예제에서는 <span class="keyword">MEMBERS</span> 절을 이용하였다.</p>
<p class="code">--<br />
-- 사용자 정보 파일의 예 2<br />
--<br />
USER granduer<br />
USER sonata<br />
USER tuscan<br />
USER i30<br />
USER sedan MEMBERS sonata granduer<br />
USER suv MEMBERS tuscan<br />
USER hatchback MEMBERS i30</p>
<script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);


highlightSearch();
//-->
//]]></script>
</body>
</html>
