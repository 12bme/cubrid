
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>브로커 상태 확인</title>
<link href="../nhelp.css" rel="Stylesheet" type="text/css" />
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
-->
</style>
<script type="text/javascript" language="javascript1.2" src="../whmsg.js"></script>
<script type="text/javascript" language="javascript" src="../whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whlang.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whtopic.js"></script>

 <meta name="generator" content="Adobe RoboHelp 8" />
</head>
<body><script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.gbWhTopic)
{
	var strUrl = document.location.href;
	var bc = 0;
	var n = strUrl.toLowerCase().indexOf("bc-");
	if(n != -1)
	{
		document.location.href = strUrl.substring(0, n);
		bc = strUrl.substring(n+3);
	}

	if (window.addTocInfo)
	{
	addTocInfo("관리자 안내서\nCUBRID 제어\n브로커\n브로커 상태 확인");
         if(strUrl.toLowerCase().indexOf("/help/")==-1){

    addButton("show",BTN_TEXT,"Show","","","","",0,0,"","","");

    }


	}
	if (window.writeBtnStyle)
		writeBtnStyle();

	if (window.writeIntopicBar)
		writeIntopicBar(1);if(strUrl.toLowerCase().indexOf("/help/")==-1){

         document.write("<p style=\"text-align:left\"> ");

AddMasterBreadcrumbs("../index.htm", "", "&nbsp;&gt;&nbsp;", "홈", "../cubrid.htm");

document.write("<a href=\"admin.htm\">관리자 안내서<\/a> &nbsp;&gt;&nbsp; <a href=\"admin_service_conf_command.htm\">CUBRID 제어<\/a> &nbsp;&gt;&nbsp; <a href=\"admin_service_broker_all.htm\">브로커<\/a> &nbsp;&gt;&nbsp; 브로커 상태 확인<\/p>");}


	if (window.setRelStartPage)
	{
	setRelStartPage("../index.htm");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}
}
else
	if (window.gbIE4)
		document.location.reload();

//-->
//]]></script>
<h4>브로커 상태 확인</h4>
<p>cubrid broker status는 여러 옵션을 제공하여, 각 브로커의 처리 완료된 작업 수, 처리 대기중인 작업 수를 포함한 브로커 상태 정보를 확인할 수 있도록 한다. 해당 구문 및 예제를 살펴본다.</p>
<h6>구문</h6>
<p>CUBRID 브로커에 관한 상태를 모니터링하기 위한&#160;구문은 다음과 같다. args 가 주어지면 해당 브로커에 대한 상태 모니터링을 수행할 수 있고, 생략되면 CUBRID 브로커 환경 설정 파일(cubrid_broker.conf)에 등록된 전체 브로커에 대해 상태 모니터링을 수행한다.</p>
<p class="syntax"><span class="keyword">cubrid broker status</span> <span class="var">options</span> [<span class="var">args</span>]<br />
<span class="var">options</span> : [&#160;<span class="keyword">-b</span> | <span class="keyword">-q</span> | <span class="keyword">-s</span> <span class="var">secs</span> | <span class="keyword">-t</span> | <span class="keyword">-f</span> ]<br />
<span class="var">args</span> : <span class="var">broker_name</span>&#160;</p>
<h6>옵션</h6>
<p>다음은 결합할 수 있는 옵션에 관해 설명한 표이다.</p>
<table border="1" width="80%">
<tr>
<th width="80">옵션</th>
<th>설명</th>
</tr>
<tr>
<td width="80">
<p><span class="var">broker_name</span></p>
</td>
<td>지정한 브로커에 관한 상태 정보를 출력한다. 옵션이 지정되지 않으면 전체 브로커의 상태 정보를 출력한다.</td>
</tr>
<tr>
<td width="80">
<p class="keyword">-b</p>
</td>
<td>응용 서버에 관한 정보는 포함되지 않고, 브로커에 관한 상태 정보만 출력한다.</td>
</tr>
<tr>
<td width="80">
<p class="keyword">-q</p>
</td>
<td>작업 큐에 대기 중인 작업을 출력한다.</td>
</tr>
<tr>
<td width="80">
<p class="keyword">-s secs</p>
</td>
<td>브로커에 관한 상태 정보를 지정된 시간마다 주기적으로 출력한다. q를 입력하면 명령 프롬프트로 복귀한다.</td>
</tr>
<tr>
<td width="80">
<p class="keyword">-t</p>
</td>
<td>
<p>화면 출력시 tty mode 로 출력한다. 출력 내용을 리다이렉션하여 파일로 쓸 수 있다.</p>
</td>
</tr>
<tr>
<td width="80">
<p><span class="keyword">-f</span></p>
</td>
<td>
<p>브로커가 접속한 DB 및 호스트 정보를 출력한다.</p>
</td>
</tr>
</table>
<h6>예제</h6>
<p>전체 브로커 상태 정보 확인하기 위하여 옵션 및 인수를 입력하지 않으면 다음과 같이 출력된다.</p>
<p class="code">% cubrid broker status<br />
@ cubrid broker status<br />
% query_editor &#160;- cub_cas [28433,40820] /home/CUBRID/log/broker/query_editor.access /home/CUBRID/<br />
&#160;JOB QUEUE:0, AUTO_ADD_APPL_SERVER:ON, SQL_LOG_MODE:ALL:100000<br />
&#160;LONG_TRANSACTION_TIME:60, LONG_QUERY_TIME:60, SESSION_TIMEOUT:300<br />
&#160;KEEP_CONNECTION:AUTO, ACCESS_MODE:RW<br />
----------------------------------------<br />
ID &#160;&#160;PID &#160;&#160;QPS &#160;&#160;LQS PSIZE STATUS<br />
----------------------------------------<br />
&#160;1 28434 &#160;&#160;&#160;&#160;0 &#160;&#160;&#160;&#160;0 50144 IDLE<br />
&#160;2 28435 &#160;&#160;&#160;&#160;0 &#160;&#160;&#160;&#160;0 50144 IDLE<br />
&#160;3 28436 &#160;&#160;&#160;&#160;0 &#160;&#160;&#160;&#160;0 50144 IDLE<br />
&#160;4 28437 &#160;&#160;&#160;&#160;0 &#160;&#160;&#160;&#160;0 50140 IDLE<br />
&#160;5 28438 &#160;&#160;&#160;&#160;0 &#160;&#160;&#160;&#160;0 50144 IDLE<br />
&#160;<br />
% broker1 &#160;- cub_cas [28443,40821] /home/CUBRID/log/broker/broker1.access /home/CUBRID/<br />
&#160;JOB QUEUE:0, AUTO_ADD_APPL_SERVER:ON, SQL_LOG_MODE:ALL:100000<br />
&#160;LONG_TRANSACTION_TIME:60, LONG_QUERY_TIME:60, SESSION_TIMEOUT:300<br />
&#160;KEEP_CONNECTION:AUTO, ACCESS_MODE:RW<br />
----------------------------------------<br />
ID &#160;&#160;PID &#160;&#160;QPS &#160;&#160;LQS PSIZE STATUS<br />
----------------------------------------<br />
&#160;1 28444 &#160;&#160;&#160;&#160;0 &#160;&#160;&#160;&#160;0 50144 IDLE<br />
&#160;2 28445 &#160;&#160;&#160;&#160;0 &#160;&#160;&#160;&#160;0 50140 IDLE<br />
&#160;3 28446 &#160;&#160;&#160;&#160;0 &#160;&#160;&#160;&#160;0 50144 IDLE<br />
&#160;4 28447 &#160;&#160;&#160;&#160;0 &#160;&#160;&#160;&#160;0 50144 IDLE<br />
&#160;5 28448 &#160;&#160;&#160;&#160;0 &#160;&#160;&#160;&#160;0 50144 IDLE</p>
<ul>
<li>% query_editor : &#160;브로커의 이름</li>
<li>cub_cas : CUBRID 응용 서버의 형태</li>
<li>[28433, 40820] : &#160;PID와 브로커 접속 포트 번호</li>
<li>/home/CUBRID/log/broker/query_editor.access: query_editor의 접속 로그 파일의 위치 정보</li>
<li>JOB QUEUE: &#160;작업 큐에 대기 중인 작업 개수</li>
<li>AUTO_ADD_APPL_SERVER: &#160;자동으로 응용 서버가 추가되도록 cubrid_broker.conf의 AUTO_ADD_APPL_SERVER 파라미터 값이 ON임</li>
<li>SQL_LOG_MODE: SQL 로그를 남기도록 cubrid_broker.conf 파일의 SQL_LOG 파라미터 값이 ALL임</li>
<li>LONG_TRANSACTION_TIME: 장기 실행(Long-duration) 트랜잭션으로 판단하는 트랜잭션의 실행 시간임. 트랜잭션의 실행시간이 60초를 넘으면 장기 실행 트랜잭션임.</li>
<li>LONG_QUERY_TIME: 장기 실행 질의(Long-duration query)으로 판단하는 질의의 실행 시간임. 질의의 실행 시간이 60초를 넘으면 장기 실행 질의임.</li>
<li>SESSTION_TIMEOUT : &#160;세션 타임 아웃값으로서, cubrid_broker.conf의 SESSION_TIMEOUT 파라미터 값이 300임</li>
<li>KEEP_CONNECTION : &#160;응용 서버와 클라이언트의 연결이 AUTO가 되도록 cubrid.conf 파일의 KEEP_CONNECTION 파라미터 값이 AUTO임</li>
<li>ACCESS_MODE: 브로커의 동작 모드. RW는 데이터베이스 조회 뿐만 아니라 수정도 가능한 모드임.</li>
<li>ID : &#160;브로커 ID 또는 작업 큐에 대기 중인 작업 ID</li>
<li>PID : &#160;브로커의 프로세스 ID</li>
<li>QPS : &#160;초당 처리된 질의의 수</li>
<li>LQS: 초당 처리되는 장기 실행 질의의 수</li>
<li>PSIZE : &#160;응용 서버 프로세스 크기</li>
<li>STATUS : &#160;응용 서버의 현재 상태로서, BUSY/ IDLE/ CLIENT_WAIT/ CLOSE_WAIT 있음</li>
</ul>
<p>브로커에 관한 상태 정보를 확인하려면 다음과 같이 입력한다.</p>
<p class="code">% cubrid broker status -b<br />
@ cubrid broker status<br />
&#160;&#160;NAME &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;PID &#160;PORT &#160;AS &#160;JQ &#160;&#160;&#160;&#160;&#160;REQ &#160;TPS &#160;QPS &#160;LONG-T &#160;LONG-Q ERR-Q<br />
===========================================================================<br />
* query_editor &#160;4094 30000 &#160;&#160;5 &#160;&#160;0 &#160;&#160;&#160;&#160;&#160;&#160;&#160;0 &#160;&#160;&#160;0 &#160;&#160;&#160;0 &#160;&#160;&#160;0/60 &#160;&#160;&#160;0/60 &#160;&#160;&#160;0<br />
* broker1 &#160;&#160;&#160;&#160;&#160;&#160;4104 33000 &#160;&#160;5 &#160;&#160;0 &#160;&#160;&#160;&#160;&#160;&#160;&#160;0 &#160;&#160;&#160;0 &#160;&#160;&#160;0 &#160;&#160;&#160;0/60 &#160;&#160;&#160;0/60 &#160;&#160;&#160;0</p>
<ul>
<li>NAME : 브로커 이름</li>
<li>PID : &#160;브로커의 프로세스 ID</li>
<li>PORT : &#160;브로커의 포트 번호</li>
<li>AS : &#160;응용 서버 개수</li>
<li>JQ : &#160;작업 큐에서 대기 중인 작업 개수</li>
<li>REQ : &#160;브로커가 처리한 클라이언트 요청 개수</li>
<li>TPS : 초당 처리된 트랜잭션의 수(옵션이 " -b -s &lt; sec&gt; " 일 때만 계산됨)</li>
<li>QPS : 초당 처리된 질의의 수(옵션이 " -b -s &lt; sec&gt; " 일 때만 계산됨)</li>
<li>LONG-T : LONG_TRANSACTION_TIME 시간을 초과한 트랜잭션 수 / LONG_TRANSACTION_TIME 파라미터의 값.</li>
<li>LONG-Q : LONG_QUERY_TIME 시간을 초과한 질의의 수 / LONG_QUERY_TIME 파라미터의 값.</li>
<li>ERR-Q : 에러가 발생한 질의의 수</li>
</ul>
<p><span class="keyword">-q</span> 옵션을 이용하여 broker1을 포함하는 이름을 가진 브로커의 상태 정보를 확인하고, 해당 브로커의 작업 큐에 대기 중인 작업 상태를 확인하기 위하여 다음과 같이 입력한다. 인수로 broker1을 입력하지 않으면 모든 브로커에 대하여 작업 큐에 대기 중인 작업 리스트가 출력된다.</p>
<p class="code">% cubrid broker status -q broker1<br />
@ cubrid broker status<br />
% broker1 &#160;- cub_cas [28443,40821] /home/CUBRID/log/broker/broker1.access /home/CUBRID/<br />
&#160;JOB QUEUE:0, AUTO_ADD_APPL_SERVER:ON, SQL_LOG_MODE:ALL:100000<br />
&#160;LONG_TRANSACTION_TIME:60, LONG_QUERY_TIME:60, SESSION_TIMEOUT:300<br />
&#160;KEEP_CONNECTION:AUTO, ACCESS_MODE:RW<br />
----------------------------------------<br />
ID &#160;&#160;PID &#160;&#160;QPS &#160;&#160;LQS PSIZE STATUS<br />
----------------------------------------<br />
&#160;1 28444 &#160;&#160;&#160;&#160;0 &#160;&#160;&#160;&#160;0 50144 IDLE<br />
&#160;2 28445 &#160;&#160;&#160;&#160;0 &#160;&#160;&#160;&#160;0 50140 IDLE<br />
&#160;3 28446 &#160;&#160;&#160;&#160;0 &#160;&#160;&#160;&#160;0 50144 IDLE<br />
&#160;4 28447 &#160;&#160;&#160;&#160;0 &#160;&#160;&#160;&#160;0 50144 IDLE<br />
&#160;5 28448 &#160;&#160;&#160;&#160;0 &#160;&#160;&#160;&#160;0 50144 IDLE</p>
<p><span class="keyword">-s</span> 옵션을 이용하여 broker1을 포함하는 이름을 가진 브로커의 모니터링 주기를 입력하고, 주기적으로 브로커의 상태를 모니터링하기 위해 다음과 같이 입력한다. 인수로 broker1을 입력하지 않으면 모든 브로커에 대하여 상태 모니터링이 주기적으로 수행된다. 또한, q를 입력하면 모니터링 화면에서 명령 프롬프트로 복귀한다.</p>
<p class="code">% cubrid broker status -s 5 broker1<br />
% broker1 &#160;- cub_cas [28443,40821] /home/CUBRID/log/broker/broker1.access /home/CUBRID/<br />
&#160;JOB QUEUE:0, AUTO_ADD_APPL_SERVER:ON, SQL_LOG_MODE:ALL:100000<br />
&#160;LONG_TRANSACTION_TIME:60, LONG_QUERY_TIME:60, SESSION_TIMEOUT:300<br />
&#160;KEEP_CONNECTION:AUTO, ACCESS_MODE:RW<br />
----------------------------------------<br />
ID &#160;&#160;PID &#160;&#160;QPS &#160;&#160;LQS PSIZE STATUS<br />
----------------------------------------<br />
&#160;1 28444 &#160;&#160;&#160;&#160;0 &#160;&#160;&#160;&#160;0 50144 IDLE<br />
&#160;2 28445 &#160;&#160;&#160;&#160;0 &#160;&#160;&#160;&#160;0 50140 IDLE<br />
&#160;3 28446 &#160;&#160;&#160;&#160;0 &#160;&#160;&#160;&#160;0 50144 IDLE<br />
&#160;4 28447 &#160;&#160;&#160;&#160;0 &#160;&#160;&#160;&#160;0 50144 IDLE<br />
&#160;5 28448 &#160;&#160;&#160;&#160;0 &#160;&#160;&#160;&#160;0 50144 IDLE</p>
<p><span class="keyword">-t</span> 옵션을 사용하여, TPS와 QPS 정보를 파일로 출력한다. &#160;파일로 출력하는 것을 중단하려면 &lt;Ctrl+C&gt;를 눌러서 프로그램을 정지시킨다.</p>
<p class="code">% cubrid broker status -b -t -s 1 &gt; log_file</p>
<p><span class="keyword">-b</span> 옵션과 <span class="keyword">–s</span> 옵션을 이용하여 모든 브로커의 TPS와 QPS를 포함한 상태모니터링을 주기적으로 수행할 경우 다음과 같이 입력한다.</p>
<p class="code">% cubrid broker status -b -s 1<br />
NAME &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;PID &#160;PORT &#160;AS &#160;JQ &#160;&#160;&#160;&#160;&#160;REQ &#160;TPS &#160;QPS &#160;LONG-T &#160;LONG-Q ERR-Q<br />
===========================================================================<br />
* query_editor 28433 40820 &#160;&#160;5 &#160;&#160;0 &#160;&#160;&#160;&#160;&#160;&#160;&#160;0 &#160;&#160;&#160;0 &#160;&#160;&#160;0 &#160;&#160;&#160;0/60 &#160;&#160;&#160;0/60 &#160;&#160;&#160;0<br />
* broker1 &#160;&#160;&#160;&#160;&#160;28443 40821 &#160;&#160;5 &#160;&#160;0 &#160;&#160;&#160;&#160;&#160;&#160;&#160;0 &#160;&#160;&#160;0 &#160;&#160;&#160;0 &#160;&#160;&#160;0/60 &#160;&#160;&#160;0/60 &#160;&#160;&#160;0</p>
<p><span class="keyword">-f</span> 옵션을 사용하여 브로커가 연결한 서버/데이터베이스 정보와 접속 시간 정보를 보기 위해 다음과 같이 입력한다.</p>
<p class="code">$ cubrid broker status -f broker1<br />
@ cubrid broker status<br />
% broker1 &#160;- cub_cas [28443,40821] /home/CUBRID/log/broker/broker1.access /home/CUBRID/<br />
&#160;JOB QUEUE:0, AUTO_ADD_APPL_SERVER:ON, SQL_LOG_MODE:ALL:100000<br />
&#160;LONG_TRANSACTION_TIME:60, LONG_QUERY_TIME:60, SESSION_TIMEOUT:300<br />
&#160;KEEP_CONNECTION:AUTO, ACCESS_MODE:RW<br />
------------------------------------------------------------------------------------------------------------------<br />
ID &#160;&#160;PID &#160;&#160;QPS &#160;&#160;LQS PSIZE STATUS &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;LAST ACCESS TIME &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DB &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;HOST &#160;&#160;LAST CONNECT TIME<br />
------------------------------------------------------------------------------------------------------------------<br />
&#160;1 28444 &#160;&#160;&#160;&#160;0 &#160;&#160;&#160;&#160;0 50144 IDLE &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;2009/08/10 18:47:03 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;- &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;- &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-<br />
&#160;2 28445 &#160;&#160;&#160;&#160;0 &#160;&#160;&#160;&#160;0 50140 IDLE &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;2009/08/10 18:47:03 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;- &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;- &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-<br />
&#160;3 28446 &#160;&#160;&#160;&#160;0 &#160;&#160;&#160;&#160;0 50144 IDLE &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;2009/08/10 18:47:03 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;- &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;- &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-<br />
&#160;4 28447 &#160;&#160;&#160;&#160;0 &#160;&#160;&#160;&#160;0 50144 IDLE &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;2009/08/10 18:47:03 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;- &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;- &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-<br />
p>
<script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);


highlightSearch();
//-->
//]]></script>
</body>
</html>
