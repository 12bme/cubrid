
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>CSQL 옵션</title>
<link type="text/css" rel="stylesheet" href="../nhelp.css" />
 <meta name="generator" content="Adobe RoboHelp 8" />
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
-->
</style>
<script type="text/javascript" language="javascript1.2" src="../whmsg.js"></script>
<script type="text/javascript" language="javascript" src="../whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whlang.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whtopic.js"></script>

</head>
<body><script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.gbWhTopic)
{
	var strUrl = document.location.href;
	var bc = 0;
	var n = strUrl.toLowerCase().indexOf("bc-");
	if(n != -1)
	{
		document.location.href = strUrl.substring(0, n);
		bc = strUrl.substring(n+3);
	}

	if (window.addTocInfo)
	{
	addTocInfo("CSQL 인터프리터\nCSQL 실행\nCSQL 시작 옵션");
         if(strUrl.toLowerCase().indexOf("/help/")==-1){

    addButton("show",BTN_TEXT,"Show","","","","",0,0,"","","");

    }


	}
	if (window.writeBtnStyle)
		writeBtnStyle();

	if (window.writeIntopicBar)
		writeIntopicBar(1);if(strUrl.toLowerCase().indexOf("/help/")==-1){

         document.write("<p style=\"text-align:left\"> ");

AddMasterBreadcrumbs("../index.htm", "", "&nbsp;&gt;&nbsp;", "홈", "../cubrid.htm");

document.write("<a href=\"csql.htm\">CSQL 인터프리터<\/a> &nbsp;&gt;&nbsp; <a href=\"csql_exec_mode.htm\">CSQL 실행<\/a> &nbsp;&gt;&nbsp; CSQL 시작 옵션<\/p>");}


	if (window.setRelStartPage)
	{
	setRelStartPage("../index.htm");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}
}
else
	if (window.gbIE4)
		document.location.reload();

//-->
//]]></script>
<h3>CSQL 시작 옵션</h3>
<p>프롬프트 상에서 옵션 목록을 보려면, 다음과 같이 옵션을 적용할 데이터베이스를 지정하지 않고 <span class="keyword">csql</span> 유틸리티를 실행한다.</p>
<p class="code">%&#160;csql<br />
interactive SQL utility, version R2.0<br />
usage: csql [OPTION] database-name valid options:<br />
&#160;&#160;-S, --SA-mode&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; standalone mode execution<br />
&#160; -C, --CS-mode&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; client-server mode execution<br />
&#160; -u, --user=ARG&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;alternate user name<br />
&#160; -p, --pasword=ARG&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; &#160;password string, give "" for none<br />
&#160; -e, --error-continue&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;don't exit on statement error<br />
&#160; -i, --input-file=ARG&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;input-file-name<br />
&#160; -o, --output-file=ARG&#160;&#160;&#160;&#160;&#160;&#160; &#160;output-file-name<br />
&#160; -s, --single-line&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;single line oriented execution<br />
&#160; -c, --command=ARG&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;CSQL-commands<br />
&#160; -l, --line-output&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; display each value in a line<br />
&#160;&#160;-r, --read-only &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;read-only mode<br />
&#160;&#160;&#160;&#160;&#160; --no-auto-commit&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; disable auto commit mode execution<br />
&#160;&#160;&#160;&#160;&#160; --no-pager&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; do not use pager</p>
<h6>옵션</h6>
<p>다음은&#160;<span class="keyword">csql</span> 유틸리티와 함께 사용할 수 있는 옵션을 정리한 표이다.</p>
<table border="1">
<tr>
<th>
<p>옵션</p>
</th>
<th>
<p>설명</p>
</th>
</tr>
<tr>
<td>
<p><span class="keyword">-S</span></p>
</td>
<td>
<p>독립 모드(standalone mode)로 실행하기 위한 옵션이다.</p>
</td>
</tr>
<tr>
<td>
<p><span class="keyword">-C</span></p>
</td>
<td>
<p>클라이언트/서버 모드(client/server mode)로 실행하기 위한 옵션이다.</p>
</td>
</tr>
<tr>
<td>
<p><span class="keyword">-u</span> <span class="var">user_name</span></p>
</td>
<td>
<p>데이터베이스에 접속하려는 사용자를 명시할 때 사용하는 옵션으로, 디폴트 값은 <span class="keyword">PUBLIC</span>이다.</p>
</td>
</tr>
<tr>
<td>
<p><span class="keyword">-p</span> <span class="var">password</span></p>
</td>
<td>
<p>데이터베이스에 접속하려는 사용자의 암호가 존재하는 경우 암호를 입력하기 위한 옵션이다.</p>
</td>
</tr>
<tr>
<td>
<p><span class="keyword">-e</span></p>
</td>
<td>
<p>에러가 발생하더라도 세션을 종료하지 않고 계속 실행하라는 옵션이다.</p>
</td>
</tr>
<tr>
<td>
<p><span class="keyword">-i</span> <span class="var">input_file</span></p>
</td>
<td>
<p>인수로 지정된 <span class="var">input_file</span>은 SQL 문이 저장된 파일이며, 배치 모드 실행을 위한 옵션이다.</p>
</td>
</tr>
<tr>
<td>
<p><span class="keyword">-o</span> <span class="var">output_file</span></p>
</td>
<td>
<p>구문 실행 결과를 화면에 표시하지 않고 지정된 <span class="var">output_file</span>에 저장한다.</p>
</td>
</tr>
<tr>
<td>
<p><span class="keyword">-s</span></p>
</td>
<td>
<p>복수 개의 SQL 문이 연속적으로 저장된 파일에서 SQL 문을 하나씩 실행하려고 할 때 사용하는 옵션이다. 각 SQL 문은 세미콜론(;)으로 구분한다.</p>
</td>
</tr>
<tr>
<td>
<p><span class="keyword">-c</span> "CSQL commands"</p>
</td>
<td>
<p>프롬프트 상에서 직접 SQL 문을 수행하기 위한 옵션으로 큰 따옴표 안에 수행하려는 SQL 문을 입력한다.</p>
</td>
</tr>
<tr>
<td>
<p><span class="keyword">-l</span></p>
</td>
<td>
<p>실행된 SQL 문에 대한 결과를 컬럼이 아닌 라인 형태로 출력하는 옵션이다. 디폴트 값은 컬럼 형태로 출력된다.</p>
</td>
</tr>
<tr>
<td height="16">
<p class="keyword">-r</p>
</td>
<td height="35">데이터베이스에 읽기 전용으로 접속하는 옵션이다.</td>
</tr>
<tr>
<td>
<p><span class="keyword">--no-auto-commit</span></p>
</td>
<td>
<p>CSQL 인터프리터의 자동 커밋(auto-commit) 모드를 OFF로 설정하는 옵션이다.</p>
</td>
</tr>
<tr>
<td>
<p><span class="keyword">--no-pager</span></p>
</td>
<td>
<p>CSQL 인터프리터에서 수행한 질의 결과를 페이지 단위로 출력하지 않고 일괄적으로 출력하는 옵션이다.</p>
</td>
</tr>
</table>
<ul>
<li class="title">독립 모드에서 실행(-S)</li>
<li class="desc"><span class="keyword">-S</span> 옵션을 이용하여 독립 모드로 <span class="keyword">demodb</span>에 접속하여 <span class="keyword">csql을</span> 실행하는 구문이다. <span class="keyword">demodb</span>를 독점적으로 사용하고자 할 때 <span class="keyword">-S</span> 옵션을 이용한다.</li>
</ul>
<p class="code">csql&#160;-S demodb</p>
<ul>
<li class="title">클라이언트/서버 모드에서 실행(-C)</li>
<li class="desc"><span class="keyword">-C</span> 옵션을 이용하여 클라이언트/서버 모드로 <span class="keyword">demodb</span>에 접속하여 <span class="keyword">csql</span> 유틸리티를 실행하는 구문이다. <span class="keyword">demodb</span>에 여러 클라이언트가 동시 접속하는 환경에서 <span class="keyword">-C</span> 옵션을 이용한다. 만약 클라이언트/서버 모드로 원격 호스트의 데이터베이스에 접속한 경우라도&#160;<span class="keyword">csql</span> 유틸리티를 실행하는 도중에 발생한 에러 로그는 로컬 호스트의 <span class="keyword">cub_client.err</span>&#160;파일에 기록된다.</li>
</ul>
<p class="code">csql&#160;-C demodb</p>
<ul>
<li class="title">배치 모드에서 사용되는 입력 파일을 지정(-i)</li>
<li class="desc"><span class="keyword">-i</span> 옵션을 이용하여 배치 모드에서 사용할&#160;입력 파일의 이름을 지정하는 구문이다. <span class="keyword">infile 파일에는</span> 하나 이상의 SQL 문이 저장되어 있으며, <span class="keyword">-i</span> 옵션이 지정되지 않으면 CSQL 인터프리터는 대화형 모드로 실행된다.</li>
</ul>
<p class="code">csql&#160;-i infile demodb</p>
<ul>
<li class="title">수행 결과를&#160;저장할 출력 파일을 지정(-o)</li>
<li class="desc"><span class="keyword">-o</span> 옵션을 이용하여&#160;질의 수행 결과를 화면에 출력하지 않고 지정된&#160;파일에 저장하도록 하는 구문이다. 이는 CSQL 인터프리터에 의한 질의 수행 결과를 추후 조회하고자 할 때 유용하게 사용될 수 있다.</li>
</ul>
<p class="code">csql&#160;-o outfile demodb</p>
<ul>
<li class="title">사용자 이름을 지정(-u)</li>
<li class="desc"><span class="keyword">-u</span> 옵션을 이용하여 지정된 데이터베이스에 접속하려는 사용자 이름을 지정하는 구문이다. 만약 <span class="keyword">-u</span> 옵션이 지정되지 않으면 가장 낮은 사용자 권한을 가지는 <span class="keyword">PUBLIC</span>이 사용자로 지정된다. 또한 사용자 이름이 유효하지 않은 경우에는 오류가 출력되고 <span class="keyword">csql</span> 유틸리티는 종료된다. 암호가 설정된 사용자 이름이 지정된 경우에는 암호를 입력받기 위한 프롬프트가 출력된다.</li>
</ul>
<p class="code">csql -u DBA demodb</p>
<ul>
<li class="title">사용자 암호를 지정(-p)</li>
<li class="desc"><span class="keyword">-p</span> 옵션을 이용하여 지정된 사용자의 암호를 입력하는 구문이다. 특히, 배치 모드에서는 지정한 사용자에 대한 암호 입력을 요청하는 프롬프트가 출력되지 않으므로 <span class="keyword">-p</span> 옵션을 이용하여 암호를 입력해야 한다. 잘못된 암호를 입력하면, 오류가 출력되고&#160;<span class="keyword">csql</span> 유틸리티는 종료된다.</li>
</ul>
<p class="code">csql -u DBA -p *** demodb</p>
<ul>
<li class="title">SQL 문을 하나씩 수행하도록 지정(-s)</li>
<li class="desc"><span class="keyword">-s</span> 옵션을 이용하여 입력된 SQL 문을&#160;하나씩 수행하는 구문이다. 이 옵션은 질의 수행을 위해 메모리를 적게 할당하고 싶을 때 유용하게 이용할 수 있다. 이 때, 각&#160;SQL 문은 세미콜론(;)으로 구분한다.</li>
</ul>
<p class="code">csql -s -i infile demodb</p>
<ul>
<li class="title">셸에서 직접 SQL 문을 처리(-c)</li>
<li class="desc"><span class="keyword">-c</span> 옵션을 이용하여 셸 상에서 하나 이상의 SQL 문을 직접 수행하는 구문이다.&#160;이 때, 각 문장은 세미콜론(;)으로 구분한다.</li>
</ul>
<p class="code">csql -c "select * from olympic;select * from stadium" demodb</p>
<ul>
<li class="title">라인 단위로 출력(-l)</li>
<li class="desc"><span class="keyword">-l</span> 옵션을 이용하여 SQL 문을 실행한 결과를 라인 단위로 출력하는 구문이다. <span class="keyword">-l</span> 옵션이 지정되지 않으면 열 단위로 출력된다.</li>
</ul>
<p class="code">csql -l demodb</p>
<ul>
<li class="title">에러를 무시하고 계속 실행(-e)</li>
<li class="desc"><span class="keyword">-e</span> 옵션을 이용하여&#160;의미상 오류 또는 런타임 에러가 발생하여도 이를 무시하고 계속 SQL 문을 실행하라는 구문이다. 이 때,&#160;SQL 문에 오류가 있는 경우에는 <span class="keyword">-e</span> 옵션이 지정되어 있어도 데이터베이스는 종료된다.</li>
</ul>
<p class="code">csql -e demodb</p>
<ul>
<li class="title">읽기 전용으로 접속 (-r)</li>
<li class="desc"><span class="keyword">-r</span> 옵션을 이용하여 읽기 전용으로 데이터베이스에 접속하는 구문이다. 데이터베이스에 읽기 전용으로 접속하면 테이블을 만들거나 데이터를 입력할 수 없고 데이터를 조회만 할 수 있다.</li>
</ul>
<p class="code">csql -r demodb</p>
<ul>
<li class="title">자동 커밋 모드 중지(--no-auto-commit)</li>
<li class="desc"><span class="keyword">--no-auto-commit</span> 옵션을 이용하여 자동 커밋 모드를 중지하는 구문이다. <span class="keyword">--no-auto-commit</span> 옵션을 지정하지 않으면 기본적으로&#160;CSQL 인터프리터는 자동 커밋 모드로 작동되고, 입력된 SQL 문이&#160;실행될 때마다 자동으로 커밋된다. 또한, CSQL 인터프리터를 시작한 후 <span class="keyword">;AUtocommit</span> 세션 명령을 수행해도 동일한 결과를 얻을 수 있다.</li>
</ul>
<p class="code">csql --no-auto-commit demodb</p>
<ul>
<li class="title">질의 수행 결과를 일괄적으로 보여주기(--no-pager)</li>
<li class="desc"><span class="keyword">--no-pager</span> 옵션을 이용하여 CSQL 인터프리터에서 수행한 질의 결과를 페이지 단위로 출력하지 않고, 일괄적으로 출력하라는 구문이다. <span class="keyword">--no-pager</span> 옵션을 지정하지 않으면 페이지 단위로 질의 수행 결과가 출력된다.</li>
</ul>
<p class="code">csql --no-pager demodb</p>
<script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);


highlightSearch();
//-->
//]]></script>
</body>
</html>
