
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<meta name="layout-height" content="25810" />
<meta name="layout-width" content="1072" />
<title>격리 수준 설정</title>
<link href="../nhelp.css" rel="Stylesheet" type="text/css" />
 <meta name="generator" content="Adobe RoboHelp 8" />
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
-->
</style>
<script type="text/javascript" language="javascript1.2" src="../whmsg.js"></script>
<script type="text/javascript" language="javascript" src="../whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whlang.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whtopic.js"></script>

</head>
<body><script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.gbWhTopic)
{
	var strUrl = document.location.href;
	var bc = 0;
	var n = strUrl.toLowerCase().indexOf("bc-");
	if(n != -1)
	{
		document.location.href = strUrl.substring(0, n);
		bc = strUrl.substring(n+3);
	}

	if (window.addTocInfo)
	{
	addTocInfo("CUBRID SQL 설명서\n트랜잭션 관리\n트랜잭션 격리 수준\n격리 수준 설정");
         if(strUrl.toLowerCase().indexOf("/help/")==-1){

    addButton("show",BTN_TEXT,"Show","","","","",0,0,"","","");

    }


	}
	if (window.writeBtnStyle)
		writeBtnStyle();

	if (window.writeIntopicBar)
		writeIntopicBar(1);if(strUrl.toLowerCase().indexOf("/help/")==-1){

         document.write("<p style=\"text-align:left\"> ");

AddMasterBreadcrumbs("../index.htm", "", "&nbsp;&gt;&nbsp;", "홈", "../cubrid.htm");

document.write("<a href=\"syntax.htm\">CUBRID SQL 설명서<\/a> &nbsp;&gt;&nbsp; <a href=\"syntax_tran_intro.htm\">트랜잭션 관리<\/a> &nbsp;&gt;&nbsp; <a href=\"syntax_tran_isolation_intro.htm\">트랜잭션 격리 수준<\/a> &nbsp;&gt;&nbsp; 격리 수준 설정<\/p>");}


	if (window.setRelStartPage)
	{
	setRelStartPage("../index.htm");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}
}
else
	if (window.gbIE4)
		document.location.reload();

//-->
//]]></script>
<h4>격리 수준 설정</h4>
<h6>설명</h6>
<p><a href="../pm/pm_db_classify_lock.htm"><span class="keyword">isolation_level</span></a> 시스템 매개변수와 <span class="keyword">SET TRANSACTION</span> 문으로 원하는 격리 수준을 설정할 수 있다. 처음 CUBRID 설치 시 <span class="keyword">cubrid.conf</span>에 설정된 격리 수준은 <span class="keyword">REPEATABLE READ CLASS, READ UNCOMMITTED INSTANCES</span>이며, 격리 수준이 설정되지 않으면 트랜잭션의 기본 격리 수준은 <span class="keyword">REPEATABLE READ CLASS, READ COMMITTED INSTANCES</span> 이다.<span class="keyword">isolation_level</span>은 클래스(스키마)와 인스턴스의 조합에 적용된다.</p>
<h6>구문</h6>
<p class="syntax"><span class="keyword">SET TRANSACTION ISOLATION LEVEL</span> <span class="var">isolation_level_spec</span> [ ; ]<br />
<span class="var">isolation_level_spec</span>:<br />
_ <span class="keyword">SERIALIZABLE</span><br />
_ <span class="keyword">CURSOR STABILITY</span><br />
_ <span class="var">isolation_level</span> [ { <span class="keyword">CLASS</span> | <span class="keyword">SCHEMA</span> } [ , <span class="var">isolation_level</span> <span class="keyword">INSTANCES</span> ] ]<br />
_ <span class="var">isolation_level</span> [ <span class="keyword">INSTANCES</span> [ , <span class="var">isolation_level</span> { <span class="keyword">CLASS</span> | <span class="keyword">SCHEMA</span> } ] ]<br />
_ <span class="var">variable</span><br />
<span class="var">isolation_level</span>:<br />
_ <span class="keyword">REPEATABLE READ</span><br />
_ <span class="keyword">READ COMMITTED</span><br />
_ <span class="keyword">READ UNCOMMITTED</span></p>
<h6>예제</h6>
<p>다음의 명령문은 클래스와 인스턴스에 반복 가능한 읽기 격리 수준을 설정한다.</p>
<p class="code">SET TRANSACTION ISOLATION LEVEL REPEATABLE READ CLASS, REPEATABLE READ INSTANCES</p>
<p>몇몇 격리 수준의 조합은 CUBRID에서 허용되지 않는다. 유효하지 않은 격리 수준은 <a href="syntax_tran_isolation_unsupported.htm">지원하지 않는 격리 수준 조합</a>에서 논의한다. 다음의 표는 <span class="keyword">SET TRANSACTION</span> 문으로 설정할 수 있는 격리 수준의 여러 조합들에 대한 간략한 설명을 제공한다.</p>
<p class="caption-table">CUBRID가 지원하는 격리 수준</p>
<table border="1" width="80%">
<tr>
<th width="180">
<p>격리 수준 이름</p>
</th>
<th width="468">
<p>설명</p>
</th>
</tr>
<tr>
<td width="180">
<p class="keyword">SERIALIZABLE</p>
</td>
<td width="468">
<p>이 격리 수준에서는 모든 동시성 관련 문제들(더티 읽기, 반복 불가능한 읽기, 유령 읽기)이 발생하지 않는다</p>
</td>
</tr>
<tr>
<td width="180">
<p><span class="keyword">REPEATABLE READ CLASS</span> with</p>
<p class="keyword">REPEATABLE READ INSTANCES</p>
</td>
<td width="468">
<p>이 격리 수준에서는 다른 트랜잭션에 의해 수정 중인 객체를 읽지 않으며, 인스턴스 들에 대한 반복 불가능한 읽기를 하지 않는다.</p>
<p>현재 트랜잭션이 읽은 객체(클래스 혹은 인스턴스) 들에 대해 다른 트랜잭션이 갱신 연산을 수행하지 못한다.</p>
<p>특정 조건을 만족하는 인스턴스들에 대한 검색은 유령 읽기가 발생할 수 있다.</p>
</td>
</tr>
<tr>
<td width="180">
<p><span class="keyword">REPEATABLE READ CLASS</span> with</p>
<p class="keyword">READ COMMITTED INSTANCES</p>
<p>(or <span class="keyword">CURSOR STABILITY</span>)</p>
</td>
<td width="468">
<p>이 격리 수준에서는 다른 트랜잭션에 의해 수정 중인 객체를 읽지 않으며, 트랜잭션이 접근 중인 클래스(스키마의 일부)를 다른 트랜잭션이 갱신하지 못하도록 한다.</p>
<p>트랜잭션은 인스턴스에 대한 반복 불가능한 읽기를 경험할 수도 있다. 같은 객체를 두 번 읽는 경우 그 객체의 다른 두 (커밋된) 값을 읽을 수 있음을 의미한다.</p>
</td>
</tr>
<tr>
<td width="180">
<p><span class="keyword">REPEATABLE READ CLASS</span> with</p>
<p class="keyword">READ UNCOMMITTED INSTANCES</p>
</td>
<td width="468">
<p>이 격리 수준에서는 다른 트랜잭션에 의해 수정 중인 클래스를 읽지 않으며, 트랜잭션이 접근중인 클래스(스키마의 일부분)를 다른 트랜잭션이 갱신하지 못하도록 한다.</p>
<p>이 격리 수준은 트랜잭션이 커밋된 인스턴스 뿐만 아니라 이후에 갱신되거나 롤백될 수 있는 커밋되지 않은 더티 인스턴스를 읽을 수 있도록 허용한다.</p>
</td>
</tr>
<tr>
<td width="180">
<p><span class="keyword">READ COMMITTED CLASS</span> with</p>
<p class="keyword">READ COMMITTED INSTANCES</p>
</td>
<td width="468">
<p>이 격리 수준에서는 다른 트랜잭션에 의해 수정 중인 객체(클래스 또는 인스턴스)를 읽지 않는다.</p>
<p>읽혀진 클래스나 인스턴스를 다른 트랜잭션이 갱신하지 못하게 막지 않는다.</p>
<p>트랜잭션은 클래스(스키마)와 인스턴스에 대한 읽기가 반복 불가능할 수 있다.</p>
</td>
</tr>
<tr>
<td width="180">
<p><span class="keyword">READ COMMITTED CLASS</span> with</p>
<p class="keyword">READ UNCOMMITTED INSTANCES</p>
</td>
<td width="468">
<p>이 격리 수준에서는 다른 트랜잭션에 의해 수정 중인 클래스를 읽지 않으며, (커밋된 값들을 읽는 것에 추가로) 더티 인스턴스를 읽는다.</p>
<p>트랜잭션은 클래스(스키마)와 인스턴스에 대한 읽기가 반복 불가능할 수 있다.</p>
</td>
</tr>
</table>
<p>일단 새로운 격리 수준이 설정되면, 트랜잭션의 남은 부분은(다른 격리 수준이 설정되기 전까지) 설정된 격리 수준을 사용되게 된다. 다른 격리 수준이 설정되기 전에는, 수정된 격리 수준이 이후의 트랜잭션에 적용된다. 격리 수준을 갱신할 필요가 있으면 트랜잭션의 시작 시점(커밋, 롤백, 또는 시스템 재시작 이후)에 하는 것이 좋다. 어떤 격리 수준이 트랜잭션의 진행 중에 설정되면 트랜잭션이 획득한 몇몇 자원(잠금)이 새로운 격리 수준이 설정되는 동안에 해제될 수 있다. 이 경우 하나의 격리 수준이 트랜잭션 전체에 계속 적용된다고 가정하면 안 된다.</p>
<p>예를 들어, 초기 격리 수준이 <span class="keyword">READ COMMITTED CLASS</span> with <span class="keyword">READ UNCOMMITTED INSTANCES</span>였는데 트랜잭션 중간에 <span class="keyword">REPEATABLE READ CLASS</span> with <span class="keyword">REPEATABLE READ INSTANCES</span> (<span class="keyword">SERIALIZABLE</span>)로 바뀌면 새로운 격리 수준이 설정되기 전에 트랜잭션에서 발생할 수 있는 몇몇 읽기 때문에 전체 트랜잭션이 <span class="keyword">SERIALIZABLE</span>하지 않을 수 있다. 일반적으로 최소한의 제한적인 격리 수준이 전체 트랜잭션에 영향을 준다고 가정하면 안전하다.</p>
<script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);


highlightSearch();
//-->
//]]></script>
</body>
</html>
