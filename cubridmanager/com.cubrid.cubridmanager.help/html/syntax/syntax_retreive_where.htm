
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<meta name="layout-height" content="25810" />
<meta name="layout-width" content="1072" />
<title>WHERE</title>
<link href="../nhelp.css" rel="Stylesheet" type="text/css" />
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
-->
</style>
<script type="text/javascript" language="javascript1.2" src="../whmsg.js"></script>
<script type="text/javascript" language="javascript" src="../whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whlang.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whtopic.js"></script>

 <meta name="generator" content="Adobe RoboHelp 8" />
</head>
<body><script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.gbWhTopic)
{
	var strUrl = document.location.href;
	var bc = 0;
	var n = strUrl.toLowerCase().indexOf("bc-");
	if(n != -1)
	{
		document.location.href = strUrl.substring(0, n);
		bc = strUrl.substring(n+3);
	}

	if (window.addTocInfo)
	{
	addTocInfo("CUBRID SQL 설명서\n데이터 조회\nWHERE 절");
         if(strUrl.toLowerCase().indexOf("/help/")==-1){

    addButton("show",BTN_TEXT,"Show","","","","",0,0,"","","");

    }


	}
	if (window.writeBtnStyle)
		writeBtnStyle();

	if (window.writeIntopicBar)
		writeIntopicBar(1);if(strUrl.toLowerCase().indexOf("/help/")==-1){

         document.write("<p style=\"text-align:left\"> ");

AddMasterBreadcrumbs("../index.htm", "", "&nbsp;&gt;&nbsp;", "홈", "../cubrid.htm");

document.write("<a href=\"syntax.htm\">CUBRID SQL 설명서<\/a> &nbsp;&gt;&nbsp; <a href=\"syntax_retreive_select.htm\">데이터 조회<\/a> &nbsp;&gt;&nbsp; WHERE 절<\/p>");}


	if (window.setRelStartPage)
	{
	setRelStartPage("../index.htm");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}
}
else
	if (window.gbIE4)
		document.location.reload();

//-->
//]]></script>
<h3>WHERE 절</h3>
<ul>
<li><a href="#basic">일반</a></li>
<li><a href="#BETWEEN">BETWEEN 조건식</a></li>
<li><a href="#comparison">비교 조건식</a></li>
<li><a href="#EXISTS">EXISTS 조건식</a></li>
<li><a href="#IN">IN 조건식</a></li>
<li><a href="#LIKE">LIKE 조건식</a></li>
<li><a href="#NULL">NULL 조건식</a></li>
<li><a href="#all">수량어</a></li>
</ul>
<h5><a name="basic" id="basic"></a>일반</h5>
<h6>설명</h6>
<p>질의에서 컬럼은 조건에 따라 처리될 수 있다. <span class="keyword">WHERE</span> 절은 조회하려는 데이터의 조건을 명시한다.</p>
<h6>구문</h6>
<p class="syntax"><span class="keyword">WHERE</span> <span class="var">search_condition</span><br />
<br />
<span class="var">search_condition</span> :<br />
<span class="var">comparison_predicate</span><br />
<span class="var">between_predicate</span><br />
<span class="var">in_predicate</span><br />
<span class="var">like_predicate</span><br />
<span class="var">null_predicate</span><br />
<span class="var">quantified predicate</span><br />
<span class="var">exists_predicate</span><br />
<span class="var">set_predicate</span></p>
<p><span class="keyword">WHERE</span> 절은 <span class="var">search_condition</span> 또는 질의에서 조회되는 데이터를 결정하는 조건식을 지정한다. 조건식이 참인 데이터만 질의 결과로 조회된다(<span class="keyword">NULL</span> 값은 알 수 없는 값으로서 질의 결과로 조회되지 않는다).</p>
<p>복수의 조건은 논리연산자 <span class="keyword">AND</span>, <span class="keyword">OR</span>를 사용할 수 있다. <span class="keyword">AND</span>가 지정된 경우&#160;모든 조건이&#160;참이어야 하고, <span class="keyword">OR</span>로 지정된 경우에는 하나의 조건만 참이어도 된다. 만약 키워드 <span class="keyword">NOT</span>이 조건 앞에 붙는다면 조건은 반대의 의미를 갖는다. 논리 연산이 평가 되는 순서는 다음 표와 같다.</p>
<table border="1">
<tr>
<th>
<p>우선순위</p>
</th>
<th>
<p>연산자</p>
</th>
<th>
<p>기능</p>
</th>
</tr>
<tr>
<td>
<p>1</p>
</td>
<td class="keyword">
<p>()</p>
</td>
<td>
<p>괄호 내에 포함된 논리 표현식은 첫 번째로 평가된다.</p>
</td>
</tr>
<tr>
<td>
<p>2</p>
</td>
<td class="keyword">
<p>NOT</p>
</td>
<td>
<p>논리 표현식의 결과를 부정한다.</p>
</td>
</tr>
<tr>
<td>
<p>3</p>
</td>
<td class="keyword">
<p>AND</p>
</td>
<td>
<p>논리 표현식에 포함된 모든 조건이 참이어야 한다.</p>
</td>
</tr>
<tr>
<td>
<p>4</p>
</td>
<td class="keyword">
<p>OR</p>
</td>
<td>
<p>논리 표현식에 포함된 조건 중 하나의 조건은 참이어야 한다.</p>
</td>
</tr>
</table>
<ul>
<li><span class="var">search_condition</span> : 하위&#160;항목들에서 자세히 기술된다.</li>
</ul>
<h5><a name="BETWEEN" id="BETWEEN"></a>BETWEEN 조건식</h5>
<h6>설명</h6>
<p><span class="keyword">BETWEEN</span> 조건식은 테이블의 인스턴스가 어떤 값의 범위 내에 있거나, 범위 밖에 있을 때 조회하도록 지정할 수 있다. <span class="keyword">BETWEEN</span>으로 평가되는 컬럼은 단일 값을 갖는 기본 제공 데이터 타입이어야 한다.</p>
<h6>구문</h6>
<p class="syntax"><span class="var">expression</span> [ <span class="keyword">NOT</span> ] <span class="keyword">BETWEEN</span> <span class="var">expression</span> <span class="keyword">AND</span> <span class="var">expression</span></p>
<ul>
<li><span class="var">expression</span> : <span class="var">expression</span>은&#160;컬럼 이름, 경로 표현식, 상수 값, 산술 표현식, 집계 함수가 될 수 있다. 문자열 표현식인 경우에는 문자의 사전순으로 조건이 평가된다. 예를 들면 조건식 <span class="keyword">i BETWEEN g&#160;AND m</span>은 복합 조건식 <span class="keyword">i &gt;= g&#160;AND i&#160;&lt;= m</span>과 동일하다.</li>
</ul>
<h6>예제</h6>
<p>다음은&#160;올림픽 종목 중에서&#160;경기 인원이 5명 이상 10명 미만인 종목의 이름과 성별 구분, 경기 인원을 조회하는 예제이다. 이 질의에서&#160;<span class="keyword">players</span> 값이 지정된 값 사이에 존재하는&#160;20개의 데이터가 <span class="keyword">event</span>&#160;테이블에서 조회되었다.</p>
<p class="code">SELECT name, gender, players FROM event WHERE players BETWEEN 5 AND 10;<br />
=== &lt;Result of SELECT Command in Line 2&gt; ===<br />
&#160; name&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; gender&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; players<br />
=========================================================<br />
&#160; 'Synchronized Team'&#160;&#160; 'W'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 8<br />
&#160; 'Indoor'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'M'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 6<br />
&#160; 'Indoor'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'W'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 6<br />
&#160; 'Water Polo'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'M'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 7<br />
&#160; 'Water Polo'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'W'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 7<br />
...<br />
20 rows selected.</p>
<p><span class="keyword">BETWEEN</span>&#160;절에서 <span class="keyword">NOT</span>을 사용할 수도 있다. <span class="keyword">NOT</span> <span class="keyword">BETWEEN</span>을 사용하면, 지정된 범위 밖에 해당하는 데이터를 조회한다. 만약 <span class="keyword">event</span>의 <span class="keyword">players</span> 값이 정확히 5이거나 10인 데이터는 <span class="keyword">NOT</span> <span class="keyword">BETWEEN</span>의 질의 결과에 포함되지 않는다.</p>
<p class="code">SELECT name, gender, players FROM event WHERE players NOT BETWEEN&#160;5 AND 10;<br />
=== &lt;Result of SELECT Command in Line 2&gt; ===<br />
&#160; name&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; gender&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; players<br />
=========================================================<br />
&#160; 'Freestyle 48kg'&#160;&#160;&#160;&#160;&#160; 'W'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1<br />
&#160; 'Freestyle -48kg'&#160;&#160;&#160;&#160; 'M'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1<br />
&#160; 'Freestyle 52kg'&#160;&#160;&#160;&#160;&#160; 'M'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1<br />
&#160; 'Freestyle -52kg'&#160;&#160;&#160;&#160; 'M'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1<br />
&#160; 'Freestyle 54kg'&#160;&#160;&#160;&#160;&#160; 'M'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1<br />
&#160;...<br />
402 rows selected.</p>
<h5><a name="comparison" id="comparison"></a>비교 조건식</h5>
<h6>설명</h6>
<p>비교 조건식 <span class="var">comparison_predicate</span>는 두 표현식을 비교하거나,&#160;하나의 표현식과 부질의를 비교한다. 두 표현식 중&#160;첫 번째 표현식은 주로 두 번째 표현식의 값에 대해 비교할 컬럼 이름 또는 경로 표현식이 사용된다. <span class="var">comparison_predicate</span>에서 사용할 수 있는 비교 연산자는 다음 표와 같다.</p>
<table border="1">
<tr>
<th>
<p>비교 연산자</p>
</th>
<th>
<p>의미</p>
</th>
</tr>
<tr>
<td>
<p>=</p>
</td>
<td>
<p>같다</p>
</td>
</tr>
<tr>
<td>
<p>&lt;&gt;</p>
</td>
<td>
<p>다르다</p>
</td>
</tr>
<tr>
<td>
<p>&gt;</p>
</td>
<td>
<p>크다</p>
</td>
</tr>
<tr>
<td>
<p>&lt;</p>
</td>
<td>
<p>작다</p>
</td>
</tr>
<tr>
<td>
<p>&gt;=</p>
</td>
<td>
<p>크거나 같다</p>
</td>
</tr>
<tr>
<td>
<p>&lt;=</p>
</td>
<td>
<p>작거나 같다</p>
</td>
</tr>
</table>
<p>부동 소수점(float) 또는 배정도(double) 데이터 타입에 대한 비교는 근사값으로 이루어지므로, 입력된 값은 시스템 내부에서 발생하는 변환에 따라 질의 조작 및 인수 전달 과정에서 변경될 수 있다. 이러한 자릿수의 손실은 출력된 값에서는 원하는 값으로 보인다 하더라도, 부동 소수점 또는 배정도 숫자가 저장되는 실제 값에 영향을 준다.</p>
<h6>예제</h6>
<ul>
<li class="title">예제 1</li>
<li class="desc">다음은 역대 올림픽이 개최된 국가 중, United States of America에서 개최된 올림픽 연도와 도시를 조회하는 예제이다.&#160;아래의&#160;질의문은 테이블 <span class="keyword">olympic</span>에서&#160;컬럼 <span class="keyword">host_year</span>, <span class="keyword">host_nation</span>, <span class="keyword">host_city</span>를 조회한다. <span class="keyword">WHERE</span> 절에 사용된 조건식은 모든 데이터에 대해 컬럼 <span class="keyword">host_nation</span>이 'United States of America'를 갖는 데이터를 검색한다.&#160;문자열에 대한 비교는 대문자와 소문자를 구별하고, 문자열은 반드시 작은 따옴표(' ')안에 표현되어야 한다. 문자열에 대한 자세한 사항은 "<a href="syntax_datatype_string_def.htm">데이터 타입</a>"을 참조한다.</li>
</ul>
<p class="code">SELECT host_year, host_nation, host_city FROM olympic WHERE host_nation='United States of America';<br />
=== &lt;Result of SELECT Command in Line 2&gt; ===<br />
&#160;&#160;&#160; host_year&#160; host_nation&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; host_city<br />
=========================================================<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1996&#160; 'United States of America'&#160; 'Atlanta '<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1904&#160; 'United States of America'&#160; 'St. Louis'<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1984&#160; 'United States of America'&#160; 'Los Angeles'<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1932&#160; 'United States of America'&#160; 'Los Angeles'&#160; &#160;<br />
4 rows selected.</p>
<ul>
<li class="title">예제 2</li>
<li>
<p class="desc">다음은 올림픽 종목 중에서&#160;경기 인원이 5명 이상 10명 미만인 종목의 이름과 성별구분, 경기 인원을 조회하는 예제이다. 다음 질의문은 <span class="keyword">event</span> 테이블에서 <span class="keyword">name</span>, <span class="keyword">gender</span>, <span class="keyword">players</span> 컬럼을 조회한다.&#160;<span class="keyword">WHERE</span> 절에는 비교조건식과 논리연산자를 이용하여, 조회하려는 <span class="keyword">players</span> 값의 범위를 지정한다.</p>
</li>
</ul>
<p class="code">SELECT sports, name, gender, players FROM event WHERE players &gt; 4 AND players &lt; 10;<br />
=== &lt;Result of SELECT Command in Line 1&gt; ===<br />
&#160; sports&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; name&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; gender&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; players<br />
===============================================================================<br />
'Swimming'&#160;&#160;&#160;&#160; &#160;&#160;&#160;&#160;&#160;&#160;&#160;'Synchronized Team'&#160;&#160; &#160;&#160;&#160;&#160;&#160;&#160;&#160;'W'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; &#160;&#160;&#160;&#160;&#160;&#160; 8<br />
&#160; 'Volleyball'&#160;&#160;&#160;&#160;&#160; &#160;&#160;&#160;&#160;&#160; 'Indoor'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;'M'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 6<br />
&#160; 'Volleyball'&#160;&#160;&#160;&#160;&#160; &#160;&#160;&#160;&#160;&#160; 'Indoor'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;'W'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 6<br />
&#160; 'Water Polo'&#160;&#160;&#160;&#160; &#160;&#160;&#160;&#160; &#160;'Water Polo'&#160;&#160;&#160;&#160;&#160;&#160;&#160; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'M'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 7<br />
&#160; 'Water Polo'&#160;&#160;&#160; &#160;&#160;&#160;&#160;&#160;&#160;'Water Polo'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;'W'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 7<br />
...&#160; &#160;&#160;<br />
20 rows selected.</p>
<h5><a name="EXISTS" id="EXISTS"></a>EXISTS 조건식</h5>
<h6>설명</h6>
<p><span class="keyword">EXISTS</span> 조건식은 부질의의 결과가 공집합인지 아닌지를 판단하는데 사용된다.</p>
<h6>구문</h6>
<p><span class="keyword">EXISTS</span> <span class="var">expression</span></p>
<ul>
<li><span class="var">expression</span> : <span class="var">expression</span>에 부질의가 지정되었다면, 부질의 <span class="keyword">SELECT</span> 문에 의해 만들어진 결과가 평가된다. 만약 부질의가 어떤 결과도 만들지 않는다면, <span class="keyword">EXISTS</span>는 거짓이 된다.</li>
</ul>
<h6>예제</h6>
<p>다음은&#160;1988년 올림픽에 참가한 국가에 대해 국가 이름과 그 국가가 속한 대륙이름을 조회하는 예제이다. <span class="keyword">EXISTS</span> 조건식은 부질의에 대해 값이 존재하는지를 검사하는데 사용된다. 해당 연도에 참가하는 국가가 존재하면 이는 부질의의 결과가 존재하는 것이며, 이에 따라 156개의 국가가 대륙정보와 함께 출력된다.</p>
<p class="code">SELECT n.name, n.continent FROM nation n<br />
WHERE EXISTS (SELECT * FROM participant p WHERE p.host_year=1988 AND p.nation_code=n.code);<br />
=== &lt;Result of SELECT Command in Line 2&gt; ===<br />
&#160; name&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; continent<br />
============================================<br />
&#160; 'Somalia'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Africa'<br />
&#160; 'Sri Lanka'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Asia'<br />
&#160; 'Sudan'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Africa'<br />
&#160; 'Switzerland'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Europe'<br />
&#160; 'Surinam'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Americas'<br />
...<br />
156 rows selected.</p>
<h5><a name="IN" id="IN"></a>IN 조건식</h5>
<h6>설명</h6>
<p><span class="keyword">IN</span> 조건식은 집합, 다중 집합, 순차 집합에 대해 단일 값이 리스트에 포함되는지를 비교한다.</p>
<h6>구문</h6>
<p class="syntax"><span class="var">expression</span> [ <span class="keyword">NOT</span> ] <span class="keyword">IN</span> <span class="var">expression</span></p>
<ul>
<li><span class="var">expression</span> (left) : 단일 값을 가지는 컬럼, 경로 표현식, 상수 값 또는 단일 값을 생성하는 산술 함수가 될 수 있다.</li>
<li><span class="var">expression</span> (right) :&#160;이 expression은 비교를 위한 값의 리스트이어야 한다. expression은 부질의도 될 수 있다. 리스트는 또한 중괄호({}) 또는 괄호(())안에 표현된 명시적인 상수 값의 리스트가 될 수 있다. <span class="keyword">IN</span> 조건식에서 상수 값이 괄호(())안에 표현된 경우만 ANSI 표준을 따르는 것이다.</li>
</ul>
<h6>예제</h6>
<ul>
<li class="title">예제 1</li>
<li class="desc">다음은 경기 인원이 5명 또는 6명인 종목의 이름과 성별 구분, 경기 인원을 조회하는 예제이다.&#160;다음 질의문은 <span class="keyword">event</span> 테이블에서 players&#160;컬럼 값이&#160;5 또는 6인 데이터를 찾는다. 질의 조건에서 지정된 players의 값 중 하나를 갖는 <span class="keyword">event</span> 테이블의&#160;데이터가 결과로 조회된다.</li>
</ul>
<p class="code">SELECT name, gender, players FROM event WHERE players IN (5, 6);<br />
=== &lt;Result of SELECT Command in Line 2&gt; ===<br />
&#160; name&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; gender&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; players<br />
=========================================================<br />
&#160; 'Indoor'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'M'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 6<br />
&#160; 'Indoor'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'W'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 6<br />
&#160; 'Hockey'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'M'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 6<br />
&#160; 'Hockey'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'W'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 6<br />
&#160; 'Rhythmic Group Competition'&#160; 'W'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 6<br />
&#160; 'Rhythmic Team'&#160;&#160;&#160;&#160;&#160;&#160; 'M'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 6<br />
&#160; 'Rhythmic Team'&#160;&#160;&#160;&#160;&#160;&#160; 'W'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 6<br />
&#160; 'Basketball'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'M'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 5<br />
&#160; 'Basketball'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'W'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 5&#160; &#160;&#160;<br />
9 rows selected.</p>
<ul>
<li class="title">예제 2</li>
<li class="desc">다음은&#160;금메달을&#160;한 개 이상 획득한 나라에 대해 이름과 그 나라가 속한 대륙을 조회하는 예제이다. 아래의&#160;질의문에는 <span class="keyword">IN</span> 조건식에 부질의가 지정되었다. 부질의는&#160;<span class="keyword">participant</span> 테이블이 가지는 <span class="keyword">nation_code</span>를 조회하고, 부질의 결과에 포함된 <span class="keyword">code</span> 값을 갖는&#160;<span class="keyword">nation</span> 테이블의 데이터를 조회한다.</li>
</ul>
<p class="code">SELECT continent, name FROM nation WHERE code IN (SELECT nation_code FROM participant WHERE gold&gt;0);<br />
=== &lt;Result of SELECT Command in Line 2&gt; ===<br />
&#160; continent&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; name<br />
============================================<br />
&#160; 'Africa'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Algeria'<br />
&#160; 'Americas'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Argentina'<br />
&#160; 'Europe'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Armenia'<br />
&#160; 'Oceania'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Australia'<br />
&#160; 'Europe'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Austria'...<br />
81 rows selected.</p>
<h5><a name="LIKE" id="LIKE"></a>LIKE 조건식</h5>
<h6>설명</h6>
<p><span class="keyword">LIKE</span> 조건식은 지정한 텍스트 패턴과 일치하는 테이블의 데이터를 검색한다. <span class="keyword">STRING</span> 또는 <span class="keyword">CHAR</span> 도메인을 갖는 컬럼에 대해서만 <span class="keyword">LIKE</span> 조건식을 이용한 비교가 가능하다. <span class="keyword">LIKE</span> 조건식은 <span class="keyword">NCHAR</span> 또는 <span class="keyword">BIT</span> 도메인에 대해서는 지원하지 않는다.</p>
<h6>구문</h6>
<p class="syntax"><span class="var">expression</span> [ <span class="keyword">NOT</span> ] <span class="keyword">LIKE</span> <span class="var">expression</span> [ <span class="keyword">ESCAPE</span> <span class="var">char</span>]</p>
<ul>
<li><span class="var">expression</span> (left) : 첫 번째 <span class="var">expression</span>은 <span class="keyword">STRING</span> 또는 <span class="keyword">CHAR</span>(n) 타입을 도메인으로 갖는 컬럼을 나타낸다. 패턴 비교는&#160;컬럼 값의 첫 번째 문자부터 시작된다.</li>
<li><span class="var">expression</span> (right) : 검색하고자 하는 두 번째 <span class="var">expression</span>은 다음 문자로 구성된 문자열이 될 수 있다.<br />
• 문자열 패턴에 포함된 심벌 "_"는 임의의 하나의 문자를 나타낸다.<br />
• 문자열 패턴에 포함된 심벌 "%"는 빈 문자열을 포함하는 임의의 문자열을 나타낸다.<br />
• 다른 모든 문자는 문자 그 자체를 나타낸다.<br />
• <span class="keyword">LIKE</span> 조건식에서 확장 문자의 디폴트 값은 존재하지 않는다</li>
<li><span class="keyword">ESCAPE</span> <span class="var">char</span> : 만약 검색하고자 하는 문자열 패턴이 실제&#160;문자로서의&#160;"_" 또는 "%"를 포함하는 경우 <span class="keyword">ESCAPE</span>&#160;항목이 반드시 지정되어야 한다. <span class="keyword">ESCAPE</span> 뒤에 지정한 하나의 char 문자가 문자열에 포함된 "_" 또는 "%" 문자 앞에 반드시 선행되어야 한다. 예를 들어 '10%'인 값을 검색할 때 <span class="keyword">ESCAPE</span> 뒤의 char 문자로 "\"가 사용된 경우 문자열은 '10\%'과 같이 표현해야 한다.</li>
</ul>
<h6>예제</h6>
<p>다음은&#160;국가 코드에 'K'를 포함하는 국가의 코드와 이름을 조회하는 예제이다. <span class="keyword">nation</span>&#160;테이블로부터 문자열 패턴이 '%K_'인 <span class="keyword">code</span>를 검색한다. 이 경우 문자열의 첫 번째 위치에는 임의의 문자열이 될 수 있고, 다음 문자는 반드시 'K'여야 하며, 나머지 부분은 임의의 하나의 문자를 포함할 수 있다. 여기서 <span class="keyword">code</span>는 3음절로 구성되어 있기 때문에, 결과값을 보면 K가 두번째 위치한 <span class="keyword">code</span>만이 조회된다.</p>
<p class="code">SELECT code, name FROM nation WHERE code LIKE '%K_';&#160; &#160;&#160;<br />
=== &lt;Result of SELECT Command in Line 1&gt; ===<br />
&#160; code&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; name<br />
============================================<br />
&#160; 'TKM'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Turmenistan'<br />
&#160; 'UKR'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Ukraine'<br />
&#160; 'SKN'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Saint Kitts &amp; Nevis'<br />
&#160; 'MKD'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Former Yugoslav Republic of Macedonia'<br />
&#160; 'HKG'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Hong Kong'&#160; &#160;&#160;<br />
5 rows selected.</p>
<h5><a name="NULL" id="NULL"></a>NULL 조건식</h5>
<h6>설명</h6>
<p><span class="keyword">NULL</span> 조건식은 테이블의 컬럼이 <span class="keyword">NULL</span>로 지정된 값인지를 검사한다. 또한, 조건식에서 <span class="keyword">NOT</span> <span class="keyword">NULL</span> 키워드를 사용함으로써 값을 가지는 컬럼을 조회할 수 있다.</p>
<h6>구문</h6>
<p class="syntax"><span class="var">expression</span> <span class="keyword">IS</span> [ <span class="keyword">NOT</span> ] <span class="keyword">NULL</span></p>
<ul>
<li><span class="var">expression</span> : <span class="keyword">NULL</span> 또는 <span class="keyword">NOT</span> <span class="keyword">NULL</span> 값인지를 검사하고자 하는 테이블의 컬럼을 나타낸다.</li>
</ul>
<h6>예제</h6>
<p>다음은 마스코트가 있는 올림픽에 대해 개최 연도, 개최국가, 개최도시, 마스코트, 슬로건을 조회하는 예제이다.&#160;다음 질의문은&#160;<span class="keyword">olympic</span> 테이블로부터&#160;<span class="keyword">mascot</span> 컬럼이 <span class="keyword">NULL</span>이 아닌 값을 갖는 인스턴스에 대해 지정한 컬럼을 조회한다.</p>
<p class="code">SELECT host_year, host_nation, host_city, mascot, slogan FROM olympic WHERE mascot is NOT NULL;&#160; &#160;&#160;<br />
=== &lt;Result of SELECT Command in Line 1&gt; ===<br />
&#160;&#160;&#160; host_year&#160; host_nation&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; host_city&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; mascot&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; slogan<br />
=====================================================================================================<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1988&#160; 'Korea'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Seoul'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'HODORI'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Harmony and progress'<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1992&#160; 'Spain'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Barcelona '&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Cobi'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Friends Forever '<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1996&#160; 'United States of America'&#160; 'Atlanta '&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Izzy'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'The Celebration of the Century '<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 2000&#160; 'Australia'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Sydney '&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Olly Syd Millie '&#160;&#160;&#160; 'Share the Spirit'<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1976&#160; 'Canada'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Montreal'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Amik'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; NULL<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1972&#160; 'Germany'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Munich'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Waldi'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; NULL<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1980&#160; 'U.S.S.R.'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Moscow'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Misha'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; NULL<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 1984&#160; 'United States of America'&#160; 'Los Angeles'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Sam'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Play part in History'<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 2004&#160; 'Greece'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Athens '&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Athena&#160; Phevos'&#160;&#160;&#160;&#160;&#160; 'Welcome Home'<br />
...&#160; &#160;&#160;<br />
25 rows selected.</p>
<h5><a name="all" id="all"></a>수량어</h5>
<h6>설명</h6>
<p><span class="keyword">ALL</span> 수량어는 단일 값을 다른 표현식에서 반환된 모든 값에 대해 비교하며, <span class="keyword">SOME</span> 수량어는 단일 값을 다른 표현식에서 반환된 각각의 값에 대해 비교한다. 단일 값은 표현식에서 반환된 값 중 최소 하나와 맞게 비교되어야 한다. 키워드 <span class="keyword">ANY</span>는 키워드 <span class="keyword">SOME</span> 대신 사용되어 같은 질의 결과를 얻을 수 있다.</p>
<h6>구문</h6>
<p class="syntax"><span class="var">expression</span> <span class="var">comp_op</span> <span class="keyword">ALL</span> <span class="var">expression</span><br />
<span class="var">expression</span> <span class="var">comp_op</span> <span class="keyword">SOME</span> <span class="var">expression</span></p>
<ul>
<li><span class="var">comp_op</span> : 비교 연산자 &gt;, &lt;, =, &gt;=, &lt;= 가 들어갈 수 있다.</li>
<li><span class="var">expression</span> (right) : 두 번째 <span class="var">expression</span>은&#160;컬럼 이름, 경로 표현식, 상수 값의 리스트(집합), 부질의, 산술 연산자가 될 수 있다. 조건식에서 두 번째 <span class="var">expression</span>으로 부질의가 사용될 때, 부질의에 의해 생성되는 모든 결과가 첫 번째 <span class="var">expression</span>에 연관된 단일 값에 대해 비교된다.</li>
</ul>
<h6>예제</h6>
<ul>
<li class="title">예제 1</li>
<li class="desc">다음은 <span class="keyword">ALL</span> 수량어에 대한 예제이다. 이 예에서 <span class="keyword">participant</span> 테이블의 <span class="keyword">gold</span> 컬럼은 <span class="keyword">participant</span> 테이블의 <span class="keyword">silver</span> 컬럼의 모든 값과 비교된다. 질의 결과는 <span class="keyword">participant</span> 테이블의 한 개 인스턴스 <span class="keyword">gold</span> 값이 <span class="keyword">participant</span> 테이블의 모든 인스턴스의 <span class="keyword">silver</span> 값보다 큰 것을 나타낸다.</li>
</ul>
<p class="code">SELECT nation_code, gold, silver FROM participant<br />
WHERE gold &gt; ALL (SELECT silver FROM participant) AND host_year=1992;<br />
=== &lt;Result of SELECT Command in Line 1&gt; ===<br />
&#160; nation_code&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; gold&#160;&#160;&#160;&#160;&#160;&#160; silver<br />
================================================<br />
&#160; 'EUN'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 45&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 38&#160; &#160;&#160;<br />
1 rows selected.</p>
<ul>
<li class="title">예제 2</li>
<li class="desc">다음은&#160;<span class="keyword">SOME</span> 수량어에 대한 예제이다. <span class="keyword">participant</span> 테이블의 <span class="keyword">gold</span> 컬럼은 <span class="keyword">participant</span> 테이블의 <span class="keyword">silver</span> 컬럼의 각각의 값과 비교된다. 질의 결과는 <span class="keyword">participant</span> 테이블의 37개 데이터 <span class="keyword">gold</span> 값이 <span class="keyword">participant</span>&#160;테이블의 데이터&#160;중 최소한 한 개의 <span class="keyword">silver</span> 값보다는 큰 것을 나타낸다.</li>
</ul>
<p class="code">SELECT nation_code, gold, silver FROM participant<br />
WHERE gold &gt; SOME(SELECT silver FROM participant) AND host_year=1992;&#160; &#160;&#160;<br />
=== &lt;Result of SELECT Command in Line 1&gt; ===<br />
&#160; nation_code&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; gold&#160;&#160;&#160;&#160;&#160;&#160; silver<br />
================================================<br />
&#160; 'ITA'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 6&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 5<br />
&#160; 'GBR'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 5&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 3<br />
&#160; 'ROU'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 4&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 6<br />
&#160; 'TCH'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 4&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 2<br />
&#160; 'PRK'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 4&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 0<br />
...<br />
37&#160;rows selected.</p>
<script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);


highlightSearch();
//-->
//]]></script>
</body>
</html>
