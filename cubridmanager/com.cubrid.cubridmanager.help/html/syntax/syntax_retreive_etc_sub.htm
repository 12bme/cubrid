
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<meta name="layout-height" content="25810" />
<meta name="layout-width" content="1072" />
<title>부질의</title>
<link href="../nhelp.css" rel="Stylesheet" type="text/css" />
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
-->
</style>
<script type="text/javascript" language="javascript1.2" src="../whmsg.js"></script>
<script type="text/javascript" language="javascript" src="../whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whlang.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whtopic.js"></script>

 <meta name="generator" content="Adobe RoboHelp 8" />
</head>
<body><script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.gbWhTopic)
{
	var strUrl = document.location.href;
	var bc = 0;
	var n = strUrl.toLowerCase().indexOf("bc-");
	if(n != -1)
	{
		document.location.href = strUrl.substring(0, n);
		bc = strUrl.substring(n+3);
	}

	if (window.addTocInfo)
	{
	addTocInfo("CUBRID SQL 설명서\n데이터 조회\n부질의(subquery)");
         if(strUrl.toLowerCase().indexOf("/help/")==-1){

    addButton("show",BTN_TEXT,"Show","","","","",0,0,"","","");

    }


	}
	if (window.writeBtnStyle)
		writeBtnStyle();

	if (window.writeIntopicBar)
		writeIntopicBar(1);if(strUrl.toLowerCase().indexOf("/help/")==-1){

         document.write("<p style=\"text-align:left\"> ");

AddMasterBreadcrumbs("../index.htm", "", "&nbsp;&gt;&nbsp;", "홈", "../cubrid.htm");

document.write("<a href=\"syntax.htm\">CUBRID SQL 설명서<\/a> &nbsp;&gt;&nbsp; <a href=\"syntax_retreive_select.htm\">데이터 조회<\/a> &nbsp;&gt;&nbsp; 부질의(subquery)<\/p>");}


	if (window.setRelStartPage)
	{
	setRelStartPage("../index.htm");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}
}
else
	if (window.gbIE4)
		document.location.reload();

//-->
//]]></script>
<h4>부질의</h4>
<p>부질의는 질의 내에서 <span class="keyword">SELECT</span> 절이나 <span class="keyword">WHERE</span> 절 등 표현식이 가능한 모든 곳에서 사용할 수 있다. 부질의가 표현식으로 사용될 경우에는 반드시 단일 컬럼을 반환해야 하지만, 표현식이 아닌 경우에는 하나 이상의 인스턴스가 반환될 수 있다. 부질의가 사용되는 경우에 따라 단일 행 부질의와 다중 행 부질의로 나뉠 수 있다.</p>
<h5>단일 행 부질의</h5>
<h6>설명</h6>
<p>단일 행 부질의는 하나의 컬럼을 갖는 하나의&#160;인스턴스를 만든다. 부질의에 의해&#160;인스턴스가 반환되지 않을 경우에 부질의 표현식은 <span class="keyword">NULL</span>을 가진다. 만약 부질의가 두 개 이상의&#160;인스턴스를 반환하도록 만들어진 경우에는 에러가 발생된다.</p>
<h6>예제</h6>
<p>다음은 역대 기록 테이블을 조회하는데, 신기록을 수립한 올림픽이 개최된 국가도 함께 조회하는 예제이다. 이&#160;예제는 표현식으로 사용된 단일 행 부질의를 보여준다. 이 예에서 부질의는&#160;<span class="keyword">olympic</span> 테이블에서&#160;<span class="keyword">host_year</span> 컬럼 값이&#160;<span class="keyword">history</span> 테이블의&#160;<span class="keyword">host_year</span> 컬럼 값과 같은 인스턴스에 대해 <span class="keyword">host_nation</span> 값을 반환한다. 조건에 일치되는 값이 없을 경우 부질의 결과는 <span class="keyword">NULL</span>이 표시된다.</p>
<p class="code">SELECT h.host_year, (SELECT host_nation FROM olympic o WHERE o.host_year=h.host_year),<br />
h.event_code, h.score, h.unit from history h;&#160; &#160;&#160;<br />
=== &lt;Result of SELECT Command in Line 1&gt; ===<br />
&#160;&#160;&#160; host_year&#160;(SELECT host_nation FROM olympic o WHERE o.host_year=h.host_year)&#160;&#160; event_code&#160; score&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; unit<br />
============================================================================================<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 2004&#160; 'Greece'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 20283&#160; '07:53.0'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'time'<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 2004&#160; 'Greece'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 20283&#160; '07:53.0'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'time'<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 2004&#160; 'Greece'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 20281&#160; '03:57.0'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'time'<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 2004&#160; 'Greece'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 20281&#160; '03:57.0'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'time'<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 2004&#160; 'Greece'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 20281&#160; '03:57.0'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'time'<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 2004&#160; 'Greece'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 20281&#160; '03:57.0'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'time'<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 2004&#160; 'Greece'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 20326&#160; '210'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'kg'<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 2000&#160; 'Australia'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 20328&#160; '225'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'kg'<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 2004&#160; 'Greece'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 20331&#160; '237.5'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'kg'<br />
...<br />
147 rows selected.</p>
<h5>다중 행 부질의</h5>
<h6>설명</h6>
<p>다중 행 부질의는 지정된 컬럼을 갖는 하나 이상의&#160;인스턴스를 반환한다. 다중 행 부질의 결과는 적절한 키워드(<span class="keyword">SET</span>, <span class="keyword">MULTISET</span>, <span class="keyword">LIST</span>, <span class="keyword">SEQUENCE</span>)를 사용하여 집합, 다중집합, 순차집합을 만드는데 사용될 수 있다.</p>
<h6>예제</h6>
<p>다음은 국가 테이블에서 국가 이름과 수도 이름을 조회하되, 올림픽을 개최한 국가는 개최도시를 리스트로 묶어 함께 조회하는 예제이다. 이 예제 같은 경우는 부질의 결과를 이용하여&#160;<span class="keyword">olympic</span> 테이블의&#160;<span class="keyword">host_city</span> 컬럼 값으로 리스트를 만든다. 이 질의는&#160;<span class="keyword">nation</span> 인스턴스에 대해 <span class="keyword">name</span>,&#160;<span class="keyword">capital</span> 값과 <span class="keyword">host_nation</span> 값을 포함하는&#160;<span class="keyword">olympic</span> 인스턴스의 <span class="keyword">host_city</span> 값에 대한 집합을 반환한다. 질의 결과에서&#160;<span class="keyword">name</span>&#160;값이 공집합인 경우는 제외되고,&#160;<span class="keyword">name</span>과 같은 값을 갖는&#160;<span class="keyword">olympic</span> 인스턴스가 존재하지 않는 경우에는 공집합이 반환된다.</p>
<p class="code">SELECT name, capital, list(SELECT host_city FROM olympic WHERE host_nation = name) FROM nation;<br />
<br />
=== &lt;Result of SELECT Command in Line 1&gt; ===<br />
&#160; name&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; capital&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; sequence((SELECT host_city FROM olympic WHERE host_nation=name))<br />
==================================================================<br />
&#160; 'Somalia'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Mogadishu'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; {}<br />
&#160; 'Sri Lanka'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Sri Jayewardenepura Kotte'&#160; {}<br />
&#160; 'Sao Tome &amp; Principe'&#160; 'Sao Tome'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; {}<br />
...<br />
&#160; 'U.S.S.R.'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Moscow'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; {'Moscow'}<br />
&#160; 'Uruguay'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Montevideo'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; {}<br />
&#160; 'United States of America'&#160; 'Washington.D.C'&#160;&#160;&#160;&#160;&#160; {'Atlanta ', 'St. Louis', 'Los Angeles', 'Los Angeles'}<br />
&#160; 'Uzbekistan'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Tashkent'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; {}<br />
&#160; 'Vanuatu'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'Port Vila'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; {}<br />
215 rows selected.</p>
<p>이런 형태의 다중 행 부질의 표현식은 집합 값을 갖는 표현식이 허용되는 모든 곳에서 사용할 수 있다. 단,&#160;클래스 속성 정의에서 <span class="keyword">DEFAULT</span> 명세 부분과 같이 집합 상수 값이 요구되는 곳에는 사용될 수 없다.</p>
<p>부질의 내에서 <span class="keyword">ORDER BY</span> 절을 명시적으로 사용하지 않는 경우 다중 행 부질의 결과의 순서는 지정되지 않으므로, 순차 집합을 생성하는 다중 행 부질의는 <span class="keyword">ORDER BY</span> 절을 사용하여 결과의 순서를 지정하여야 한다.</p>
<script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);


highlightSearch();
//-->
//]]></script>
</body>
</html>
