
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<meta name="layout-height" content="61539" />
<meta name="layout-width" content="1328" />
<title>집합 연산자</title>
<link href="../nhelp.css" rel="Stylesheet" type="text/css" />
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
-->
</style>
<script type="text/javascript" language="javascript1.2" src="../whmsg.js"></script>
<script type="text/javascript" language="javascript" src="../whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whlang.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whtopic.js"></script>

 <meta name="generator" content="Adobe RoboHelp 8" />
</head>
<body><script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.gbWhTopic)
{
	var strUrl = document.location.href;
	var bc = 0;
	var n = strUrl.toLowerCase().indexOf("bc-");
	if(n != -1)
	{
		document.location.href = strUrl.substring(0, n);
		bc = strUrl.substring(n+3);
	}

	if (window.addTocInfo)
	{
	addTocInfo("CUBRID SQL 설명서\n연산자와 함수\n집합 연산자");
         if(strUrl.toLowerCase().indexOf("/help/")==-1){

    addButton("show",BTN_TEXT,"Show","","","","",0,0,"","","");

    }


	}
	if (window.writeBtnStyle)
		writeBtnStyle();

	if (window.writeIntopicBar)
		writeIntopicBar(1);if(strUrl.toLowerCase().indexOf("/help/")==-1){

         document.write("<p style=\"text-align:left\"> ");

AddMasterBreadcrumbs("../index.htm", "", "&nbsp;&gt;&nbsp;", "홈", "../cubrid.htm");

document.write("<a href=\"syntax.htm\">CUBRID SQL 설명서<\/a> &nbsp;&gt;&nbsp; <a href=\"syntax_operator_rel.htm\">연산자와 함수<\/a> &nbsp;&gt;&nbsp; 집합 연산자<\/p>");}


	if (window.setRelStartPage)
	{
	setRelStartPage("../index.htm");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}
}
else
	if (window.gbIE4)
		document.location.reload();

//-->
//]]></script>
<h3>집합 연산자</h3>
<h6>집합 산술 연산자</h6>
<p><span class="keyword">SET</span>, <span class="keyword">MULTISET</span>, <span class="keyword">LIST(SEQUENCE)</span> 타입에 대해 합집합, 차집합, 교집합을 구하기 위해서 각각 +, -, * 연산자를 사용할 수 있다.</p>
<p>다음 표에 연산자에 대한 용법이 요약되어 있다.</p>
<table border="1">
<tbody>
<tr>
<th>
<p>컬렉션 피연산자</p>
</th>
<th>
<p>집합 산술 연산자</p>
</th>
<th>
<p>컬렉션 피연산자</p>
</th>
<th>
<p>결과 컬렉션 타입</p>
</th>
</tr>
<tr>
<td>
<p><span class="keyword">SET</span></p>
</td>
<td>
<p>+<br />
-<br />
*</p>
</td>
<td>
<p><span class="keyword">SET</span></p>
</td>
<td>
<p><span class="keyword">SET</span></p>
</td>
</tr>
<tr>
<td>
<p><span class="keyword">SET</span></p>
</td>
<td>
<p>+<br />
-<br />
*</p>
</td>
<td>
<p><span class="keyword">MULTISET</span><br />
<span class="keyword">LIST (SEQUENCE)</span></p>
</td>
<td>
<p><span class="keyword">MULTISET</span></p>
</td>
</tr>
<tr>
<td>
<p><span class="keyword">MULTISET</span></p>
</td>
<td>
<p>+<br />
-<br />
*</p>
</td>
<td>
<p><span class="keyword">SET</span><br />
<span class="keyword">MULTISET</span><br />
<span class="keyword">LIST (SEQUENCE)</span></p>
</td>
<td>
<p><span class="keyword">MULTISET</span></p>
</td>
</tr>
<tr>
<td>
<p><span class="keyword">LIST (SEQUENCE)</span></p>
</td>
<td>
<p>+</p>
</td>
<td>
<p><span class="keyword">LIST (SEQUENCE)</span></p>
</td>
<td>
<p><span class="keyword">LIST (SEQUENCE)</span></p>
</td>
</tr>
<tr>
<td>
<p><span class="keyword">LIST (SEQUENCE)</span></p>
</td>
<td>
<p>+</p>
</td>
<td>
<p><span class="keyword">SET</span><br />
<span class="keyword">MULTISET</span></p>
</td>
<td>
<p><span class="keyword">MULTISET</span></p>
</td>
</tr>
<tr>
<td>
<p><span class="keyword">LIST (SEQUENCE)</span></p>
</td>
<td>
<p>-<br />
*</p>
</td>
<td>
<p><span class="keyword">SET</span><br />
<span class="keyword">MULTISET</span><br />
<span class="keyword">LIST (SEQUENCE)</span></p>
</td>
<td>
<p><span class="keyword">MULTISET</span></p>
</td>
</tr>
</tbody>
</table>
<ul>
<li>합집합</li>
<li class="desc">+ 연산자는 두 개의 컬렉션의 모든 원소들을 합쳐서 하나의 컬렉션을 생성한다. 두 <span class="keyword">LIST</span>를 + 연산자로 합치면 결과로 입력된 두 개의 <span class="keyword">LIST</span>를 병합(concatenation)한 <span class="keyword">LIST</span>가 반환된다. 입력한 <span class="keyword">LIST</span>의 개별적인 순서는 변하지 않는다. + 연산자의 피연산자 모두가 같은 컬렉션 타입이면, 결과는 입력한 컬렉션 타입이 된다. 예를 들어, 두 개의 <span class="keyword">SET</span>을 더할 경우 그 결과로는 <span class="keyword">SET</span>가 반환되며, <span class="keyword">SET</span>의 성격상 중복된 원소는 제거된다.<br />
두 개의 <span class="keyword">MULTISET</span>의 합집합을 구하면, 원소들이 순서대로 정렬된 <span class="keyword">MULTISET</span>가 반환된다. 예를 들어, {1, 3, 4, 3} + {3, 5, 4} 수식은 {1, 3, 3, 3, 4, 4, 5}와 같은 <span class="keyword">MULTISET</span>가 반환된다. + 연산에 서로 다른 두 컬렉션 타입이 주어지면, 두 피연산자 모두 <span class="keyword">MULTISET</span>로 변환된 후 계산되며 결과로 <span class="keyword">MULTISET</span>가 반환된다.</li>
<li>차집합</li>
<li class="desc">연산자는 하나의 컬렉션에 속한 원소 중에서 다른 컬렉션에 속하지 않은 원소만을 결정하는데 사용된다. 두 컬렉션간의 차집합을 계산할 때, - 연산자의 왼편에 있는 컬렉션에 속한 원소 중에서 오른쪽에 있는 컬렉션에 속하지 않은 원소들을 반환한다. 예를 들어, {1, 3, 4, 3} - {3, 5, 4} 수식은 {1, 3}과 같은 <span class="keyword">MULTISET</span>를 반환한다. 두 피연산자 모두가 <span class="keyword">SET</span> 타입인 경우에만 결과가 <span class="keyword">SET</span> 타입이고, 그 외에는 <span class="keyword">MULTISET</span>가 반환된다.</li>
<li>교집합</li>
<li class="desc">두 컬렉션 모두에 속한 원소들을 찾기 위해서 * 연산자를 사용한다. 두 컬렉션 피연산자가 모두 <span class="keyword">SET</span>이면, 중복이 모두 제거된 <span class="keyword">SET</span> 타입의 컬렉션이 결과로 반환된다. 이 경우를 제외한 나머지 피연산자 조합에 대해서는 결과로 <span class="keyword">MULTISET</span>가 반환된다. 이 경우에 두 피연산자가 모두 계산 이전에 <span class="keyword">MULTISET</span>로 변환되고 결과 역시 <span class="keyword">MULTISET</span>가 반환된다. 예를 들어, {1, 3, 4, 3} * {3, 5, 4} 수식은 {3, 4}와 같은 <span class="keyword">MULTISET</span>를 반환한다.</li>
</ul>
<h6>타입 변환</h6>
<p>컬렉션 타입에 대한 산술 연산은 다음과 같은 데이터 타입 변환 규칙을 따른다.</p>
<ul>
<li>두 인자가 같은 타입이면, 변환은 필요 없고 인자의 타입과 같은 결과가 반환된다.</li>
<li>두 인자가 서로 다른 컬렉션 타입을 가지는 경우에는, 필요한 경우 두 인자 모두 <span class="keyword">MULTISET</span>로 변환된다. 결과는 <span class="keyword">MULTISET</span>이다.</li>
</ul>
<h6>변수에 집합 데이터 값 할당</h6>
<p>컬렉션 값을 변수에 할당하기 위해서는 외부 질의가 하나의 행만을 반환해야 한다.</p>
<p>다음은 컬렉션 값을 변수에 할당하는 방법을 나타내는 예제이다. 다음과 같이 외부 질의는 하나의 행만을 반환해야 한다.</p>
<p class="code">SELECT SET(SELECT name<br />
FROM people<br />
WHERE ssn in {'1234', '5678'})<br />
TO :"names"<br />
FROM TABLE people;</p>
<script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);


highlightSearch();
//-->
//]]></script>
</body>
</html>
