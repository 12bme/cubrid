
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<meta name="layout-height" content="25810" />
<meta name="layout-width" content="1072" />
<title>트랜잭션 커밋</title>
<link href="../nhelp.css" rel="Stylesheet" type="text/css" />
 <meta name="generator" content="Adobe RoboHelp 8" />
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
-->
</style>
<script type="text/javascript" language="javascript1.2" src="../whmsg.js"></script>
<script type="text/javascript" language="javascript" src="../whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whlang.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whtopic.js"></script>

</head>
<body><script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.gbWhTopic)
{
	var strUrl = document.location.href;
	var bc = 0;
	var n = strUrl.toLowerCase().indexOf("bc-");
	if(n != -1)
	{
		document.location.href = strUrl.substring(0, n);
		bc = strUrl.substring(n+3);
	}

	if (window.addTocInfo)
	{
	addTocInfo("CUBRID SQL 설명서\n트랜잭션 관리\n데이터베이스 트랜잭션\n트랜잭션 커밋");
         if(strUrl.toLowerCase().indexOf("/help/")==-1){

    addButton("show",BTN_TEXT,"Show","","","","",0,0,"","","");

    }


	}
	if (window.writeBtnStyle)
		writeBtnStyle();

	if (window.writeIntopicBar)
		writeIntopicBar(1);if(strUrl.toLowerCase().indexOf("/help/")==-1){

         document.write("<p style=\"text-align:left\"> ");

AddMasterBreadcrumbs("../index.htm", "", "&nbsp;&gt;&nbsp;", "홈", "../cubrid.htm");

document.write("<a href=\"syntax.htm\">CUBRID SQL 설명서<\/a> &nbsp;&gt;&nbsp; <a href=\"syntax_tran_intro.htm\">트랜잭션 관리<\/a> &nbsp;&gt;&nbsp; <a href=\"syntax_tran_tran_intro.htm\">데이터베이스 트랜잭션<\/a> &nbsp;&gt;&nbsp; 트랜잭션 커밋<\/p>");}


	if (window.setRelStartPage)
	{
	setRelStartPage("../index.htm");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}
}
else
	if (window.gbIE4)
		document.location.reload();

//-->
//]]></script>
<h4>트랜잭션 커밋</h4>
<h6>설명</h6>
<p>데이터베이스에서 일어난 갱신들은 <span class="keyword">COMMIT WORK</span> 문이 주어지기 전까지 영구히 저장되지 않는다. "영구히(permanently)" 저장된다는 것은 디스크에 저장이 완료되는 것을 의미한다. 키워드 <span class="keyword">WORK</span>는 생략이 가능하다. 추가로 데이터베이스의 다른 사용자는 변경이 영구히 반영되기 전까지는 변경 사항을 볼 수 없다. 예를 들어 클래스에 새로운 인스턴스를 삽입했을 때 데이터베이스 트랜잭션이 커밋되기 전까지 그 인스턴스에 접근할 수 있는 것은 그 인스턴스를 삽입한 사용자뿐이다(<span class="keyword">UNCOMMITTED INSTANCES&#160;</span>격리 수준을&#160;사용하면 다른 사용자가 일관성이 없는 커밋되지 않은 갱신을 볼 수도 있다).</p>
<p>트랜잭션이 커밋된 후에는 트랜잭션에서 획득한 모든 잠금이 해제된다.</p>
<h6>구문</h6>
<p class="syntax">[;]<span class="keyword">COMMIT</span> [ <span class="keyword">WORK</span> ]</p>
<p>구문 앞에 ;을 붙일 경우 세션 명령어로 간주하여 바로 실행되며 생략할 경우 쿼리문의 하나로 간주하여 ;x[run]을 수행하기 전까지 실행을 보류한다.</p>
<h6>예제</h6>
<p>아래 예제의 데이터베이스 트랜잭션은 3개의 <span class="keyword">UPDATE</span> 문으로 구성되는데, 3개의 stadium의 seats 속성 값을 변경한다. 결과를 검토하기 위해 갱신이 일어나기 전에 현재의 값과 이름을 검색한다. 기본적으로 csql은 자동으로 autocommit으로 작동되므로, 예제에서는 autocommit 모드를 off로 설정한 후 동작을 시험한다.</p>
<p class="code">;autocommit off<br />
AUTOCOMMIT IS OFF<br />
select name, seats<br />
from stadium where code in (30138, 30139, 30140);<br />
;xrun<br />
<span class="var">=== &lt;Result of SELECT Command in Line 1&gt;===<br />
&#160; &#160; name &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;seats<br />
==================================<br />
&#160; &#160; 'Athens Olympic Tennis Centre' &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;3200<br />
&#160; &#160; 'Goudi Olympic Hall' &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;5000<br />
&#160; &#160; 'Vouliagmeni Olympic Centre' &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;3400<br />
3 rows selected.</span></p>
<p>3개의 <span class="keyword">UPDATE</span> 문은 각각의 stadium의 현재 seats을 가지고 있도록 한다. 명령이 수행되면 정확하게 입력이 되었는지 확인하기 위해 seats 클래스의 관련된 속성을 검색할 수 있다.</p>
<p class="code">update stadium<br />
set seats = seats + 1000<br />
where code in (30138, 30139, 30140);<br />
;xrun<br />
3 rows updated.<br />
select name, seats from stadium where code in (30138, 30139, 30140);<br />
;xrun<br />
<span class="var">=== &lt;Result of SELECT Command in Line 1&gt;===<br />
&#160; &#160; name &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;seats<br />
===================================<br />
&#160; &#160; 'Athens Olympic Tennis Centre' &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;4200<br />
&#160; &#160; 'Goudi Olympic Hall' &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;6000<br />
&#160; &#160; 'Vouliagmeni Olympic Centre' &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;4400<br />
&#160;<br />
3 rows selected.</span></p>
<p>만약 갱신이 제대로 이루어 졌다면 변경을 영구적으로 만들 수 있다. 이때 아래처럼 <span class="keyword">COMMIT WORK</span> 문을 사용한다.</p>
<p class="code">;commit work</p>
<p class="note"><span class="note-title">참고</span> autocommit off인 상태에서 응용 프로그램이 트랜잭션을 커밋하기 전에 데이터베이스를 빠져나오게 되면 마지막 <span class="keyword">COMMIT WORK</span> 이후의 모든 갱신 사항은 자동으로 롤백한다. CSQL 인터프리터에서는 트랜잭션을 커밋할 것인지 중단할 것인지 확인하는 절차가 진행된다. ;AUtocommit 세션 명령어에 대해서는 <a href="../csql/csql_sessioncommand.htm">CSQL 인터프리터&#160;&gt;&#160;세션 명령어</a>를 참조한다.</p>
<script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);


highlightSearch();
//-->
//]]></script>
</body>
</html>
