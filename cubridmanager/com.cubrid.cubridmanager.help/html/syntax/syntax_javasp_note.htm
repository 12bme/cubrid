
<html>
<head>
<title>주의 사항</title>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<link type="text/css" rel="stylesheet" href="../nhelp.css" />
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
-->
</style>
<script type="text/javascript" language="javascript1.2" src="../whmsg.js"></script>
<script type="text/javascript" language="javascript" src="../whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whlang.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whtopic.js"></script>

 <meta name="generator" content="Adobe RoboHelp 8" />
</head>
<body><script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.gbWhTopic)
{
	var strUrl = document.location.href;
	var bc = 0;
	var n = strUrl.toLowerCase().indexOf("bc-");
	if(n != -1)
	{
		document.location.href = strUrl.substring(0, n);
		bc = strUrl.substring(n+3);
	}

	if (window.addTocInfo)
	{
	addTocInfo("CUBRID SQL 설명서\nJava 저장 함수/프로시저\n주의 사항");
         if(strUrl.toLowerCase().indexOf("/help/")==-1){

    addButton("show",BTN_TEXT,"Show","","","","",0,0,"","","");

    }


	}
	if (window.writeBtnStyle)
		writeBtnStyle();

	if (window.writeIntopicBar)
		writeIntopicBar(1);if(strUrl.toLowerCase().indexOf("/help/")==-1){

         document.write("<p style=\"text-align:left\"> ");

AddMasterBreadcrumbs("../index.htm", "", "&nbsp;&gt;&nbsp;", "홈", "../cubrid.htm");

document.write("<a href=\"syntax.htm\">CUBRID SQL 설명서<\/a> &nbsp;&gt;&nbsp; <a href=\"syntax_javasp_overview.htm\">Java 저장 함수/프로시저<\/a> &nbsp;&gt;&nbsp; 주의 사항<\/p>");}


	if (window.setRelStartPage)
	{
	setRelStartPage("../index.htm");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}
}
else
	if (window.gbIE4)
		document.location.reload();

//-->
//]]></script>
<h3>주의 사항</h3>
<h6>Java 저장 함수/프로시저의 리턴 값 및 IN/OUT에 대한 타입 자릿수</h6>
<p>Java 저장 함수/프로시저의 리턴 값과 IN/OUT의 데이터 타입에 자릿수를 한정하는 경우, CUBRID에서는 다음과 같이 처리한다.</p>
<p>Java 저장 함수/프로시저의 sql_type을 기준으로 확인한다.</p>
<p>Java 저장 함수/프로시저 생성 시 정의한 자릿수는 무시하고 타입만 맞추어 Java에서 반환하는 값을 그대로 데이터베이스에 전달한다. 전달한 데이터에 대한 조작은 사용자가 데이터베이스에서 직접 처리하는 것을 원칙으로 한다.</p>
<p>다음과 같은 <span class="keyword">typestring</span>() Java 저장 함수를 살펴보자.</p>
<p class="code">public class JavaSP1{<br />
&#160;&#160;&#160; public static String typestring(){<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160; String temp = " ";<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160; for(int i=0 i&lt; 1 i++)<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; temp = temp + "1234567890";<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160; return temp;<br />
&#160;&#160;&#160; }<br />
}<br />
<br />
create function typestring() return char(5)<br />
as language java<br />
name 'JavaSP1.typestring() return java.lang.String';<br />
<br />
csql&gt; call typestring()<br />
csql&gt; ;xrun<br />
<br />
=== &lt; Result of CALL Command in Line 1&gt; ===<br />
<br />
&#160; Result<br />
======================<br />
&#160; ' 1234567890'<br />
<br />
Current transaction has been committed.<br />
<br />
1 command(s) successfully processed.</p>
<h6>Java 저장 프로시저에서의 java.sql.ResultSet 반환</h6>
<p>CUBRID에서는 <span class="keyword">java.sql.ResultSet</span>을 반환하는 Java 저장 함수/프로시저를 선언할 때는 데이터 타입으로 <span class="keyword">CURSOR</span>를 사용해야 한다.</p>
<p class="code">create function rset() return cursor<br />
as language java<br />
name 'JavaSP2.TResultSet() return java.sql.ResultSet'<br /></p>
<p>Java 파일에서는 <span class="keyword">java.sql.ResultSet</span>을 반환하기 전에 <span class="keyword">CUBRIDResultSet</span> 클래스로 캐스팅 후 <span class="keyword">setReturnable</span>() 메소드를 호출해야 한다.</p>
<p class="code">public static class JavaSP2 {<br />
public static ResultSet TResultSet(){<br />
&#160;&#160;&#160; try{<br />
&#160;&#160;&#160;&#160;&#160; &#160; &#160; &#160; Class.forName("cubrid.jdbc.driver.CUBRIDDriver");<br />
&#160;&#160;&#160; Connection conn = DriverManager.getConnection("jdbc:default:connection:");<br />
&#160;&#160;&#160; ((CUBRIDConnection)con).setCharset("euc_kr");<br />
&#160;&#160;&#160; String sql = "select * from station";<br />
&#160;&#160;&#160; Statement stmt=con.createStatement();<br />
&#160;&#160;&#160; ResultSet rs = stmt.executeQuery(sql);<br />
&#160;&#160;&#160; ((CUBRIDResultSet)rs).setReturnable();<br />
&#160;&#160;&#160; return rs;<br />
&#160;&#160;&#160; } catch (Exception e) {<br />
&#160; &#160; &#160; &#160; &#160; &#160; &#160; e.printStackTrace();<br />
&#160;&#160;&#160; }<br />
&#160;&#160;&#160; return null;<br />
&#160; }<br />
}</p>
<p>호출하는 쪽에서는 <span class="keyword">Types.JAVA_OBJECT</span>로 OUT 인자를 설정하고 <span class="keyword">getObject</span>() 함수로 가져온 후 <span class="keyword">java.sql.ResultSet</span>으로 변환(Casting)하여 사용해야 한다. 또한, <span class="keyword">java.sql.ResultSet</span>은 JDBC의 <span class="keyword">CallableStatement</span>에서만 사용할 수 있다.</p>
<p class="code">import java.sql.*;<br />
<br />
public class TestResultSet{<br />
&#160; public static void main(String[] args) {<br />
&#160;&#160;&#160; Connnection conn = null;<br />
&#160;&#160;&#160; Statement stmt= null;<br />
&#160;&#160;&#160; int result;<br />
&#160;&#160;&#160; int i;<br />
<br />
&#160;&#160;&#160; try{<br />
&#160;&#160;&#160;&#160; &#160; &#160; &#160; Class.forName("cubrid.jdbc.driver.CUBRIDDriver");<br />
&#160;&#160;&#160; conn = DriverManager.getConnection("jdbc:CUBRID:localhost:33000:demodb:::","","");<br />
&#160;&#160;<br />
&#160;&#160;&#160; CallableStatement cstmt = con.prepareCall("?=CALL rset()");<br />
&#160;&#160;&#160; cstmt.registerOutParameter(1, Types.JAVA_OBJECT);<br />
&#160;&#160;&#160; cstmt.execute();<br />
&#160;&#160;&#160; ResultSet rs = (ResultSet) cstmt.getObject(1);<br />
&#160;&#160;&#160; while(rs.next()) {<br />
&#160;&#160;&#160;&#160;&#160; System.out.println(rs.getString(1));<br />
&#160;&#160;&#160; }<br />
&#160; &#160; &#160; rs.close();<br />
&#160;&#160; &#160; } catch (Exception e) {<br />
&#160;&#160; &#160; &#160; &#160; &#160; &#160; e.printStackTrace();<br />
&#160;&#160;&#160; }<br />
}</p>
<p><span class="keyword">ResultSet</span>은 입력 인자로 사용할 수 없으며, 이를 IN 인자로 전달할 경우에는 에러가 발생한다. Java가 아닌 환경에서 <span class="keyword">ResultSet</span>을 반환하는 함수를 호출할 경우에도 에러가 발생한다.</p>
<h6>Java 저장 함수/프로시저에서 Set 타입의 IN/OUT</h6>
<p>CUBRID의 Java 저장 함수/프로시저에서 Set 타입이 IN OUT인 경우 Java에서 인자 값을 변경할 경우 변경 값이 전달이 되도록 Set 타입이 OUT 인자로 전달될 때는 2차원 배열로 전달하도록 해야 한다.</p>
<p class="code">Create procedure setoid(x in out set, z object)<br />
as language java name<br />
'SetOIDTest.SetOID(cubrid.sql.CUBRIDOID[][], cubrid.sql.CUBRIDOID';<br />
<br />
public static void SetOID(cubrid.sql.CUBRID[][] set, cubrid.sql.CUBRIDOID aoid){<br />
&#160; Connection conn=null;<br />
&#160; Statement stmt=null;<br />
&#160; String ret="";<br />
&#160; Vector v = new Vector();<br />
&#160; cubrid.sql.CUBRIDOID[] set1 = set[0];<br />
&#160; try {<br />
&#160;&#160;&#160; if(set1!=null) {<br />
&#160;&#160;&#160;&#160;&#160; int len = set1.length;<br />
&#160;&#160;&#160;&#160;&#160; int i = 0;<br />
&#160;&#160;&#160;&#160;&#160; for (i=0 i&lt; len i++)<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160; v.add(set1[i]);<br />
&#160;&#160;&#160; }<br />
&#160; v.add(aoid);<br />
<br />
&#160; set[0]=(cubrid.sql.CUBRIDOID[]) v.toArray(new cubrid.sql.CUBRIDOID[]{});<br />
&#160; } catch(Exception e) {<br />
&#160;&#160;&#160; e.printStackTrace();<br />
&#160; &#160; System.err.pirntln("SQLException:"+e.getMessage());<br />
&#160; }<br />
}</p>
<h6>Java 저장 함수/프로시저에서 OID 사용</h6>
<p>CUBRID 저장 프로시저에서 OID 타입의 값을 IN/OUT으로 사용할 경우 서버의 값을 전달 받아 사용한다.</p>
<p class="code">create procedure tOID(i inout object, q string)<br />
as language java<br />
name 'OIDtest.tOID(cubrid.sql.CUBRIDOID[], java.lang.String)';<br />
<br />
public static void tOID(CUBRIDOID[] oid, String query)<br />
{<br />
&#160; Connection conn=null;<br />
&#160; Statement stmt=null;<br />
&#160; String ret="";<br />
<br />
&#160; try {<br />
&#160;&#160;&#160; Class.forName("cubrid.jdbc.driver.CUBRIDDriver");<br />
&#160; &#160; conn=DriverManager.getConnection("jdbc:default:connection:");<br />
<br />
&#160; &#160; conn.setAutoCommit(false);<br />
&#160; &#160; stmt = conn.createStatement();<br />
&#160; &#160; ResultSet rs = stmt.executeQuery(query);<br />
&#160; &#160; System.out.println("query:"+ query);<br />
<br />
&#160; &#160; while(rs.next()) {<br />
&#160;&#160;&#160; &#160; oid[0]=(CUBRIDOID)rs.getObject(1);<br />
&#160;&#160;&#160; &#160; System.out.println("oid:"+oid[0].getTableName());<br />
&#160; &#160; }<br />
&#160; &#160; stmt.close();<br />
&#160; &#160; conn.close();<br />
&#160; } catch (SQLException e) {<br />
&#160; &#160; e.printStackTrace();<br />
&#160; &#160; System.err.println("SQLException:"+e.getMessage());<br />
&#160; } catch (Exception e) {<br />
&#160; &#160; e.printStackTrace();<br />
&#160; &#160; system.err.println("Exception:"+ e.getMessage());<br />
&#160; }<br />
}</p>
<script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);


highlightSearch();
//-->
//]]></script>
</body>
</html>
