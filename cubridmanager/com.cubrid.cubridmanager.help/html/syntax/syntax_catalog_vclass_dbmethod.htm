
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>DB_METHOD</title>
<link type="text/css" rel="stylesheet" href="../nhelp.css" />
 <meta name="generator" content="Adobe RoboHelp 8" />
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
-->
</style>
<script type="text/javascript" language="javascript1.2" src="../whmsg.js"></script>
<script type="text/javascript" language="javascript" src="../whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whlang.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whtopic.js"></script>

</head>
<body><script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.gbWhTopic)
{
	var strUrl = document.location.href;
	var bc = 0;
	var n = strUrl.toLowerCase().indexOf("bc-");
	if(n != -1)
	{
		document.location.href = strUrl.substring(0, n);
		bc = strUrl.substring(n+3);
	}

	if (window.addTocInfo)
	{
	addTocInfo("CUBRID SQL 설명서\nCUBRID 시스템 카탈로그\n시스템 카탈로그 가상 클래스\nDB_METHOD");
         if(strUrl.toLowerCase().indexOf("/help/")==-1){

    addButton("show",BTN_TEXT,"Show","","","","",0,0,"","","");

    }


	}
	if (window.writeBtnStyle)
		writeBtnStyle();

	if (window.writeIntopicBar)
		writeIntopicBar(1);if(strUrl.toLowerCase().indexOf("/help/")==-1){

         document.write("<p style=\"text-align:left\"> ");

AddMasterBreadcrumbs("../index.htm", "", "&nbsp;&gt;&nbsp;", "홈", "../cubrid.htm");

document.write("<a href=\"syntax.htm\">CUBRID SQL 설명서<\/a> &nbsp;&gt;&nbsp; <a href=\"syntax_catalog_intro.htm\">CUBRID 시스템 카탈로그<\/a> &nbsp;&gt;&nbsp; <a href=\"syntax_catalog_vclass_vclass.htm\">시스템 카탈로그 가상 클래스<\/a> &nbsp;&gt;&nbsp; DB_METHOD<\/p>");}


	if (window.setRelStartPage)
	{
	setRelStartPage("../index.htm");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}
}
else
	if (window.gbIE4)
		document.location.reload();

//-->
//]]></script>
<h4>DB_METHOD</h4>
<p>데이터베이스 내에서 현재 사용자가 접근 권한을 가진 클래스에 대해 그 메소드 정보를 보여준다.</p>
<table border="1" width="80%">
<tbody>
<tr>
<th width="110">
<p>속성명</p>
</th>
<th width="110">
<p>데이터 타입</p>
</th>
<th>
<p>설명</p>
</th>
</tr>
<tr>
<td width="110">
<p>meth_name</p>
</td>
<td width="110">
<p>VARCHAR (255)</p>
</td>
<td>
<p>메소드명</p>
</td>
</tr>
<tr>
<td width="110">
<p>class_name</p>
</td>
<td width="110">
<p>VARCHAR (255)</p>
</td>
<td>
<p>메소드가 속한 클래스명</p>
</td>
</tr>
<tr>
<td width="110">
<p>meth_type</p>
</td>
<td width="110">
<p>VARCHAR (8)</p>
</td>
<td>
<p>인스턴스 메소드이면 ‘INSTANCE’, 클래스 메소드이면 ‘CLASS’</p>
</td>
</tr>
<tr>
<td width="110">
<p>from_class_name</p>
</td>
<td width="110">
<p>VARCHAR (255)</p>
</td>
<td>
<p>상속받은 메소드이면 그 메소드가 정의되어 있는 상위 클래스명이 설정되며 그렇지 않으면 <span class="keyword">NULL</span></p>
</td>
</tr>
<tr>
<td width="110">
<p>from_meth_name</p>
</td>
<td width="110">
<p>VARCHAR (255)</p>
</td>
<td>
<p>상속받은 메소드이며, 이름 충돌이 발생하여 이를 해결하기 위해 그 메소드명이 바뀐 경우, 상위 클래스에 정의된 원래 이름이 설정됨. 그 이외에는 모두 <span class="keyword">NULL</span></p>
</td>
</tr>
<tr>
<td width="110">
<p>func_name</p>
</td>
<td width="110">
<p>VARCHAR (255)</p>
</td>
<td>
<p>메소드에 대한 C 함수명</p>
</td>
</tr>
</tbody>
</table>
<h6>정의</h6>
<p class="code">CREATE VCLASS db_method (<br />
meth_name, class_name, meth_type, from_class_name, from_meth_name, func_name)<br />
AS<br />
&#160;<br />
SELECT m.meth_name, m.class_of.class_name,<br />
&#160;&#160;&#160;&#160;&#160;&#160; CASE WHEN m.meth_type = 0 THEN 'INSTANCE' ELSE 'CLASS' END,<br />
&#160;&#160;&#160;&#160;&#160;&#160; m.from_class_of.class_name, m.from_meth_name, s.func_name<br />
FROM _db_method m, _db_meth_sig s<br />
WHERE s.meth_of = m AND<br />
&#160;&#160;&#160;&#160;&#160; &#160;&#160;(CURRENT_USER = 'DBA' OR<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160; {m.class_of.owner.name} subseteq (<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; SELECT set{CURRENT_USER} + coalesce(sum(set{t.g.name}), set{})<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; from db_user u, table(groups) as t(g)<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; where u.name = CURRENT_USER ) OR<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160; {m.class_of} subseteq (<br />
SELECT sum(set{au.class_of})<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; FROM _db_auth au<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; WHERE {au.grantee.name} subseteq (<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; SELECT set{CURRENT_USER} + coalesce(sum(set{t.g.name}), set{})<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; from db_user u, table(groups) as t(g)<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; where u.name = CURRENT_USER ) AND<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;au.auth_type = 'SELECT'));</p>
<h6>예제</h6>
<p>다음 예제에서는 클래스 ‘glo’의 메소드를 검색한다.</p>
<p class="code">csql&gt; select meth_name, meth_type, func_name<br />
csql&gt; from db_method<br />
csql&gt; where class_name = 'glo'<br />
csql&gt; order by meth_type, meth_name;<br />
csql&gt; ;xrun<br />
&#160;<br />
=== &lt;Result of SELECT Command in Line 1&gt; ===<br />
&#160;<br />
&#160; meth_name&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; meth_type&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; func_name<br />
==================================================================<br />
&#160; 'new'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'CLASS'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'esm_Glo_create'<br />
&#160; 'new_fbo'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'CLASS'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'esm_Glo_create_fbo'<br />
&#160; 'new_lo'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'CLASS'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'esm_Glo_create_lo'<br />
&#160; 'new_lo_import'&#160;&#160;&#160;&#160;&#160;&#160; 'CLASS'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'esm_Glo_import_lo'<br />
&#160; 'append_data'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'INSTANCE'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'esm_Glo_append'<br />
&#160; 'binary_search'&#160;&#160;&#160;&#160;&#160;&#160; 'INSTANCE'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'esm_Glo_binary_search'<br />
&#160; 'compress_data'&#160;&#160;&#160;&#160;&#160;&#160; 'INSTANCE'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'esm_Glo_compress'<br />
&#160; 'copy_from'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'INSTANCE'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'esm_Glo_copy_from'<br />
&#160; 'copy_to'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'INSTANCE'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'esm_Glo_copy_to'<br />
&#160; 'data_pos'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'INSTANCE'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'esm_Glo_position'<br />
&#160; 'data_seek'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'INSTANCE'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'esm_Glo_seek'<br />
&#160; 'data_size'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'INSTANCE'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'esm_Glo_size'<br />
&#160; 'delete_data'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'INSTANCE'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'esm_Glo_delete'<br />
. . .</p>
<script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);


highlightSearch();
//-->
//]]></script>
</body>
</html>
