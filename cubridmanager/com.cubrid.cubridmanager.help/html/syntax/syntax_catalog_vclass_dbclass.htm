
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>DB_CLASS</title>
<link type="text/css" rel="stylesheet" href="../nhelp.css" />
 <meta name="generator" content="Adobe RoboHelp 8" />
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
-->
</style>
<script type="text/javascript" language="javascript1.2" src="../whmsg.js"></script>
<script type="text/javascript" language="javascript" src="../whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whlang.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whtopic.js"></script>

</head>
<body><script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.gbWhTopic)
{
	var strUrl = document.location.href;
	var bc = 0;
	var n = strUrl.toLowerCase().indexOf("bc-");
	if(n != -1)
	{
		document.location.href = strUrl.substring(0, n);
		bc = strUrl.substring(n+3);
	}

	if (window.addTocInfo)
	{
	addTocInfo("CUBRID SQL 설명서\nCUBRID 시스템 카탈로그\n시스템 카탈로그 가상 클래스\nDB_CLASS");
         if(strUrl.toLowerCase().indexOf("/help/")==-1){

    addButton("show",BTN_TEXT,"Show","","","","",0,0,"","","");

    }


	}
	if (window.writeBtnStyle)
		writeBtnStyle();

	if (window.writeIntopicBar)
		writeIntopicBar(1);if(strUrl.toLowerCase().indexOf("/help/")==-1){

         document.write("<p style=\"text-align:left\"> ");

AddMasterBreadcrumbs("../index.htm", "", "&nbsp;&gt;&nbsp;", "홈", "../cubrid.htm");

document.write("<a href=\"syntax.htm\">CUBRID SQL 설명서<\/a> &nbsp;&gt;&nbsp; <a href=\"syntax_catalog_intro.htm\">CUBRID 시스템 카탈로그<\/a> &nbsp;&gt;&nbsp; <a href=\"syntax_catalog_vclass_vclass.htm\">시스템 카탈로그 가상 클래스<\/a> &nbsp;&gt;&nbsp; DB_CLASS<\/p>");}


	if (window.setRelStartPage)
	{
	setRelStartPage("../index.htm");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}
}
else
	if (window.gbIE4)
		document.location.reload();

//-->
//]]></script>
<h4>DB_CLASS</h4>
<p>데이터베이스 내에서 현재 사용자가 접근 권한을 가진 클래스에 대한 정보를 보여준다.</p>
<table border="1" width="0">
<tbody>
<tr>
<th width="110">
<p>속성명</p>
</th>
<th width="110">
<p>데이터 타입</p>
</th>
<th width="270">
<p>설명</p>
</th>
</tr>
<tr>
<td width="110">
<p>class_name</p>
</td>
<td width="110">
<p>VARCHAR (255)</p>
</td>
<td width="270">
<p>클래스명</p>
</td>
</tr>
<tr>
<td width="110">
<p>owner_name</p>
</td>
<td width="110">
<p>VARCHAR (255)</p>
</td>
<td width="270">
<p>클래스 소유자명</p>
</td>
</tr>
<tr>
<td width="110">
<p>class_type</p>
</td>
<td width="110">
<p>VARCHAR (6)</p>
</td>
<td width="270">
<p>클래스이면 ‘CLASS’, 가상 클래스이면 ‘VCLASS’</p>
</td>
</tr>
<tr>
<td width="110">
<p>is_system_class</p>
</td>
<td width="110">
<p>VARCHAR (3)</p>
</td>
<td width="270">
<p>시스템 클래스이면 ‘YES’, 아니면 ‘NO’</p>
</td>
</tr>
<tr>
<td width="110">
<p>partitioned</p>
</td>
<td width="110">
<p>VARCHAR (3)</p>
</td>
<td width="270">
<p>분할 그룹 클래스이면 ‘YES’, 아니면 ‘NO’</p>
</td>
</tr>
</tbody>
</table>
<h6>정의</h6>
<p class="code">CREATE VCLASS db_class (class_name, owner_name, class_type, is_system_class, partitioned)<br />
AS<br />
SELECT c.class_name, CAST(c.owner.name AS VARCHAR(255)),<br />
&#160;&#160;&#160;&#160;&#160;&#160; CASE WHEN c.class_type = 0 THEN 'CLASS' WHEN 1 THEN 'VCLASS' WHEN 2 THEN 'PROXY' ELSE 'UNKNOW' END,<br />
&#160;&#160;&#160;&#160;&#160;&#160; CASE WHEN MOD(c.is_system_class, 2) = 1 THEN 'YES' ELSE 'NO' END,<br />
&#160;&#160;&#160;&#160;&#160;&#160; CASE WHEN c.sub_classes IS NULL THEN 'NO' ELSE NVL((SELECT 'YES' FROM _db_partition p WHERE p.class_of = c and p.pname IS NULL), 'NO') END<br />
FROM _db_class c<br />
WHERE (CURRENT_USER = 'DBA' OR<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160; {c.owner.name} subseteq (<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; SELECT set{CURRENT_USER} + coalesce(sum(set{t.g.name}), set{})<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; from db_user u, table(groups) as t(g)<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; where u.name = CURRENT_USER ) OR<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160; {c} subseteq (<br />
SELECT sum(set{au.class_of})<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; FROM _db_auth au<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; WHERE {au.grantee.name} subseteq (<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; SELECT set{CURRENT_USER} + coalesce(sum(set{t.g.name}), set{})<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; from db_user u, table(groups) as t(g)<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; where u.name = CURRENT_USER ) AND<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;au.auth_type = 'SELECT'));</p>
<h6>예제</h6>
<p>다음 예제에서는 현재 사용자가 소유하고 있는 클래스를 검색한다.</p>
<p class="code">csql&gt; select class_name<br />
csql&gt; from db_class<br />
csql&gt; where owner_name = CURRENT_USER;<br />
csql&gt; ;xrun<br />
&#160;<br />
=== &lt;Result of SELECT Command in Line 1&gt; ===<br />
&#160;<br />
&#160; class_name<br />
======================<br />
&#160; 'stadium'<br />
&#160; 'code'<br />
&#160; 'nation'<br />
&#160; 'event'<br />
&#160; 'athlete'<br />
&#160; 'participant'<br />
&#160; 'olympic'<br />
&#160; 'game'<br />
&#160; 'record'<br />
&#160; 'history'<br />
'female_event'</p>
<p class="note"><span class="note-title">참고</span> 시스템 카탈로그 가상 클래스에 대한 모든 예제는 csql 프로그램에서 작성되었는데, 위의 예제는 사용자 옵션을 생략하였으며(생략시 기본 사용자는 <span class="keyword">PUBLIC</span>), 그 외 별도의 언급이 없는 경우 <span class="keyword">--no-auto-commit</span> (auto-commit 모드 비활성화), <span class="keyword">-u</span> (사용자 <span class="keyword">dba</span>를 명시) 옵션을 사용하였다.<br />
<br />
<span class="code">% csql --no-auto-commit -u dba demodb</span></p>
<p>다음 예제에서는 현재 사용자가 접근할 수 있는 가상 클래스를 검색한다.</p>
<p class="code">csql&gt; select class_name<br />
csql&gt; from db_class<br />
csql&gt; where class_type = 'VCLASS';<br />
csql&gt; ;xrun<br />
&#160;<br />
=== &lt;Result of SELECT Command in Line 1&gt; ===<br />
&#160;<br />
&#160; class_name<br />
======================<br />
&#160; 'db_stored_procedure_args'<br />
&#160; 'db_stored_procedure'<br />
&#160; 'db_partition'<br />
&#160; 'db_trig'<br />
&#160; 'db_auth'<br />
&#160; 'db_index_key'<br />
&#160; 'db_index'<br />
&#160; 'db_meth_file'<br />
&#160; 'db_meth_arg_setdomain_elm'<br />
&#160; 'db_meth_arg'<br />
&#160; 'db_method'<br />
&#160; 'db_attr_setdomain_elm'<br />
&#160; 'db_attribute'<br />
&#160; 'db_vclass'<br />
&#160; 'db_direct_super_class'<br />
&#160; 'db_class'</p>
<p>다음 예제에서는 현재 사용자가 접근할 수 있는 시스템 클래스를 검색한다. (사용자는 <span class="keyword">PUBLIC</span>)</p>
<p class="code">csql&gt; select class_name<br />
csql&gt; from db_class<br />
csql&gt; where is_system_class = 'YES' and<br />
csql&gt;&#160;&#160;&#160;&#160;&#160;&#160; class_type = 'CLASS'<br />
csql&gt; order by 1;<br />
csql&gt; ;xrun<br />
&#160;<br />
=== &lt;Result of SELECT Command in Line 1&gt; ===<br />
&#160;<br />
&#160; class_name<br />
======================<br />
&#160; 'db_authorization'<br />
&#160; 'db_authorizations'<br />
&#160; 'db_root'<br />
&#160; 'db_serial'<br />
&#160; 'db_user'<br />
&#160; 'glo'</p>
<script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);


highlightSearch();
//-->
//]]></script>
</body>
</html>
