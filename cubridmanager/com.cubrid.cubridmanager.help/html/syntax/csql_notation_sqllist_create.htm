
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>CREATE문</title>
<link type="text/css" rel="stylesheet" href="../nhelp.css" />
 <meta name="generator" content="Adobe RoboHelp 8" />
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
-->
</style>
<script type="text/javascript" language="javascript1.2" src="../whmsg.js"></script>
<script type="text/javascript" language="javascript" src="../whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whlang.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whtopic.js"></script>

</head>
<body bgcolor="white" text="black" link="blue" vlink="purple" alink="red"><script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.gbWhTopic)
{
	var strUrl = document.location.href;
	var bc = 0;
	var n = strUrl.toLowerCase().indexOf("bc-");
	if(n != -1)
	{
		document.location.href = strUrl.substring(0, n);
		bc = strUrl.substring(n+3);
	}

	if (window.addTocInfo)
	{
	addTocInfo("CUBRID SQL 설명서\nCUBRID SQL 구문\nSQL 문 목록\nCREATE 문");
         if(strUrl.toLowerCase().indexOf("/help/")==-1){

    addButton("show",BTN_TEXT,"Show","","","","",0,0,"","","");

    }


	}
	if (window.writeBtnStyle)
		writeBtnStyle();

	if (window.writeIntopicBar)
		writeIntopicBar(1);if(strUrl.toLowerCase().indexOf("/help/")==-1){

         document.write("<p style=\"text-align:left\"> ");

AddMasterBreadcrumbs("../index.htm", "", "&nbsp;&gt;&nbsp;", "홈", "../cubrid.htm");

document.write("<a href=\"syntax.htm\">CUBRID SQL 설명서<\/a> &nbsp;&gt;&nbsp; <a href=\"csql_notation_sqllist_list.htm\">CUBRID SQL 구문<\/a> &nbsp;&gt;&nbsp; <a href=\"csql_notation_sqllist_list.htm\">SQL 문 목록<\/a> &nbsp;&gt;&nbsp; CREATE 문<\/p>");}


	if (window.setRelStartPage)
	{
	setRelStartPage("../index.htm");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}
}
else
	if (window.gbIE4)
		document.location.reload();

//-->
//]]></script>
<h4>CREATE 문</h4>
<h5 class="var">&lt;create class statement&gt;</h5>
<p class="syntax"><span class="keyword">CREATE</span> { <span class="keyword">CLASS</span> | <span class="keyword">TABLE</span> } &lt;<span class="var">class name</span>&gt;<br />
[ &lt;<span class="var">subclass definition</span>&gt; ]<br />
[ ( &lt;<span class="var">class element comma list</span>&gt; ) ]<br />
[ <span class="keyword">CLASS ATTRIBUTE</span> ( &lt;<span class="var">attribute definition comma list</span>&gt; ) ]<br />
[ ( &lt;<span class="var">class constraint or attribute definition comma list</span>&gt; ) ]</p>
<h5 class="var">&lt;create virtual class statement&gt;</h5>
<p class="syntax"><span class="keyword">CREATE</span> { <span class="keyword">VCLASS</span> | <span class="keyword">VIEW</span> } &lt;<span class="var">class name</span>&gt;<br />
[ &lt;<span class="var">subclass definition</span>&gt; ]<br />
[ <span class="keyword">CLASS ATTRIBUTE</span> ( &lt;<span class="var">attribute definition comma list</span>&gt; ) ]<br />
[ ( &lt;<span class="var">view attribute definition comma list</span>&gt; ) ]<br />
[ <span class="keyword">INHERIT</span> &lt;<span class="var">resolution comma list</span>&gt; ]<br />
[ <span class="keyword">AS</span> &lt;<span class="var">query statement</span>&gt; ]<br />
[ <span class="keyword">WITH CHECK OPTION</span> ]</p>
<h5>&lt;<span class="var">create trigger statement</span>&gt;</h5>
<p class="syntax"><span class="keyword">CREATE TRIGGER</span> &lt;<span class="var">trigger name</span>&gt;<br />
[ <span class="keyword">STATUS</span> { <span class="keyword">ACTIVE</span> | <span class="keyword">INACTIVE</span> } ]<br />
[ <span class="keyword">PRIORITY</span> &lt;<span class="var">trigger key</span>&gt; ]<br />
&lt;<span class="var">trigger event time</span>&gt; &lt;<span class="var">event specification</span>&gt;<br />
[ <span class="keyword">IF</span> &lt;<span class="var">trigger condition</span>&gt; ]<br />
<span class="keyword">EXECUTE</span> [ &lt;<span class="var">trigger action time</span>&gt; ] &lt;<span class="var">trigger action</span>&gt;</p>
<h5>&lt;<span class="var">create serial statement</span>&gt;</h5>
<p class="syntax"><span class="keyword">CREATE SERIAL</span> &lt;<span class="var">serial name</span>&gt;<br />
[ <span class="keyword">START WITH</span> &lt;<span class="var">integer literal</span>&gt; ]</p>
<h5>&lt;<span class="var">subclass definition</span>&gt;</h5>
<p class="syntax"><span class="keyword">AS SUBCLASS OF</span> &lt;<span class="var">class name comma list</span>&gt;</p>
<h5>&lt;<span class="var">class constraint or attribute definition</span>&gt;</h5>
<p class="syntax">{ &lt;<span class="var">class constraint definition</span>&gt; | &lt;<span class="var">attribute definition</span>&gt; }</p>
<h5>&lt;<span class="var">class constraint definition</span>&gt;</h5>
<p class="syntax">[ <span class="keyword">CONSTRAINT</span> &lt;<span class="var">constraint name</span>&gt; ] <span class="keyword">UNIQUE</span> ( &lt;<span class="var">attribute name comma list</span>&gt; )<br />
| [ <span class="keyword">PRIMARY KEY</span> ( &lt;<span class="var">attribute name comma list</span>&gt; ) ]<br />
| [<span class="var">referential constraint</span>]</p>
<h5>&lt;<span class="var">attribute definition</span>&gt;</h5>
<p class="syntax">&lt;<span class="var">general attribute name</span>&gt; &lt;<span class="var">attribute type</span>&gt;<br />
[ &lt;<span class="var">default or shared</span>&gt; ]<br />
[ &lt;<span class="var">attribute constraint list</span>&gt; ]</p>
<h5>&lt;<span class="var">view attribute definition</span>&gt;</h5>
<p class="syntax">&lt;<span class="var">attribute definition</span>&gt; | &lt;<span class="var">attribute name</span>&gt;</p>
<h5>&lt;<span class="var">class element</span>&gt;</h5>
<p class="syntax">&lt;<span class="var">attribute definition</span>&gt; | &lt;<span class="var">class constraint</span>&gt;</p>
<h5>&lt;<span class="var">resolution comma list</span>&gt;</h5>
<p class="syntax">&lt;<span class="var">resolution</span>&gt; [ { , &lt;<span class="var">resolution</span>&gt; }... ]</p>
<h5>&lt;<span class="var">resolution</span>&gt;</h5>
<p class="syntax">&lt;<span class="var">general attribute name</span>&gt; <span class="keyword">OF</span> &lt;<span class="var">class name</span>&gt; [ <span class="keyword">AS</span> &lt;<span class="var">attribute name</span>&gt; ]</p>
<h5>&lt;<span class="var">view attribute definition comma list</span>&gt;</h5>
<p class="syntax">&lt;<span class="var">view attribute definition</span>&gt; [ { , &lt;<span class="var">view attribute definition</span>&gt; }... ]</p>
<h5>&lt;<span class="var">view attribute definition</span>&gt;</h5>
<p class="syntax">&lt;<span class="var">attribute definition</span>&gt; | &lt;<span class="var">attribute name</span>&gt;</p>
<h5>&lt;<span class="var">trigger key</span>&gt;</h5>
<p class="syntax">&lt;<span class="var">unsigned real literal</span>&gt;</p>
<h5>&lt;<span class="var">trigger event time</span>&gt;</h5>
<p class="syntax"><span class="keyword">BEFORE</span> | <span class="keyword">AFTER</span> | <span class="keyword">DEFERRED</span></p>
<h5>&lt;<span class="var">event specification</span>&gt;</h5>
<p class="syntax"><span class="keyword">INSERT ON</span> &lt;<span class="var">event class target</span>&gt;<br />
| <span class="keyword">STATEMENT INSERT ON</span> &lt;<span class="var">event class target</span>&gt;<br />
| <span class="keyword">UPDATE ON</span> { &lt;<span class="var">event class target</span>&gt; | &lt;<span class="var">event class attribute target</span>&gt; }<br />
| <span class="keyword">STATEMENT UPDATE ON</span> { &lt;<span class="var">event class target</span>&gt; | &lt;<span class="var">event class attribute target</span>&gt; }<br />
| <span class="keyword">DELETE ON</span> &lt;<span class="var">event class target</span>&gt;<br />
| <span class="keyword">STATEMENT DELETE ON</span> &lt;<span class="var">event class target</span>&gt;<br />
| <span class="keyword">COMMIT</span><br />
| <span class="keyword">ROLLBACK</span></p>
<h5>&lt;<span class="var">event class target</span>&gt;</h5>
<p class="syntax">&lt;<span class="var">class name</span>&gt;</p>
<h5>&lt;<span class="var">event class attribute target</span>&gt;</h5>
<p class="syntax">&lt;<span class="var">class name</span>&gt; ( &lt;<span class="var">attribute name</span>&gt; )</p>
<h5>&lt;<span class="var">trigger condition</span>&gt;</h5>
<p class="syntax">&lt;<span class="var">search condition</span>&gt;</p>
<h5>&lt;<span class="var">trigger action time</span>&gt;</h5>
<p class="syntax"><span class="keyword">AFTER</span> | <span class="keyword">DEFERRED</span></p>
<h5>&lt;<span class="var">trigger action</span>&gt;</h5>
<p class="syntax"><span class="keyword">REJECT</span><br />
| <span class="keyword">INVALIDATE TRANSACTION</span><br />
| <span class="keyword">PRINT</span> &lt;<span class="var">string literal</span>&gt;<br />
| &lt;<span class="var">call statement</span>&gt;<br />
| &lt;<span class="var">insert statement</span>&gt;<br />
| &lt;<span class="var">delete statement</span>&gt;<br />
| &lt;<span class="var">update statement</span>&gt;</p>
<h5>&lt;<span class="var">general attribute name</span>&gt;</h5>
<p class="syntax">[ <span class="keyword">CLASS</span> ] &lt;<span class="var">attribute name</span>&gt;</p>
<h5>&lt;<span class="var">general method name</span>&gt;</h5>
<p class="syntax">[ <span class="caption">CLASS</span> ] &lt;<span class="var">method name</span>&gt;</p>
<h5>&lt;<span class="var">attribute type</span>&gt;</h5>
<p class="syntax">&lt;<span class="var">domain name</span>&gt;</p>
<h5>&lt;<span class="var">argument type</span>&gt;</h5>
<p class="syntax">&lt;<span class="var">domain name</span>&gt;</p>
<h5>&lt;<span class="var">result type</span>&gt;</h5>
<p class="syntax">&lt;<span class="var">domain name</span>&gt;</p>
<h5>&lt;<span class="var">referential constraint</span>&gt;</h5>
<p class="syntax"><span class="keyword">FOREIGN KEY</span><br />
[<span class="var">constraint name</span>] (<span class="var">attribute name comma list</span>)<br />
<span class="keyword">REFERENCES</span><br />
[<span class="var">referenced table name</span>] (<span class="var">attribute name comma list</span>)<br />
[ &lt;<span class="var">referential triggered action</span>&gt; ]</p>
<h5>&lt;<span class="var">referential triggered action</span>&gt;</h5>
<p class="syntax">&lt;<span class="var">update rule</span>&gt;<br />
[ &lt;<span class="var">delete rule</span>&gt; [ &lt;<span class="var">cache object rule</span>&gt; ] ]</p>
<h5>&lt;<span class="var">update rule</span>&gt;</h5>
<p class="syntax"><span class="keyword">ON UPDATE</span> &lt;<span class="var">referential action</span>&gt;</p>
<h5>&lt;<span class="var">delete rule</span>&gt;</h5>
<p class="syntax"><span class="keyword">ON DELETE</span> &lt;<span class="var">referential action</span>&gt;</p>
<h5>&lt;<span class="var">cache object rule</span>&gt;</h5>
<p class="syntax"><span class="keyword">ON CACHE OBJECT</span> <span class="var">&lt;cache object column name&gt;</span></p>
<h5>&lt;<span class="var">cache object column name&gt;</span></h5>
<p class="syntax">&lt;<span class="var">attribute name</span>&gt;</p>
<h5>&lt;<span class="var">referential action</span>&gt;</h5>
<p class="syntax"><span class="keyword">CASCADE</span> | <span class="keyword">RESTRICT</span> | <span class="keyword">NO ACTION</span></p>
<h5>예제</h5>
<p class="code">CREATE CLASS address (street string, city string); &#160;</p>
<p class="code">CREATE CLASS person (<br />
name string,<br />
birthday date,<br />
residence address,<br />
UNIQUE (name))<br />
METHOD get_age () integer<br />
FILE "/p/xsql/current/bin/person.o";</p>
<p class="code">CREATE CLASS album<br />
(id char(10) NOT NULL PRIMARY KEY,<br />
title varchar(100),<br />
artist varchar(100)<br />
);</p>
<p class="code">CREATE CLASS track<br />
(album char(10),<br />
dsk integer,<br />
posn integer,<br />
song varchar(255),<br />
FOREIGN KEY (album) REFERENCES album(id)<br />
);</p>
<script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);


highlightSearch();
//-->
//]]></script>
</body>
</html>
