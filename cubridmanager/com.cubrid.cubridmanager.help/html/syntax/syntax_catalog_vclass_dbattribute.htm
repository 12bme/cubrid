
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>DB_ATTRIBUTE</title>
<link type="text/css" rel="stylesheet" href="../nhelp.css" />
 <meta name="generator" content="Adobe RoboHelp 8" />
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
-->
</style>
<script type="text/javascript" language="javascript1.2" src="../whmsg.js"></script>
<script type="text/javascript" language="javascript" src="../whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whlang.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whtopic.js"></script>

</head>
<body><script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.gbWhTopic)
{
	var strUrl = document.location.href;
	var bc = 0;
	var n = strUrl.toLowerCase().indexOf("bc-");
	if(n != -1)
	{
		document.location.href = strUrl.substring(0, n);
		bc = strUrl.substring(n+3);
	}

	if (window.addTocInfo)
	{
	addTocInfo("CUBRID SQL 설명서\nCUBRID 시스템 카탈로그\n시스템 카탈로그 가상 클래스\nDB_ATTRIBUTE");
         if(strUrl.toLowerCase().indexOf("/help/")==-1){

    addButton("show",BTN_TEXT,"Show","","","","",0,0,"","","");

    }


	}
	if (window.writeBtnStyle)
		writeBtnStyle();

	if (window.writeIntopicBar)
		writeIntopicBar(1);if(strUrl.toLowerCase().indexOf("/help/")==-1){

         document.write("<p style=\"text-align:left\"> ");

AddMasterBreadcrumbs("../index.htm", "", "&nbsp;&gt;&nbsp;", "홈", "../cubrid.htm");

document.write("<a href=\"syntax.htm\">CUBRID SQL 설명서<\/a> &nbsp;&gt;&nbsp; <a href=\"syntax_catalog_intro.htm\">CUBRID 시스템 카탈로그<\/a> &nbsp;&gt;&nbsp; <a href=\"syntax_catalog_vclass_vclass.htm\">시스템 카탈로그 가상 클래스<\/a> &nbsp;&gt;&nbsp; DB_ATTRIBUTE<\/p>");}


	if (window.setRelStartPage)
	{
	setRelStartPage("../index.htm");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}
}
else
	if (window.gbIE4)
		document.location.reload();

//-->
//]]></script>
<h4>DB_ATTRIBUTE</h4>
<p>데이터베이스 내에서 현재 사용자가 접근 권한을 가진 클래스에 대해 그 속성 정보를 보여준다.</p>
<table border="1" width="80%">
<thead>
<tr>
<th width="120">
<p>속성명</p>
</th>
<th width="110">
<p>데이터 타입</p>
</th>
<th>
<p>설명</p>
</th>
</tr>
</thead>
<tbody>
<tr>
<td width="120">
<p>attr_name</p>
</td>
<td width="110">
<p>VARCHAR (255)</p>
</td>
<td>
<p>속성명</p>
</td>
</tr>
<tr>
<td width="120">
<p>class_name</p>
</td>
<td width="110">
<p>VARCHAR (255)</p>
</td>
<td>
<p>속성이 속한 클래스명</p>
</td>
</tr>
<tr>
<td width="120">
<p>attr_type</p>
</td>
<td width="110">
<p>VARCHAR (8)</p>
</td>
<td>
<p>인스턴스 속성이면 ‘INSTANCE’, 클래스 속성이면 ‘CLASS’, 공유 속성이면 ‘SHARED’</p>
</td>
</tr>
<tr>
<td width="120">
<p>def_order</p>
</td>
<td width="110">
<p>INTEGER</p>
</td>
<td>
<p>클래스에서 속성이 정의된 순서로 0부터 시작함. 상속받은 속성이면&#160;그 상위 클래스에서 정의된 순서임.</p>
</td>
</tr>
<tr>
<td width="120">
<p>from_class_name</p>
</td>
<td width="110">
<p>VARCHAR (255)</p>
</td>
<td>
<p>상속받은 속성이면 그 속성이 정의되어 있는 상위 클래스명이 설정되며, 그렇지 않으면 <span class="keyword">NULL</span></p>
</td>
</tr>
<tr>
<td width="120">
<p>from_attr_name</p>
</td>
<td width="110">
<p>VARCHAR (255)</p>
</td>
<td>
<p>상속받은 속성이며,&#160;이름 충돌이 발생하여 이를 해결하기 위해 그 속성명이 바뀐 경우, 상위 클래스에 정의된 원래 이름임. 그 이외에는 모두 <span class="keyword">NULL</span></p>
</td>
</tr>
<tr>
<td width="120">
<p>data_type</p>
</td>
<td width="110">
<p>VARCHAR (9)</p>
</td>
<td>
<p>속성의 데이터 타입(<a href="syntax_catalog_class_dbattribute.htm">_db_attribute</a>의 'CUBRID가 지원하는 데이터 타입' 표의 '의미' 중 하나)</p>
</td>
</tr>
<tr>
<td width="120">
<p>prec</p>
</td>
<td width="110">
<p>INTEGER</p>
</td>
<td>
<p>데이터 타입의 전체 자릿수. 전체 자릿수가 명시되지 않은 경우 0임</p>
</td>
</tr>
<tr>
<td width="120">
<p>scale</p>
</td>
<td width="110">
<p>INTEGER</p>
</td>
<td>
<p>데이터 타입의 소수점 이하의 자릿수. 소수점 이하의 자릿수가 명시되지 않은 경우 0임</p>
</td>
</tr>
<tr>
<td width="120">
<p>code_set</p>
</td>
<td width="110">
<p>INTEGER</p>
</td>
<td>
<p>데이터 타입이 문자 타입인 경우 그 문자 집합(<a href="syntax_catalog_class_dbattribute.htm">_db_attribute</a>의 'CUBRID가 지원하는 문자 집합' 표의 '값'&#160;중 하나). 문자 타입이 아닌 경우 0.</p>
</td>
</tr>
<tr>
<td width="120">
<p>domain_class_name</p>
</td>
<td width="110">
<p>VARCHAR (255)</p>
</td>
<td>
<p>데이터 타입이 객체 타입인 경우 그 도메인 클래스명. 객체 타입이 아닌 경우 <span class="keyword">NULL</span></p>
</td>
</tr>
<tr>
<td width="120">
<p>default_value</p>
</td>
<td width="110">
<p>VARCHAR (255)</p>
</td>
<td>
<p>기본 값으 로서 그 데이터 타입에 관계없이 모두 문자열로 저장. 기본 값이 없으면 <span class="keyword">NULL</span>, 기본 값이 <span class="keyword">NULL</span>이면 'NULL'로 표현됨. 데이터 타입이 객체 타입이면 ‘volume id | page id | slot id ’, 집합 타입이면 ‘ {element 1, element 2, …}’로 표현됨.</p>
</td>
</tr>
<tr>
<td width="120">
<p>is_nullable</p>
</td>
<td width="110">
<p>VARCHAR (3)</p>
</td>
<td>
<p>not null 제약이 설정되어 있으면 'NO', 그렇지 않으면 'YES'</p>
</td>
</tr>
</tbody>
</table>
<h6>정의</h6>
<p class="code">CREATE VCLASS db_attribute (<br />
attr_name, class_name, attr_type, def_order, from_class_name, from_attr_name, data_type, prec, scale, code_set, domain_class_name, default_value, is_nullable)<br />
AS<br />
SELECT a.attr_name, c.class_name,<br />
&#160;&#160;&#160;&#160;&#160;&#160; CASE WHEN a.attr_type = 0 THEN 'INSTANCE'<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160; &#160;&#160;&#160;&#160;WHEN a.attr_type = 1 THEN 'CLASS'<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ELSE 'SHARED' END,<br />
&#160;&#160;&#160;&#160;&#160;&#160; a.def_order, a.from_class_of.class_name, a.from_attr_name, t.type_name,<br />
&#160;&#160;&#160;&#160;&#160;&#160; d.prec, d.scale, d.code_set, d.class_of.class_name, a.default_value,<br />
&#160;&#160;&#160;&#160;&#160;&#160; CASE WHEN a.is_nullable = 0 THEN 'YES' ELSE 'NO' END<br />
FROM _db_class c, _db_attribute a, _db_domain d, _db_data_type t<br />
WHERE a.class_of = c AND d.object_of = a AND d.data_type = t.type_id AND<br />
&#160;&#160;&#160;&#160;&#160; &#160;&#160;(CURRENT_USER = 'DBA' OR<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160; {c.owner.name} subseteq (<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; SELECT set{CURRENT_USER} + coalesce(sum(set{t.g.name}), set{})<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; from db_user u, table(groups) as t(g)<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; where u.name = CURRENT_USER ) OR<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160; {c} subseteq (<br />
SELECT sum(set{au.class_of})<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; FROM _db_auth au<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; WHERE {au.grantee.name} subseteq (<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; SELECT set{CURRENT_USER} + coalesce(sum(set{t.g.name}), set{})<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; from db_user u, table(groups) as t(g)<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; where u.name = CURRENT_USER ) AND<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;au.auth_type = 'SELECT'));</p>
<h6>예제</h6>
<ul>
<li>다음 예제에서는 클래스 ‘event’의 속성과 각 데이터 타입을 검색한다.</li>
</ul>
<p class="code">csql&gt; select attr_name, data_type, domain_class_name<br />
csql&gt; from db_attribute<br />
csql&gt; where class_name = 'event'<br />
csql&gt; order by def_order;<br />
csql&gt; ;xrun<br />
&#160;<br />
=== &lt;Result of SELECT Command in Line 1&gt; ===<br />
&#160;<br />
&#160; attr_name&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; data_type&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; domain_class_name<br />
==================================================================<br />
&#160; 'code'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'INTEGER'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; NULL<br />
&#160; 'sports'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'STRING'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; NULL<br />
&#160; 'name'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'STRING'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; NULL<br />
&#160; 'gender'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'CHAR'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; NULL<br />
&#160; 'players'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'INTEGER'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; NULL</p>
<ul>
<li>다음 예제에서는 클래스 ‘female_event’와 그 상위 클래스의 속성을 검색한다.</li>
</ul>
<p class="code">csql&gt; select attr_name, from_class_name<br />
csql&gt; from db_attribute<br />
csql&gt; where class_name = 'female_event'<br />
csql&gt; order by def_order;<br />
csql&gt; ;xrun<br />
&#160;<br />
=== &lt;Result of SELECT Command in Line 1&gt; ===<br />
&#160;<br />
&#160; attr_name&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; from_class_name<br />
============================================<br />
&#160; 'code'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'event'<br />
&#160; 'sports'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'event'<br />
&#160; 'name'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'event'<br />
&#160; 'gender'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'event'<br />
&#160; 'players'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'event'</p>
<ul>
<li>다음 예제에서는 현재 사용자가 소유하고 있는 클래스 중에서 속성명이 ‘name’과 유사한 클래스를 검색한다. (사용자는 <span class="keyword">PUBLIC</span>)</li>
</ul>
<p class="code">csql&gt; select a.class_name, a.attr_name<br />
csql&gt; from db_class c join db_attribute a<br />
csql&gt; on c.class_name = a.class_name<br />
csql&gt; where c.owner_name = CURRENT_USER and<br />
csql&gt;&#160;&#160;&#160;&#160;&#160;&#160; attr_name like '%name%'<br />
csql&gt; order by 1;<br />
csql&gt; ;xrun<br />
&#160;<br />
=== &lt;Result of SELECT Command in Line 1&gt; ===<br />
&#160;<br />
&#160; class_name&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; attr_name<br />
============================================<br />
&#160; 'athlete'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'name'<br />
&#160; 'code'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'f_name'<br />
&#160; 'code'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 's_name'<br />
&#160; 'event'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'name'<br />
&#160; 'female_event'&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'name'<br />
&#160; 'nation'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'name'<br />
&#160; 'stadium'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'name'</p>
<script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);


highlightSearch();
//-->
//]]></script>
</body>
</html>
