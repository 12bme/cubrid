
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>DB_ATTR_SETDOMAIN_ELM</title>
<link type="text/css" rel="stylesheet" href="../nhelp.css" />
 <meta name="generator" content="Adobe RoboHelp 8" />
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
-->
</style>
<script type="text/javascript" language="javascript1.2" src="../whmsg.js"></script>
<script type="text/javascript" language="javascript" src="../whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whlang.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whtopic.js"></script>

</head>
<body><script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.gbWhTopic)
{
	var strUrl = document.location.href;
	var bc = 0;
	var n = strUrl.toLowerCase().indexOf("bc-");
	if(n != -1)
	{
		document.location.href = strUrl.substring(0, n);
		bc = strUrl.substring(n+3);
	}

	if (window.addTocInfo)
	{
	addTocInfo("CUBRID SQL 설명서\nCUBRID 시스템 카탈로그\n시스템 카탈로그 가상 클래스\nDB_ATTR_SETDOMAIN_ELM");
         if(strUrl.toLowerCase().indexOf("/help/")==-1){

    addButton("show",BTN_TEXT,"Show","","","","",0,0,"","","");

    }


	}
	if (window.writeBtnStyle)
		writeBtnStyle();

	if (window.writeIntopicBar)
		writeIntopicBar(1);if(strUrl.toLowerCase().indexOf("/help/")==-1){

         document.write("<p style=\"text-align:left\"> ");

AddMasterBreadcrumbs("../index.htm", "", "&nbsp;&gt;&nbsp;", "홈", "../cubrid.htm");

document.write("<a href=\"syntax.htm\">CUBRID SQL 설명서<\/a> &nbsp;&gt;&nbsp; <a href=\"syntax_catalog_intro.htm\">CUBRID 시스템 카탈로그<\/a> &nbsp;&gt;&nbsp; <a href=\"syntax_catalog_vclass_vclass.htm\">시스템 카탈로그 가상 클래스<\/a> &nbsp;&gt;&nbsp; DB_ATTR_SETDOMAIN_ELM<\/p>");}


	if (window.setRelStartPage)
	{
	setRelStartPage("../index.htm");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}
}
else
	if (window.gbIE4)
		document.location.reload();

//-->
//]]></script>
<h4>DB_ATTR_SETDOMAIN_ELM</h4>
<p>데이터베이스 내에서 현재 사용자가 접근 권한을 가진 클래스의 속성 중에서 그 데이터 타입이 집합 타입 (set, multiset, sequence)인 경우, 그 집합의 원소에 대한 데이터 타입을 보여준다.</p>
<table border="1" width="80%">
<tbody>
<tr>
<th width="120">
<p>속성명</p>
</th>
<th width="100">
<p>데이터 타입</p>
</th>
<th>
<p>설명</p>
</th>
</tr>
<tr>
<td width="120">
<p>attr_name</p>
</td>
<td width="100">
<p>VARCHAR(255)</p>
</td>
<td>
<p>속성명</p>
</td>
</tr>
<tr>
<td width="120">
<p>class_name</p>
</td>
<td width="100">
<p>VARCHAR (255)</p>
</td>
<td>
<p>속성이 속한 클래스명</p>
</td>
</tr>
<tr>
<td width="120">
<p>attr_type</p>
</td>
<td width="100">
<p>VARCHAR (8)</p>
</td>
<td>
<p>인스턴스 속성이면 ‘INSTANCE’, 클래스 속성이면 ‘CLASS’, 공유 속성이면 ‘SHARED’</p>
</td>
</tr>
<tr>
<td width="120">
<p>data_type</p>
</td>
<td width="100">
<p>VARCHAR (9)</p>
</td>
<td>
<p>원소의 데이터 타입</p>
</td>
</tr>
<tr>
<td width="120">
<p>Prec</p>
</td>
<td width="100">
<p>INTEGER</p>
</td>
<td>
<p>원소의 데이터 타입에 대한 전체 자릿수</p>
</td>
</tr>
<tr>
<td width="120">
<p>scale</p>
</td>
<td width="100">
<p>INTEGER</p>
</td>
<td>
<p>원소의 데이터 타입에 대한 소수점 이하의 자릿수</p>
</td>
</tr>
<tr>
<td width="120">
<p>code_set</p>
</td>
<td width="100">
<p>INTEGER</p>
</td>
<td>
<p>원소의 데이터 타입이 문자 타입인 경우 그 문자집합</p>
</td>
</tr>
<tr>
<td width="120">
<p>domain_class_name</p>
</td>
<td width="100">
<p>VARCHAR (255)</p>
</td>
<td>
<p>원소의 데이터 타입이 객체 타입인 경우 그 도메인 클래스명</p>
</td>
</tr>
</tbody>
</table>
<h6>정의</h6>
<p class="code">CREATE VCLASS db_attr_setdomain_elm (<br />
attr_name, class_name, attr_type,data_type, prec, scale, code_set, domain_class_name)<br />
AS<br />
SELECT a.attr_name, c.class_name,<br />
&#160;&#160;&#160;&#160;&#160;&#160; CASE WHEN a.attr_type = 0 THEN 'INSTANCE'<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; WHEN a.attr_type = 1 THEN 'CLASS'<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ELSE 'SHARED' END,<br />
&#160;&#160;&#160;&#160;&#160;&#160; et.type_name, e.prec, e.scale, e.code_set, e.class_of.class_name<br />
FROM _db_class c, _db_attribute a, _db_domain d,<br />
&#160;&#160;&#160;&#160; &#160;TABLE(d.set_domains) AS t(e), _db_data_type et<br />
WHERE a.class_of = c AND d.object_of = a AND e.data_type = et.type_id AND<br />
&#160;&#160;&#160; &#160;&#160;&#160;&#160;(CURRENT_USER = 'DBA' OR<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160; {c.owner.name} subseteq (<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; SELECT set{CURRENT_USER} + coalesce(sum(set{t.g.name}), set{})<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; from db_user u, table(groups) as t(g)<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; where u.name = CURRENT_USER ) OR<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160; {c} subseteq (<br />
SELECT sum(set{au.class_of})<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; FROM _db_auth au<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; WHERE {au.grantee.name} subseteq (<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; SELECT set{CURRENT_USER} + coalesce(sum(set{t.g.name}), set{})<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; from db_user u, table(groups) as t(g)<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; where u.name = CURRENT_USER ) AND<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;au.auth_type = 'SELECT'));&#160;</p>
<p>가령 클래스 D의 속성 set_attr 이 SET(A, B, C) 타입이면 다음 세 개의 레코드들이 존재하게 된다.</p>
<table border="1">
<tbody>
<tr>
<th width="80">
<p>Attr_name</p>
</th>
<th width="80">
<p>Class_name</p>
</th>
<th width="80">
<p>Attr_type</p>
</th>
<th width="80">
<p>Data_type</p>
</th>
<th width="60">
<p>Prec</p>
</th>
<th width="60">
<p>Scale</p>
</th>
<th width="60">
<p>Code_set</p>
</th>
<th width="100">
<p>Domain_class_name</p>
</th>
</tr>
<tr>
<td width="80">
<p>‘set_attr’</p>
</td>
<td width="80">
<p>‘D’</p>
</td>
<td width="80">
<p>‘INSTANCE’</p>
</td>
<td width="80">
<p>‘SET’</p>
</td>
<td width="60">
<p>0</p>
</td>
<td width="60">
<p>0</p>
</td>
<td width="60">
<p>0</p>
</td>
<td width="100">
<p>‘A’</p>
</td>
</tr>
<tr>
<td width="80">
<p>‘set_attr’</p>
</td>
<td width="80">
<p>‘D’</p>
</td>
<td width="80">
<p>‘INSTANCE’</p>
</td>
<td width="80">
<p>‘SET’</p>
</td>
<td width="60">
<p>0</p>
</td>
<td width="60">
<p>0</p>
</td>
<td width="60">
<p>0</p>
</td>
<td width="100">
<p>‘B’</p>
</td>
</tr>
<tr>
<td width="80">
<p>‘set_attr’</p>
</td>
<td width="80">
<p>‘D’</p>
</td>
<td width="80">
<p>‘INSTANCE’</p>
</td>
<td width="80">
<p>‘SET’</p>
</td>
<td width="60">
<p>0</p>
</td>
<td width="60">
<p>0</p>
</td>
<td width="60">
<p>0</p>
</td>
<td width="100">
<p>‘C’</p>
</td>
</tr>
</tbody>
</table>
<h6>예제</h6>
<p>다음 예제에서는 클래스 ‘city’의 집합 타입의 속성과 각 데이터 타입을 검색한다. (<a href="syntax_operator_contain_contain.htm">포함 연산자</a>에 정의한 city 테이블을 생성)</p>
<p class="code">csql&gt; select attr_name, attr_type, data_type, domain_class_name<br />
csql&gt; from db_attr_setdomain_elm<br />
csql&gt; where class_name = 'city';<br />
csql&gt; ;xrun<br />
<br />
=== &lt;Result of SELECT Command in Line 1&gt; ===<br />
&#160;<br />
&#160; attr_name&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; attr_type&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; data_type&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; domain_class_name<br />
==============================================================================<br />
&#160;<br />
'sports'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'INSTANCE'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'STRING'&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; NULL</p>
<script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);


highlightSearch();
//-->
//]]></script>
</body>
</html>
